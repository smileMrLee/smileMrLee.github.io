### 架构图
![架构图](/img/hbase-01.png)

### 数据模型
![数据模型1](/img/hbase-02.png)
![数据模型1](/img/hbase-03.png)

### 存储模型
![存储模型1](/img/hbase-04.png)

![存储模型2](/img/hbase-05.png)

### 适合场景
- 适合场景 （综合考虑）
    - 原则上：
        > 能分库分表来用mysql就用mysql来解决
        > mysql 单表一般500w，能使用mysql的场景
    - 表数据量大（至少亿级别以上）
    - 日志append型业务，（比如定期保留10天数据等）
    - 无跨行跨表事务要求
    - 写入量大 (每天千万及以上)
    - 读取量相对少 (读取:写入 <= 1/10)
    - 读取场景简单、不经常变化
    - 无正序、逆序的排序要求
    - 类似dw等全量读取，不太合适。
    - Rowkey不经常更新 （必须先删除再添加）

- 已有业务场景

    - 海量数据写入  
        > 历史交易订单、ECRM火炬 – 卖家数据中心系统批量写入
    - 消息类（类似Facebook的message）
        > 旺旺聊天消息
    - Schema-free  
        > uic_log、安全审计监控 
    - LOG-Append类的业务 
        > 全网HSF日志,全网每天50
        > 风控Log
    - 大表的复杂/多维度索引
        > 淘客的检索索引，主数据在mysql
    - 分析类 
        > UDC 


