{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"smileMrLee \u6211\u4eec\u6e3a\u5c0f\uff0c\u4f46\u4e0d\u5351\u8d31\uff1b\u6211\u4eec\u5e73\u51e1\uff0c\u4f46\u4e0d\u5e73\u5eb8\u3002 csdn\u535a\u5ba2 .","title":"smileMrLee"},{"location":"#smilemrlee","text":"\u6211\u4eec\u6e3a\u5c0f\uff0c\u4f46\u4e0d\u5351\u8d31\uff1b\u6211\u4eec\u5e73\u51e1\uff0c\u4f46\u4e0d\u5e73\u5eb8\u3002 csdn\u535a\u5ba2 .","title":"smileMrLee"},{"location":"%E5%AD%A6%E4%B9%A0ing/ElasticSearch%206%20%E5%AD%A6%E4%B9%A0/","text":"ElasticSearch 6 \u5b66\u4e60 docker\u5b89\u88c5 \u62c9\u53d6\u955c\u50cf: $ docker pull elasticsearch:6.8.0 docker \u542f\u52a8 $ docker network create somenetwork $ docker run -d --name elasticsearch --net somenetwork -p 9200:9200 -p 9300:9300 -e \"discovery.type=single-node\" elasticsearch:6.8.0 \u9a8c\u8bc1 \u70b9\u51fb\u8bbf\u95ee\uff1ahttp://localhost:9200/ \u51fa\u73b0 \u67e5\u770b\u65e5\u5fd7 $ docker logs elaesticsearch \u8fdb\u5165elasticsearch \u5bb9\u5668 $ docker exec -it elasticsearch /bin/bash \u603b\u7ed3 \u5f53\u6211\u4eec\u9700\u8981\u8fd0\u8425\u4e00\u4e2a\u670d\u52a1\uff0c\u6bd4\u5982ElasticSearch\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9996\u5148\u4ece\u8fdc\u7a0b\u955c\u50cf\u4ed3\u5e93\u62c9\u53d6\u6307\u5b9a\u7248\u672c\uff08tag\uff09\uff0c\u4e0d\u6307\u5b9a\u5177\u4f53\u7684tag\uff0c\u5219\u9ed8\u8ba4\u62c9\u53d6last\u7248\u672c\uff0clast\u7248\u672c\u6709\u53ef\u80fd\u4e0d\u662f\u7a33\u5b9a\u7248\u672c\u3002\u5f53\u6211\u4eec\u6210\u529f\u83b7\u53d6\u5230image\u955c\u50cf\u4e4b\u540e\uff0c\u5219\u53ef\u4ee5\u542f\u52a8\u955c\u50cf\uff0c\u6b64\u65f6\u5c5e\u4e8e\u751f\u6210\u4e86\u4e00\u4e2a\u5bb9\u5668\u3002\u4e0b\u4e00\u6b21\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u518d\u6267\u884c\u540c\u6837\u7684run\u811a\u672c\u3002\u800c\u662f\u76f4\u63a5\u4f7f\u7528docker start ${\u5bb9\u5668ID}.\u5373\u53ef\u542f\u52a8\u3002 \u81f3\u6b64\uff0c\u955c\u50cf\u548c\u5bb9\u5668\u4e4b\u95f4\u7684\u5173\u7cfb\u5df2\u7ecf\u975e\u5e38\u660e\u786e\u4e86\u3002\u955c\u50cf\u662f\u4e00\u4e2a\u6a21\u677f\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u955c\u50cf\u4e0d\u65ad\u521b\u5efa\u4e0d\u540c\u7684\u5bb9\u5668\uff0c\u4e0d\u540c\u7684\u5bb9\u5668\u6709\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f\u3002","title":"ElasticSearch 6 \u5b66\u4e60"},{"location":"%E5%AD%A6%E4%B9%A0ing/ElasticSearch%206%20%E5%AD%A6%E4%B9%A0/#elasticsearch-6","text":"","title":"ElasticSearch 6 \u5b66\u4e60"},{"location":"%E5%AD%A6%E4%B9%A0ing/ElasticSearch%206%20%E5%AD%A6%E4%B9%A0/#docker","text":"\u62c9\u53d6\u955c\u50cf: $ docker pull elasticsearch:6.8.0","title":"docker\u5b89\u88c5"},{"location":"%E5%AD%A6%E4%B9%A0ing/ElasticSearch%206%20%E5%AD%A6%E4%B9%A0/#docker_1","text":"$ docker network create somenetwork $ docker run -d --name elasticsearch --net somenetwork -p 9200:9200 -p 9300:9300 -e \"discovery.type=single-node\" elasticsearch:6.8.0","title":"docker \u542f\u52a8"},{"location":"%E5%AD%A6%E4%B9%A0ing/ElasticSearch%206%20%E5%AD%A6%E4%B9%A0/#_1","text":"\u70b9\u51fb\u8bbf\u95ee\uff1ahttp://localhost:9200/ \u51fa\u73b0","title":"\u9a8c\u8bc1"},{"location":"%E5%AD%A6%E4%B9%A0ing/ElasticSearch%206%20%E5%AD%A6%E4%B9%A0/#_2","text":"$ docker logs elaesticsearch","title":"\u67e5\u770b\u65e5\u5fd7"},{"location":"%E5%AD%A6%E4%B9%A0ing/ElasticSearch%206%20%E5%AD%A6%E4%B9%A0/#elasticsearch","text":"$ docker exec -it elasticsearch /bin/bash","title":"\u8fdb\u5165elasticsearch \u5bb9\u5668"},{"location":"%E5%AD%A6%E4%B9%A0ing/ElasticSearch%206%20%E5%AD%A6%E4%B9%A0/#_3","text":"\u5f53\u6211\u4eec\u9700\u8981\u8fd0\u8425\u4e00\u4e2a\u670d\u52a1\uff0c\u6bd4\u5982ElasticSearch\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9996\u5148\u4ece\u8fdc\u7a0b\u955c\u50cf\u4ed3\u5e93\u62c9\u53d6\u6307\u5b9a\u7248\u672c\uff08tag\uff09\uff0c\u4e0d\u6307\u5b9a\u5177\u4f53\u7684tag\uff0c\u5219\u9ed8\u8ba4\u62c9\u53d6last\u7248\u672c\uff0clast\u7248\u672c\u6709\u53ef\u80fd\u4e0d\u662f\u7a33\u5b9a\u7248\u672c\u3002\u5f53\u6211\u4eec\u6210\u529f\u83b7\u53d6\u5230image\u955c\u50cf\u4e4b\u540e\uff0c\u5219\u53ef\u4ee5\u542f\u52a8\u955c\u50cf\uff0c\u6b64\u65f6\u5c5e\u4e8e\u751f\u6210\u4e86\u4e00\u4e2a\u5bb9\u5668\u3002\u4e0b\u4e00\u6b21\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u518d\u6267\u884c\u540c\u6837\u7684run\u811a\u672c\u3002\u800c\u662f\u76f4\u63a5\u4f7f\u7528docker start ${\u5bb9\u5668ID}.\u5373\u53ef\u542f\u52a8\u3002 \u81f3\u6b64\uff0c\u955c\u50cf\u548c\u5bb9\u5668\u4e4b\u95f4\u7684\u5173\u7cfb\u5df2\u7ecf\u975e\u5e38\u660e\u786e\u4e86\u3002\u955c\u50cf\u662f\u4e00\u4e2a\u6a21\u677f\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u955c\u50cf\u4e0d\u65ad\u521b\u5efa\u4e0d\u540c\u7684\u5bb9\u5668\uff0c\u4e0d\u540c\u7684\u5bb9\u5668\u6709\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AD%A6%E4%B9%A0ing/TiDB%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"TiDB \u5b66\u4e60\u7b14\u8bb0 \u6807\u7b7e NewSQL \u517c\u5bb9MySQL \u652f\u6301ACID \u652f\u6301SQL\u67e5\u8be2 \u65e0\u9650\u6c34\u5e73\u6269\u5c55 Raft\u534f\u8bae \u67b6\u6784 \u7531 PD Server\u3001TiDB Server\u3001TiKV Server \u4e09\u90e8\u5206\u7ec4\u6210 - PD Server \u8d1f\u8d23\u5b58\u50a8\u96c6\u7fa4\u5143\u6570\u636e\u3001\u5206\u914d\u5168\u5c40\u4e8b\u52a1ID\u3001\u8d1f\u8d23TiKV\u96c6\u7fa4\u6570\u636e\u8c03\u5ea6\u548c\u8d1f\u8f7d\u5747\u8861 - TiDB Server \u63a5\u6536\u7528\u6237\u8bf7\u6c42\uff0c\u89e3\u6790\u6267\u884c\u8ba1\u5212\uff0c\u4f9d\u9760PD Server \u8fdb\u884c\u6570\u636e\u5bfb\u5740\uff0c\u7136\u540e\u4e0eTiKV Server \u8282\u70b9\u4ea4\u4e92\u8fdb\u884c\u67e5\u8be2 - TiKV Server \u8d1f\u8d23\u5b58\u50a8\u96c6\u7fa4\u6570\u636e \u67b6\u6784\u56fe \u80fd\u529b\u7279\u5f81 \u9ad8\u53ef\u7528 \u9ad8\u6548\u5b58\u50a8\u65b9\u6848 TiKV\u96c6\u7fa4\u5b58\u50a8\u7684\u6570\u636e\u683c\u5f0f\u662fKV\u683c\u5f0f\u7684\uff0c\u901a\u8fc7RocksDB\u5b9e\u73b0\u4e86TB\u7ea7\u522b\u7684\u672c\u5730\u5316\u5b58\u50a8\u65b9\u6848\uff0cRocksDB\u548cHBASE\u4e00\u6837\uff0c\u90fd\u662f\u901a\u8fc7 LSM\u6811\u4f5c\u4e3a\u5b58\u50a8\u65b9\u6848\uff0c\u907f\u514d\u4e86B+\u6811\u53f6\u5b50\u8282\u70b9\u81a8\u80c0\u5e26\u6765\u7684\u5927\u91cf\u968f\u673a\u8bfb\u5199\u3002 \u517c\u5bb9MySQL TiDB\u57fa\u672c\u517c\u5bb9\u4e86MySQL\uff0c\u53ef\u4ee5\u900f\u660e\u5730\u4eceMySQL\u5207\u6362\u5230TiDB\uff0c\u8fd0\u7ef4\u4f7f\u7528\u65f6\u4e5f\u53ef\u4ee5\u5c06TiDB\u5f53\u505a\u4e00\u4e2a\u4ece\u5e93\u6302\u5230MySQL\u4e3b\u4ece\u67b6\u6784\u4e2d\u3002 \u76d1\u63a7 TiDB\u4e2d\u9009\u62e9\u4e86\u5f00\u6e90\u7684Prometheus\u4f5c\u4e3a\u6574\u4e2a\u96c6\u7fa4\u7684\u76d1\u63a7\u3002 \u8282\u70b9\u901a\u8fc7Multiple\u89d2\u8272\u6536\u96c6\u3001\u4e0a\u62a5\u76d1\u63a7\u6570\u636e\uff0cPushGateWay\u63a5\u6536\u6570\u636e\uff0c\u5e76\u63d0\u4f9b\u7ed9Prometheus\u8fdb\u884c\u8bfb\u53d6\uff0c\u6700\u540e\u901a\u8fc7Grafana\u8fdb\u884c\u53ef\u89c6\u5316\u548c\u76d1\u63a7\u67e5\u8be2\u3002","title":"TiDB \u5b66\u4e60\u7b14\u8bb0"},{"location":"%E5%AD%A6%E4%B9%A0ing/TiDB%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#tidb","text":"","title":"TiDB \u5b66\u4e60\u7b14\u8bb0"},{"location":"%E5%AD%A6%E4%B9%A0ing/TiDB%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_1","text":"NewSQL \u517c\u5bb9MySQL \u652f\u6301ACID \u652f\u6301SQL\u67e5\u8be2 \u65e0\u9650\u6c34\u5e73\u6269\u5c55 Raft\u534f\u8bae","title":"\u6807\u7b7e"},{"location":"%E5%AD%A6%E4%B9%A0ing/TiDB%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_2","text":"\u7531 PD Server\u3001TiDB Server\u3001TiKV Server \u4e09\u90e8\u5206\u7ec4\u6210 - PD Server \u8d1f\u8d23\u5b58\u50a8\u96c6\u7fa4\u5143\u6570\u636e\u3001\u5206\u914d\u5168\u5c40\u4e8b\u52a1ID\u3001\u8d1f\u8d23TiKV\u96c6\u7fa4\u6570\u636e\u8c03\u5ea6\u548c\u8d1f\u8f7d\u5747\u8861 - TiDB Server \u63a5\u6536\u7528\u6237\u8bf7\u6c42\uff0c\u89e3\u6790\u6267\u884c\u8ba1\u5212\uff0c\u4f9d\u9760PD Server \u8fdb\u884c\u6570\u636e\u5bfb\u5740\uff0c\u7136\u540e\u4e0eTiKV Server \u8282\u70b9\u4ea4\u4e92\u8fdb\u884c\u67e5\u8be2 - TiKV Server \u8d1f\u8d23\u5b58\u50a8\u96c6\u7fa4\u6570\u636e \u67b6\u6784\u56fe \u80fd\u529b\u7279\u5f81 \u9ad8\u53ef\u7528 \u9ad8\u6548\u5b58\u50a8\u65b9\u6848 TiKV\u96c6\u7fa4\u5b58\u50a8\u7684\u6570\u636e\u683c\u5f0f\u662fKV\u683c\u5f0f\u7684\uff0c\u901a\u8fc7RocksDB\u5b9e\u73b0\u4e86TB\u7ea7\u522b\u7684\u672c\u5730\u5316\u5b58\u50a8\u65b9\u6848\uff0cRocksDB\u548cHBASE\u4e00\u6837\uff0c\u90fd\u662f\u901a\u8fc7 LSM\u6811\u4f5c\u4e3a\u5b58\u50a8\u65b9\u6848\uff0c\u907f\u514d\u4e86B+\u6811\u53f6\u5b50\u8282\u70b9\u81a8\u80c0\u5e26\u6765\u7684\u5927\u91cf\u968f\u673a\u8bfb\u5199\u3002","title":"\u67b6\u6784"},{"location":"%E5%AD%A6%E4%B9%A0ing/TiDB%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#mysql","text":"TiDB\u57fa\u672c\u517c\u5bb9\u4e86MySQL\uff0c\u53ef\u4ee5\u900f\u660e\u5730\u4eceMySQL\u5207\u6362\u5230TiDB\uff0c\u8fd0\u7ef4\u4f7f\u7528\u65f6\u4e5f\u53ef\u4ee5\u5c06TiDB\u5f53\u505a\u4e00\u4e2a\u4ece\u5e93\u6302\u5230MySQL\u4e3b\u4ece\u67b6\u6784\u4e2d\u3002","title":"\u517c\u5bb9MySQL"},{"location":"%E5%AD%A6%E4%B9%A0ing/TiDB%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_3","text":"TiDB\u4e2d\u9009\u62e9\u4e86\u5f00\u6e90\u7684Prometheus\u4f5c\u4e3a\u6574\u4e2a\u96c6\u7fa4\u7684\u76d1\u63a7\u3002 \u8282\u70b9\u901a\u8fc7Multiple\u89d2\u8272\u6536\u96c6\u3001\u4e0a\u62a5\u76d1\u63a7\u6570\u636e\uff0cPushGateWay\u63a5\u6536\u6570\u636e\uff0c\u5e76\u63d0\u4f9b\u7ed9Prometheus\u8fdb\u884c\u8bfb\u53d6\uff0c\u6700\u540e\u901a\u8fc7Grafana\u8fdb\u884c\u53ef\u89c6\u5316\u548c\u76d1\u63a7\u67e5\u8be2\u3002","title":"\u76d1\u63a7"},{"location":"%E5%AD%A6%E4%B9%A0ing/Vue.js%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"\u8d44\u65991\uff1ahttps:// cloud.tencent.com/developer/article/1020337 \u8d44\u65992\uff1ahttps://cloud.tencent.com/developer/ article/1020338?fromSource=waitui \u8d44\u65993\uff1ahttps://cloud.tencent.com/developer/ article/1020416?fromSource=waitui \u4e00\u3001\u73af\u5883\u51c6\u5907 1.1 \u5b89\u88c5node \u548c npm 1.2 \u5b89\u88c5vue npm install -g vue-cli \u4e8c\u3001\u5feb\u901f\u5f00\u59cb \u521d\u59cb\u5316\u4e00\u4e2avue\u9879\u76ee\uff1a vue init webpack myProject \u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u8def\u6309enter \u548c y\u952e\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c \u521d\u59cb\u5316\u5b8c\u6bd5\uff0c cd myProject \u6267\u884cnpm run dev\uff0c\u5f00\u53d1\u6a21\u5f0f\u542f\u52a8\u9879\u76ee http://localhost:8080/#/ \u4e09. \u67e5\u770breadme package.json config build web pack src \u56db. \u4e00\u4e2avue\u9879\u76ee\u7684\u5f00\u53d1\u5468\u671f \u5907\u6ce8\uff1a\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5fc5\u987b\u8981\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u3002\u6bd4\u5982\u4f60\u7684\u9879\u76ee\u53eb\uff1amyProject, \u90a3\u4e48\u5fc5\u987b\u5728myProject\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u6267\u884c\u547d\u4ee4\uff0c\u624d\u6709\u6548\u3002 A Vue.js project Build Setup # install dependencies npm install # serve with hot reload at localhost:8080 npm run dev # build for production with minification npm run build # build for production and view the bundle analyzer report npm run build --report # run unit tests npm run unit # run e2e tests npm run e2e # run all tests npm test","title":"Vue.js\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E5%AD%A6%E4%B9%A0ing/Vue.js%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#build-setup","text":"# install dependencies npm install # serve with hot reload at localhost:8080 npm run dev # build for production with minification npm run build # build for production and view the bundle analyzer report npm run build --report # run unit tests npm run unit # run e2e tests npm run e2e # run all tests npm test","title":"Build Setup"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/","text":"docker \u5b9e\u6218 \u5b89\u88c5 \u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5305.dmg \u76f4\u63a5\u5b89\u88c5\u5373\u53ef \u4e0b\u8f7d\u542f\u52a8\u5bb9\u5668 docker pull $ServerName: {tag} docker run $IMAGENAME \u67e5\u770b\u5f53\u524d\u542f\u52a8\u5bb9\u5668 docker ps \u8fdb\u5165\u5bb9\u5668 docker exec -it ${\u5bb9\u5668\u540d\u79f0\u6216id} /bin/bash \u505c\u6b62\u5bb9\u5668 docker stop $ContainerId or {$ContainerName} \u8fd0\u884c\u4ea4\u4e92\u5f0f\u7684\u5bb9\u5668 \u6211\u4eec\u901a\u8fc7docker\u7684\u4e24\u4e2a\u53c2\u6570 -i -t\uff0c\u8ba9docker\u8fd0\u884c\u7684\u5bb9\u5668\u5b9e\u73b0\"\u5bf9\u8bdd\"\u7684\u80fd\u529b runoob@runoob:~$ docker run -i -t ubuntu:15.10 /bin/bash root@dc0050c79503:/# \u5404\u4e2a\u53c2\u6570\u89e3\u6790\uff1a -t: \u5728\u65b0\u5bb9\u5668\u5185\u6307\u5b9a\u4e00\u4e2a\u4f2a\u7ec8\u7aef\u6216\u7ec8\u7aef\u3002 -i: \u5141\u8bb8\u4f60\u5bf9\u5bb9\u5668\u5185\u7684\u6807\u51c6\u8f93\u5165 (STDIN) \u8fdb\u884c\u4ea4\u4e92\u3002 -d: \u8ba9\u5bb9\u5668\u5728\u540e\u53f0\u8fd0\u884c\u3002 -P: \u5c06\u5bb9\u5668\u5185\u90e8\u4f7f\u7528\u7684\u7f51\u7edc\u7aef\u53e3\u6620\u5c04\u5230\u6211\u4eec\u4f7f\u7528\u7684\u4e3b\u673a\u4e0a\u3002 -p \u53c2\u6570\u6765\u8bbe\u7f6e\u4e0d\u4e00\u6837\u7684\u7aef\u53e3 docker run -d -p 5000:5000 training/webapp python app.py \u67e5\u770b\u5bb9\u5668\u65e5\u5fd7 docker logs ${containerId} or docker logs ${containerName} \u67e5\u770b\u7aef\u53e3 docker port bf08b7f2cd89 or docker port ${containerName} \u5e38\u7528\u547d\u4ee4 \u955c\u50cf\u76f8\u5173 docker search java\uff1a\u5728Docker Hub\uff08\u6216\u963f\u91cc\u955c\u50cf\uff09\u4ed3\u5e93\u4e2d\u641c\u7d22\u5173\u952e\u5b57\uff08\u5982java\uff09\u7684\u955c\u50cf docker pull java:8\uff1a\u4ece\u4ed3\u5e93\u4e2d\u4e0b\u8f7d\u955c\u50cf\uff0c\u82e5\u8981\u6307\u5b9a\u7248\u672c\uff0c\u5219\u8981\u5728\u5192\u53f7\u540e\u6307\u5b9a docker images\uff1a\u5217\u51fa\u5df2\u7ecf\u4e0b\u8f7d\u7684\u955c\u50cf docker rmi java\uff1a\u5220\u9664\u672c\u5730\u955c\u50cf docker build\uff1a\u6784\u5efa\u955c\u50cf \u5bb9\u5668\u76f8\u5173 docker run -d -p 91:80 nginx \uff1a\u5728\u540e\u53f0\u8fd0\u884cnginx\uff0c\u82e5\u6ca1\u6709\u955c\u50cf\u5219\u5148\u4e0b\u8f7d\uff0c\u5e76\u5c06\u5bb9\u5668\u768480\u7aef\u53e3\u6620\u5c04\u4e3a\u5bbf\u4e3b\u673a\u768491\u7aef\u53e3\u3002 -d\uff1a\u540e\u53f0\u8fd0\u884c -P\uff1a\u968f\u673a\u7aef\u53e3\u6620\u5c04 -p\uff1a\u6307\u5b9a\u7aef\u53e3\u6620\u5c04 -net\uff1a\u7f51\u7edc\u6a21\u5f0f docker ps\uff1a\u5217\u51fa\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668 docker ps -a \uff1a\u5217\u51fa\u6240\u6709\u7684\u5bb9\u5668 docker stop \u5bb9\u5668id\uff1a\u505c\u6b62\u5bb9\u5668 docker kill \u5bb9\u5668id\uff1a\u5f3a\u5236\u505c\u6b62\u5bb9\u5668 docker start \u5bb9\u5668id\uff1a\u542f\u52a8\u5df2\u505c\u6b62\u7684\u5bb9\u5668 docker inspect \u5bb9\u5668id\uff1a\u67e5\u770b\u5bb9\u5668\u7684\u6240\u6709\u4fe1\u606f docker container logs \u5bb9\u5668id\uff1a\u67e5\u770b\u5bb9\u5668\u65e5\u5fd7 docker top \u5bb9\u5668id\uff1a\u67e5\u770b\u5bb9\u5668\u91cc\u7684\u8fdb\u7a0b docker exec -it \u5bb9\u5668id /bin/bash\uff1a\u8fdb\u5165\u5bb9\u5668 exit\uff1a\u9000\u51fa\u5bb9\u5668 docker rm \u5bb9\u5668id\uff1a\u5220\u9664\u5df2\u505c\u6b62\u7684\u5bb9\u5668 docker rm -f \u5bb9\u5668id\uff1a\u5220\u9664\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668 \u6240\u6709\u547d\u4ee4 docker docker COMMAND --help \u5bb9\u5668\u751f\u547d\u5468\u671f\u7ba1\u7406 run start/stop/restart kill rm pause/unpause create exec \u5bb9\u5668\u64cd\u4f5c ps inspect top attach events logs wait export port \u5bb9\u5668rootfs\u547d\u4ee4 commit cp diff \u955c\u50cf\u4ed3\u5e93 login pull push search \u672c\u5730\u955c\u50cf\u7ba1\u7406 images rmi tag build history save load import info|version info version","title":"Docker \u5b9e\u6218"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#docker","text":"","title":"docker \u5b9e\u6218"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_1","text":"\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5305.dmg \u76f4\u63a5\u5b89\u88c5\u5373\u53ef","title":"\u5b89\u88c5"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_2","text":"docker pull $ServerName: {tag} docker run $IMAGENAME","title":"\u4e0b\u8f7d\u542f\u52a8\u5bb9\u5668"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_3","text":"docker ps \u8fdb\u5165\u5bb9\u5668 docker exec -it ${\u5bb9\u5668\u540d\u79f0\u6216id} /bin/bash","title":"\u67e5\u770b\u5f53\u524d\u542f\u52a8\u5bb9\u5668"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_4","text":"docker stop $ContainerId or {$ContainerName}","title":"\u505c\u6b62\u5bb9\u5668"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_5","text":"\u6211\u4eec\u901a\u8fc7docker\u7684\u4e24\u4e2a\u53c2\u6570 -i -t\uff0c\u8ba9docker\u8fd0\u884c\u7684\u5bb9\u5668\u5b9e\u73b0\"\u5bf9\u8bdd\"\u7684\u80fd\u529b runoob@runoob:~$ docker run -i -t ubuntu:15.10 /bin/bash root@dc0050c79503:/# \u5404\u4e2a\u53c2\u6570\u89e3\u6790\uff1a -t: \u5728\u65b0\u5bb9\u5668\u5185\u6307\u5b9a\u4e00\u4e2a\u4f2a\u7ec8\u7aef\u6216\u7ec8\u7aef\u3002 -i: \u5141\u8bb8\u4f60\u5bf9\u5bb9\u5668\u5185\u7684\u6807\u51c6\u8f93\u5165 (STDIN) \u8fdb\u884c\u4ea4\u4e92\u3002 -d: \u8ba9\u5bb9\u5668\u5728\u540e\u53f0\u8fd0\u884c\u3002 -P: \u5c06\u5bb9\u5668\u5185\u90e8\u4f7f\u7528\u7684\u7f51\u7edc\u7aef\u53e3\u6620\u5c04\u5230\u6211\u4eec\u4f7f\u7528\u7684\u4e3b\u673a\u4e0a\u3002 -p \u53c2\u6570\u6765\u8bbe\u7f6e\u4e0d\u4e00\u6837\u7684\u7aef\u53e3 docker run -d -p 5000:5000 training/webapp python app.py","title":"\u8fd0\u884c\u4ea4\u4e92\u5f0f\u7684\u5bb9\u5668"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_6","text":"docker logs ${containerId} or docker logs ${containerName}","title":"\u67e5\u770b\u5bb9\u5668\u65e5\u5fd7"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_7","text":"docker port bf08b7f2cd89 or docker port ${containerName}","title":"\u67e5\u770b\u7aef\u53e3"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_8","text":"","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_9","text":"docker search java\uff1a\u5728Docker Hub\uff08\u6216\u963f\u91cc\u955c\u50cf\uff09\u4ed3\u5e93\u4e2d\u641c\u7d22\u5173\u952e\u5b57\uff08\u5982java\uff09\u7684\u955c\u50cf docker pull java:8\uff1a\u4ece\u4ed3\u5e93\u4e2d\u4e0b\u8f7d\u955c\u50cf\uff0c\u82e5\u8981\u6307\u5b9a\u7248\u672c\uff0c\u5219\u8981\u5728\u5192\u53f7\u540e\u6307\u5b9a docker images\uff1a\u5217\u51fa\u5df2\u7ecf\u4e0b\u8f7d\u7684\u955c\u50cf docker rmi java\uff1a\u5220\u9664\u672c\u5730\u955c\u50cf docker build\uff1a\u6784\u5efa\u955c\u50cf","title":"\u955c\u50cf\u76f8\u5173"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_10","text":"docker run -d -p 91:80 nginx \uff1a\u5728\u540e\u53f0\u8fd0\u884cnginx\uff0c\u82e5\u6ca1\u6709\u955c\u50cf\u5219\u5148\u4e0b\u8f7d\uff0c\u5e76\u5c06\u5bb9\u5668\u768480\u7aef\u53e3\u6620\u5c04\u4e3a\u5bbf\u4e3b\u673a\u768491\u7aef\u53e3\u3002 -d\uff1a\u540e\u53f0\u8fd0\u884c -P\uff1a\u968f\u673a\u7aef\u53e3\u6620\u5c04 -p\uff1a\u6307\u5b9a\u7aef\u53e3\u6620\u5c04 -net\uff1a\u7f51\u7edc\u6a21\u5f0f docker ps\uff1a\u5217\u51fa\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668 docker ps -a \uff1a\u5217\u51fa\u6240\u6709\u7684\u5bb9\u5668 docker stop \u5bb9\u5668id\uff1a\u505c\u6b62\u5bb9\u5668 docker kill \u5bb9\u5668id\uff1a\u5f3a\u5236\u505c\u6b62\u5bb9\u5668 docker start \u5bb9\u5668id\uff1a\u542f\u52a8\u5df2\u505c\u6b62\u7684\u5bb9\u5668 docker inspect \u5bb9\u5668id\uff1a\u67e5\u770b\u5bb9\u5668\u7684\u6240\u6709\u4fe1\u606f docker container logs \u5bb9\u5668id\uff1a\u67e5\u770b\u5bb9\u5668\u65e5\u5fd7 docker top \u5bb9\u5668id\uff1a\u67e5\u770b\u5bb9\u5668\u91cc\u7684\u8fdb\u7a0b docker exec -it \u5bb9\u5668id /bin/bash\uff1a\u8fdb\u5165\u5bb9\u5668 exit\uff1a\u9000\u51fa\u5bb9\u5668 docker rm \u5bb9\u5668id\uff1a\u5220\u9664\u5df2\u505c\u6b62\u7684\u5bb9\u5668 docker rm -f \u5bb9\u5668id\uff1a\u5220\u9664\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668","title":"\u5bb9\u5668\u76f8\u5173"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_11","text":"docker docker COMMAND --help","title":"\u6240\u6709\u547d\u4ee4"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_12","text":"run start/stop/restart kill rm pause/unpause create exec","title":"\u5bb9\u5668\u751f\u547d\u5468\u671f\u7ba1\u7406"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_13","text":"ps inspect top attach events logs wait export port","title":"\u5bb9\u5668\u64cd\u4f5c"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#rootfs","text":"commit cp diff","title":"\u5bb9\u5668rootfs\u547d\u4ee4"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_14","text":"login pull push search","title":"\u955c\u50cf\u4ed3\u5e93"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#_15","text":"images rmi tag build history save load import","title":"\u672c\u5730\u955c\u50cf\u7ba1\u7406"},{"location":"%E5%AD%A6%E4%B9%A0ing/docker%20%E5%AE%9E%E6%88%98/#infoversion","text":"info version","title":"info|version"},{"location":"%E5%AD%A6%E4%B9%A0ing/java%E8%B0%83%E4%BC%98%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"jdk \u547d\u4ee4\u884c\u5de5\u5177: jps, jstat, jmap jps \u547d\u4ee4\uff08JavaVirtualMachineProcessStatusTool\uff09 jstat \u547d\u4ee4\uff08jvm Statistics Monitor Tool\uff09 jstack \u547d\u4ee4\uff08jvm stack trace\uff09 jmap \u547d\u4ee4\uff08jvm Memory Map\uff09 \u7edf\u8ba1\u6307\u5b9a\u8fdb\u7a0b\u7684GC\u6536\u96c6\u60c5\u51b5 jstat -gcutil 14063 2000 10 \u547d\u4ee4\u8be6\u89e3\uff1a 14063 \uff1a \u8fdb\u7a0bID 2000\uff1a\u6536\u96c6\u5468\u671f 10\uff1a\u6536\u96c6\u6b21\u6570 S0 \uff1a\u5e78\u5b58\u533a0 \u4f7f\u7528\u6bd4\u4f8b\uff0c\u767e\u5206\u6bd4 S1 \uff1a\u5e78\u5b58\u533a1\u4f7f\u7528\u6bd4\u4f8b\uff0c\u767e\u5206\u6bd4 E \uff1aeden\u533a\u4f7f\u7528\u6bd4\u4f8b\uff0c\u767e\u5206\u6bd4 O \uff1aOld\u533a\u4f7f\u7528\u6bd4\u4f8b\uff0c\u767e\u5206\u6bd4 P \uff1a\u6301\u4e45\u4ee3 \uff08\u8001\u7248\u672cJVM\uff09\u4f7f\u7528\u6bd4\u4f8b\uff0c\u767e\u5206\u6bd4 M \uff1a\u5143\u6570\u636e\u533a\uff08\u65b0\u7248\u672cJVM\uff09\u4f7f\u7528\u6bd4\u4f8b\uff0c\u767e\u5206\u6bd4 YGC\uff08\u5355\u4f4d.\u6b21\uff09\uff1a\u5e74\u8f7b\u4ee3\u5783\u573e\u56de\u6536\u603b\u6b21\u6570\u3002\u4ece\u542f\u52a8\u5230\u73b0\u5728\u3002 YGCT\uff08\u5355\u4f4d.\u79d2\uff09\uff1a\u5e74\u8f7b\u4ee3\u5783\u573e\u56de\u6536\u603b\u8017\u65f6\u3002\u4ece\u542f\u52a8\u5230\u73b0\u5728\u3002 FGC\uff1a\u8001\u5e74\u4ee3\u5783\u573e\u56de\u6536\u603b\u6b21\u6570\u3002\u4ece\u542f\u52a8\u5230\u73b0\u5728\u3002 FGCT\uff08\u5355\u4f4d.\u79d2\uff09:\u8001\u5e74\u4ee3\u5783\u573e\u56de\u6536\u603b\u8017\u65f6\u3002\u4ece\u542f\u52a8\u5230\u73b0\u5728\u3002 GCT\uff08\u5355\u4f4d.\u79d2\uff09:\u5783\u573e\u56de\u6536\u603b\u8017\u65f6 \u5ef6\u4f38\u9605\u8bfb\uff1ajstat\u547d\u4ee4\u4f7f\u7528\uff08\u6709\u8fd9\u4e00\u7bc7\u5c31\u591f\u4e86\uff09https://blog.csdn.net/li396864285/article/details/94380718 \u6392\u67e5JVM \u5185CPU\u4f7f\u7528\u8fc7\u9ad8\u7ebf\u7a0b top \u67e5\u770bCPU\u4f7f\u7528\u7387\u6700\u9ad8\u8fdb\u7a0b\uff1atop jstack \u6253\u5370jvm\u7ebf\u7a0b\u6808\uff1ajstack 8424 > /tmp/jstack.txt top -H \u627e\u5230\u8fdb\u7a0b\u5185\u7ebf\u7a0bCPU\u4f7f\u7528\u7387\u6392\u540d\uff1atop -H -p8424 \u5c06CPU\u4f7f\u7528\u7387\u9ad8\u7684\u7ebf\u7a0bPID\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\uff1aprintf \"%x\\n\u201d 14065 \u8f93\u51fa\u5f97\u5230\uff1a36f1 \u5728\u7ebf\u7a0b\u6808\u6587\u4ef6\u5185\u67e5\u627e\u7ebf\u7a0b\u6808\u8be6\u60c5 grep -C 20 \u201c36f1\u201d /tmp/jstack.txt \u5ef6\u4f38\u9605\u8bfb\uff1ahttps://my.oschina.net/liangxiao/blog/1523467 \u5176\u4ed6 jdk \u63d0\u4f9b\u7684\u5185\u5b58\u76d1\u63a7\u5de5\u5177: jConsole, jVisualVM eclipse \u63d0\u4f9b\u7684\u5185\u5b58\u5206\u6790\u5de5\u5177: mat google \u7684\u76d1\u63a7\u5806\u5916\u5185\u5b58\u5de5\u5177: gperftools \u6027\u80fd\u538b\u6d4b\u5de5\u5177: jmeter \u67e5\u770b\u8fdb\u7a0b\u5185\u5b58: smaps, pmap, gdb sun \u63a8\u51fa\u7684\u9488\u5bf9 java \u7684\u52a8\u6001\u8ffd\u8e2a\u5de5\u5177: btrace","title":"Java\u8c03\u4f18\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E5%AD%A6%E4%B9%A0ing/k8s%E5%B7%A5%E5%85%B7kt-connect%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"``` USAGE: ktctl [global options] command [command options] [arguments...] COMMANDS: connect \u672c\u5730\u8fde\u63a5K8s\u96c6\u7fa4\u73af\u5883\u3002 mesh \u8f6c\u53d1K8s Deployment \u8bf7\u6c42\u5230\u672c\u5730\u3002 help, h Shows a list of commands or help for one command GLOBAL OPTIONS: --namespace value, -n value \u5373\u6d4b\u8bd5\u73af\u5883\u6240\u5728K8s namespace\uff0c\u4f8b\u5982test2\u73af\u5883namespace\u4e3atest2 --kubeconfig value, -c value K8s\u96c6\u7fa4\u8fde\u63a5\u914d\u7f6e (default: \"${HOME}/.kube/config\") --debug, -d debug mode --label value, -l value \u4ee3\u7406Pod\u6807\u7b7e\u4fe1\u606f\uff0c \u7279\u6027\u73af\u5883\u5fc5\u987b\u8981\u5e26\u4e0avirtual-env=\u7279\u6027\u73af\u5883\u6807\u8bc6\u3002\u4f8b\u5982 --label=test2.proj1. --help, -h show help --version, -v print the version ``` ------------\u547d-\u4ee4-\u5206-\u5272-\u7ebf------------ \u8fde\u63a5test2\u73af\u5883 \u2606 \u2606 \u2606 \u2606 \u2606 sudo ktctl -d -n test2 connect ------------\u547d-\u4ee4-\u5206-\u5272-\u7ebf------------ \u4e0b\u9762\u91cd\u70b9\u8bf4\u660e\u4e00\u4e0bmesh --label virtual-env\u4e3a\u672c\u5730\u73af\u5883\u6807\u8bc6\uff0c\u81ea\u5b9a\u4e49\u5373\u53ef\uff0c\u6ce8\u610f\u4e0d\u8981\u8ddf\u5df2\u6709\u73af\u5883\u51b2\u7a81\uff0c\u5efa\u8bae\u4f7f\u7528\u7528\u81ea\u5df1\u7684\u540d\u5b57\uff0c\u5982test2.yonghua mesh \u540e\u8ddf\u7684\u662f\u5e94\u7528Deployment\u7684name\uff0c\u5373\u5e94\u7528\u540d\u3002 --expose \u66b4\u9732\u7aef\u53e3\uff0c\u652f\u6301\u591a\u7aef\u53e3\uff0c\u5f62\u5982 [port] \u6216\u8005 [remote:local]\uff0c\u5373\u4ee3\u7406Pod\u548c\u672c\u5730\u670d\u52a1\u7684port\u5bf9\u3002 sudo ktctl -d --label virtual-env=test2.abc --namespace test2 mesh springboot-virtualenv --expose 8080","title":"K8s\u5de5\u5177kt connect\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E5%AD%A6%E4%B9%A0ing/k8s%E5%B7%A5%E5%85%B7kt-connect%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#test2","text":"\u2606 \u2606 \u2606 \u2606 \u2606 sudo ktctl -d -n test2 connect ------------\u547d-\u4ee4-\u5206-\u5272-\u7ebf------------ \u4e0b\u9762\u91cd\u70b9\u8bf4\u660e\u4e00\u4e0bmesh --label virtual-env\u4e3a\u672c\u5730\u73af\u5883\u6807\u8bc6\uff0c\u81ea\u5b9a\u4e49\u5373\u53ef\uff0c\u6ce8\u610f\u4e0d\u8981\u8ddf\u5df2\u6709\u73af\u5883\u51b2\u7a81\uff0c\u5efa\u8bae\u4f7f\u7528\u7528\u81ea\u5df1\u7684\u540d\u5b57\uff0c\u5982test2.yonghua mesh \u540e\u8ddf\u7684\u662f\u5e94\u7528Deployment\u7684name\uff0c\u5373\u5e94\u7528\u540d\u3002 --expose \u66b4\u9732\u7aef\u53e3\uff0c\u652f\u6301\u591a\u7aef\u53e3\uff0c\u5f62\u5982 [port] \u6216\u8005 [remote:local]\uff0c\u5373\u4ee3\u7406Pod\u548c\u672c\u5730\u670d\u52a1\u7684port\u5bf9\u3002 sudo ktctl -d --label virtual-env=test2.abc --namespace test2 mesh springboot-virtualenv --expose 8080","title":"\u8fde\u63a5test2\u73af\u5883"},{"location":"%E5%AD%A6%E4%B9%A0ing/kafka%E5%AD%A6%E4%B9%A0/","text":"kafka\u5b66\u4e60 \u6982\u8ff0 kafka \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u3001\u5206\u533a\u3001\u591a\u526f\u672c\u5907\u4efd\u7684\u6d88\u606f\u961f\u5217\u7cfb\u7edf\u3002 Topic\uff1a\u6d88\u606f\u4e3b\u9898\uff0c\u53d1\u5e03/\u8ba2\u9605\u6d88\u606f\u7684\u4e3b\u9898\u3002 Broker\uff1a\u4ee3\u7406\uff0c\u6bcf\u4e00\u53f0master kafka\u5373\u4e00\u53f0broker\u3002 Partition\uff1a\u533a\uff0c\u6d88\u606f\u6309\u7167\u5206\u533a\u5b58\u50a8\uff0c\u6bcf\u4e2atopic\u88ab\u5206\u6210\u591a\u4e2apartition\uff0c\u6bcf\u4e2apartition\u5728\u5b58\u50a8\u5c42\u9762\u662fappend log\u6587\u4ef6\uff08\u53ef\u8ffd\u52a0\u7684\u65e5\u5fd7\u6587\u4ef6\uff09\u3002 Offset\uff1a\u504f\u79fb\u91cf\uff0clong\u578b\u6570\u5b57\uff0c\u552f\u4e00\u6807\u8bb0\u4e00\u6761\u6d88\u606f\u3002\u6bcf\u4e2a\u6d88\u606f\u53d1\u9001\u5230partition \u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e\u5c31\u662foffset\u3002kafka\u7981\u6b62\u5bf9\u6d88\u606f\u968f\u673a\u8bfb\u5199\u3002 \u5907\u6ce81\uff1a\u5173\u4e8e\u6d88\u606f\u987a\u5e8f\u6027\uff0c\u4ecepartition\u7ef4\u5ea6\u662f\u987a\u5e8f\u6d88\u8d39\u7684\uff0c\u4f46\u4ece\u6574\u4f53Topic\u6765\u8bf4\u65e0\u6cd5\u4fdd\u8bc1\u6709\u5e8f\u3002 \u5907\u6ce82\uff1akafka\u7684\u8bbe\u8ba1\u539f\u7406\u51b3\u5b9a,\u5bf9\u4e8e\u4e00\u4e2atopic,\u540c\u4e00\u4e2agroup\u4e2d\u4e0d\u80fd\u6709\u591a\u4e8epartitions\u4e2a\u6570\u7684consumer\u540c\u65f6\u6d88\u8d39,\u5426\u5219\u5c06\u610f\u5473\u7740\u67d0\u4e9bconsumer\u5c06\u65e0\u6cd5\u5f97\u5230\u6d88\u606f. kafka\u5feb\u901f\u5f00\u59cb \u5b89\u88c5 \u524d\u7f6e\u6761\u4ef6\uff1aJava\u73af\u5883\uff0czookeeper\u5df2\u7ecf\u5b89\u88c5 brew install kafka \u542f\u52a8 \u4e00\u952e\u542f\u52a8\uff1azookeeper-server-start /usr/local/etc/kafka/zookeeper.properties & kafka-server-start /usr/local/etc/kafka/server.properties \u521b\u5efatopic kafka-topics --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic myTest \u624b\u52a8\u53d1\u6d88\u606f kafka-console-producer --broker-list localhost:9092 --topic test \u624b\u52a8\u6d88\u8d39\u6d88\u606f kafka-console-consumer --bootstrap-server localhost:9092 --topic test --from-beginning \u6ce8\u610f\u4e8b\u98791\uff1akafka\u9ed8\u8ba4\u4f7f\u75289092\u7aef\u53e3\u542f\u52a8","title":"kafka\u5b66\u4e60"},{"location":"%E5%AD%A6%E4%B9%A0ing/kafka%E5%AD%A6%E4%B9%A0/#kafka","text":"","title":"kafka\u5b66\u4e60"},{"location":"%E5%AD%A6%E4%B9%A0ing/kafka%E5%AD%A6%E4%B9%A0/#_1","text":"kafka \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u3001\u5206\u533a\u3001\u591a\u526f\u672c\u5907\u4efd\u7684\u6d88\u606f\u961f\u5217\u7cfb\u7edf\u3002 Topic\uff1a\u6d88\u606f\u4e3b\u9898\uff0c\u53d1\u5e03/\u8ba2\u9605\u6d88\u606f\u7684\u4e3b\u9898\u3002 Broker\uff1a\u4ee3\u7406\uff0c\u6bcf\u4e00\u53f0master kafka\u5373\u4e00\u53f0broker\u3002 Partition\uff1a\u533a\uff0c\u6d88\u606f\u6309\u7167\u5206\u533a\u5b58\u50a8\uff0c\u6bcf\u4e2atopic\u88ab\u5206\u6210\u591a\u4e2apartition\uff0c\u6bcf\u4e2apartition\u5728\u5b58\u50a8\u5c42\u9762\u662fappend log\u6587\u4ef6\uff08\u53ef\u8ffd\u52a0\u7684\u65e5\u5fd7\u6587\u4ef6\uff09\u3002 Offset\uff1a\u504f\u79fb\u91cf\uff0clong\u578b\u6570\u5b57\uff0c\u552f\u4e00\u6807\u8bb0\u4e00\u6761\u6d88\u606f\u3002\u6bcf\u4e2a\u6d88\u606f\u53d1\u9001\u5230partition \u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e\u5c31\u662foffset\u3002kafka\u7981\u6b62\u5bf9\u6d88\u606f\u968f\u673a\u8bfb\u5199\u3002 \u5907\u6ce81\uff1a\u5173\u4e8e\u6d88\u606f\u987a\u5e8f\u6027\uff0c\u4ecepartition\u7ef4\u5ea6\u662f\u987a\u5e8f\u6d88\u8d39\u7684\uff0c\u4f46\u4ece\u6574\u4f53Topic\u6765\u8bf4\u65e0\u6cd5\u4fdd\u8bc1\u6709\u5e8f\u3002 \u5907\u6ce82\uff1akafka\u7684\u8bbe\u8ba1\u539f\u7406\u51b3\u5b9a,\u5bf9\u4e8e\u4e00\u4e2atopic,\u540c\u4e00\u4e2agroup\u4e2d\u4e0d\u80fd\u6709\u591a\u4e8epartitions\u4e2a\u6570\u7684consumer\u540c\u65f6\u6d88\u8d39,\u5426\u5219\u5c06\u610f\u5473\u7740\u67d0\u4e9bconsumer\u5c06\u65e0\u6cd5\u5f97\u5230\u6d88\u606f.","title":"\u6982\u8ff0"},{"location":"%E5%AD%A6%E4%B9%A0ing/kafka%E5%AD%A6%E4%B9%A0/#kafka_1","text":"","title":"kafka\u5feb\u901f\u5f00\u59cb"},{"location":"%E5%AD%A6%E4%B9%A0ing/kafka%E5%AD%A6%E4%B9%A0/#_2","text":"\u524d\u7f6e\u6761\u4ef6\uff1aJava\u73af\u5883\uff0czookeeper\u5df2\u7ecf\u5b89\u88c5 brew install kafka","title":"\u5b89\u88c5"},{"location":"%E5%AD%A6%E4%B9%A0ing/kafka%E5%AD%A6%E4%B9%A0/#_3","text":"\u4e00\u952e\u542f\u52a8\uff1azookeeper-server-start /usr/local/etc/kafka/zookeeper.properties & kafka-server-start /usr/local/etc/kafka/server.properties","title":"\u542f\u52a8"},{"location":"%E5%AD%A6%E4%B9%A0ing/kafka%E5%AD%A6%E4%B9%A0/#topic","text":"kafka-topics --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic myTest","title":"\u521b\u5efatopic"},{"location":"%E5%AD%A6%E4%B9%A0ing/kafka%E5%AD%A6%E4%B9%A0/#_4","text":"kafka-console-producer --broker-list localhost:9092 --topic test","title":"\u624b\u52a8\u53d1\u6d88\u606f"},{"location":"%E5%AD%A6%E4%B9%A0ing/kafka%E5%AD%A6%E4%B9%A0/#_5","text":"kafka-console-consumer --bootstrap-server localhost:9092 --topic test --from-beginning \u6ce8\u610f\u4e8b\u98791\uff1akafka\u9ed8\u8ba4\u4f7f\u75289092\u7aef\u53e3\u542f\u52a8","title":"\u624b\u52a8\u6d88\u8d39\u6d88\u606f"},{"location":"%E5%AD%A6%E4%B9%A0ing/mongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"mongodb \u5b66\u4e60 \u5b89\u88c5 \u4e24\u79cd\u65b9\u5f0f \u76f4\u63a5\u4e0b\u8f7d\u538b\u7f29\u5305\u89e3\u538b\u5b89\u88c5\uff0c\u4e0b\u8f7d\u5730\u5740\uff1ahttps://www.mongodb.com/download-center/community \u89e3\u538b\u538b\u7f29\u5305 \u6267\u884c\u547d\u4ee4\uff1asudo mv mongodb-osx-x86_64-4.0.9 /usr/local/mongodb-4.0.9 \u914d\u7f6e~/.bash_profile \u6dfb\u52a0export PATH=/usr/local/mongodb-4.0.9/bin:$PATH \u5982\u4f7f\u7528zsh\uff0c\u5219\u5728~/.zshrc \u6dfb\u52a0 export PATH=/usr/local/mongodb-4.0.9/bin:$PATH \u4f7f\u7528brew \u4e00\u952e\u5b89\u88c5 brew install mongo (\u7565) docker \u65b9\u5f0f\u5b89\u88c5 docker pull mongo:4.2.0-rc2-bionic \u542f\u52a8 \u63d0\u524d\u521b\u5efamongodb \u6570\u636e\u6587\u4ef6\u5939 sudo mkdir -p /data/db \u542f\u52a8 mongodb\uff0c\u9ed8\u8ba4\u6570\u636e\u5e93\u76ee\u5f55\u5373\u4e3a /data/db \u542f\u52a8\uff1asudo mongod \u4f7f\u7528 \u6267\u884c\u547d\u4ee4\uff1amongo \u767b\u5165\u5ba2\u6237\u7aef use YOURDB \u6570\u636e\u5e93\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\uff0c\u82e5\u5b58\u5728\u5219\u5207\u6362 db.createCollection(\"YOUR_COLLECTION\") \u521b\u5efa\u96c6\u5408 \u6a21\u7cca\u67e5\u8be2 find({\"name\":{\"$regex\":\"\u6b66\u6c49\u4e5d\u901a\",\"$options\":\"i\"}}).limit(10) \u4e0a\u8ff0\u67e5\u8be2\uff0c\u6b63\u5219\u67e5\u8be2\u540d\u79f0\u53eb\"\u6b66\u6c49\u4e5d\u901a\"\u7684\u6240\u6709\u8bb0\u5f55\uff0coptions=i \u8868\u793a\u4e0d\u533a\u5206\u5927\u5c0f\u5199 option\u7684\u503c\u5305\u542b\uff1a i(\u4e0d\u533a\u5206\u5927\u5c0f\u5199)\uff0c m(\u5f53\u4f7f\u7528^\u4e0e$\u7b26\u53f7\u6a21\u7cca\u5339\u914d\u65f6\uff0c\u4f5c\u7528\u4e8e\u5c4f\u853d\u4e2d\u95f4\u7684\u6362\u884c\u7b26) , x(\u5ffd\u7565\u6ce8\u91ca\uff0c\u4ee5#\u5f00\u5934 /n\u7ed3\u5c3e)\uff0c s(\u5141\u8bb8\u6240\u6709\u5b57\u7b26\u5305\u62ec\u6362\u884c\u7b26\u53c2\u4e0e\u6a21\u7cca\u5339\u914d) \u6309\u6761\u4ef6\u5206\u9875\u67e5\u8be2 find({\"source\":\"apoi\",\"cityCode\":\"0571\"}).limit(120) \u6309\u6761\u4ef6\u67e5\u8be2\u7edf\u8ba1 find({\"source\":\"apoi\",\"cityCode\":\"0571\"}).count() \u8d26\u6237\u64cd\u4f5c&\u6388\u6743 1. \u521b\u5efa\u8d85\u7ea7\u7528\u6237 \u5148\u521b\u5efa\u4e00\u4e2a\u6709grant\u6743\u9650\u7684\u7528\u6237\uff0c\u5982root\u6743\u9650\u7684\u7528\u6237\uff1a user \uff1a\u7528\u6237\u540d pwd \uff1a\u5bc6\u7801 db \uff1a\u6307\u5b9a\u8be5\u7528\u6237\u7684\u6570\u636e\u5e93\uff0cadmin\u662f\u7528\u4e8e\u6743\u9650\u63a7\u5236\u7684\u6570\u636e\u5e93\uff0c\u5982\u679c\u6ca1\u6709\u9700\u8981\u65b0\u5efa\u4e00\u4e2a roles \uff1a\u6307\u5b9a\u7528\u6237\u7684\u89d2\u8272\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u7a7a\u6570\u7ec4\u7ed9\u65b0\u7528\u6237\u8bbe\u5b9a\u7a7a\u89d2\u8272\uff1b\u5728roles\u5b57\u6bb5,\u53ef\u4ee5\u6307\u5b9a\u5185\u7f6e\u89d2\u8272\u548c\u7528\u6237\u5b9a\u4e49\u7684\u89d2\u8272\u3002role\u91cc\u7684\u89d2\u8272\u53ef\u4ee5\u9009\uff1a Built-In Roles\uff08\u5185\u7f6e\u89d2\u8272\uff09\uff1a \\1. \u6570\u636e\u5e93\u7528\u6237\u89d2\u8272\uff1aread\u3001readWrite; \\2. \u6570\u636e\u5e93\u7ba1\u7406\u89d2\u8272\uff1adbAdmin\u3001dbOwner\u3001userAdmin\uff1b \\3. \u96c6\u7fa4\u7ba1\u7406\u89d2\u8272\uff1aclusterAdmin\u3001clusterManager\u3001clusterMonitor\u3001hostManager\uff1b \\4. \u5907\u4efd\u6062\u590d\u89d2\u8272\uff1abackup\u3001restore\uff1b \\5. \u6240\u6709\u6570\u636e\u5e93\u89d2\u8272\uff1areadAnyDatabase\u3001readWriteAnyDatabase\u3001userAdminAnyDatabase\u3001dbAdminAnyDatabase \\6. \u8d85\u7ea7\u7528\u6237\u89d2\u8272\uff1aroot // \u8fd9\u91cc\u8fd8\u6709\u51e0\u4e2a\u89d2\u8272\u95f4\u63a5\u6216\u76f4\u63a5\u63d0\u4f9b\u4e86\u7cfb\u7edf\u8d85\u7ea7\u7528\u6237\u7684\u8bbf\u95ee\uff08dbOwner \u3001userAdmin\u3001userAdminAnyDatabase\uff09 \\7. \u5185\u90e8\u89d2\u8272\uff1a__system \u5177\u4f53\u89d2\u8272\u7684\u529f\u80fd\uff1a Read\uff1a\u5141\u8bb8\u7528\u6237\u8bfb\u53d6\u6307\u5b9a\u6570\u636e\u5e93 readWrite\uff1a\u5141\u8bb8\u7528\u6237\u8bfb\u5199\u6307\u5b9a\u6570\u636e\u5e93 dbAdmin\uff1a\u5141\u8bb8\u7528\u6237\u5728\u6307\u5b9a\u6570\u636e\u5e93\u4e2d\u6267\u884c\u7ba1\u7406\u51fd\u6570\uff0c\u5982\u7d22\u5f15\u521b\u5efa\u3001\u5220\u9664\uff0c\u67e5\u770b\u7edf\u8ba1\u6216\u8bbf\u95eesystem.profile userAdmin\uff1a\u5141\u8bb8\u7528\u6237\u5411system.users\u96c6\u5408\u5199\u5165\uff0c\u53ef\u4ee5\u627e\u6307\u5b9a\u6570\u636e\u5e93\u91cc\u521b\u5efa\u3001\u5220\u9664\u548c\u7ba1\u7406\u7528\u6237 clusterAdmin\uff1a\u53ea\u5728admin\u6570\u636e\u5e93\u4e2d\u53ef\u7528\uff0c\u8d4b\u4e88\u7528\u6237\u6240\u6709\u5206\u7247\u548c\u590d\u5236\u96c6\u76f8\u5173\u51fd\u6570\u7684\u7ba1\u7406\u6743\u9650\u3002 readAnyDatabase\uff1a\u53ea\u5728admin\u6570\u636e\u5e93\u4e2d\u53ef\u7528\uff0c\u8d4b\u4e88\u7528\u6237\u6240\u6709\u6570\u636e\u5e93\u7684\u8bfb\u6743\u9650 readWriteAnyDatabase\uff1a\u53ea\u5728admin\u6570\u636e\u5e93\u4e2d\u53ef\u7528\uff0c\u8d4b\u4e88\u7528\u6237\u6240\u6709\u6570\u636e\u5e93\u7684\u8bfb\u5199\u6743\u9650 userAdminAnyDatabase\uff1a\u53ea\u5728admin\u6570\u636e\u5e93\u4e2d\u53ef\u7528\uff0c\u8d4b\u4e88\u7528\u6237\u6240\u6709\u6570\u636e\u5e93\u7684userAdmin\u6743\u9650 dbAdminAnyDatabase\uff1a\u53ea\u5728admin\u6570\u636e\u5e93\u4e2d\u53ef\u7528\uff0c\u8d4b\u4e88\u7528\u6237\u6240\u6709\u6570\u636e\u5e93\u7684dbAdmin\u6743\u9650\u3002 root\uff1a\u53ea\u5728admin\u6570\u636e\u5e93\u4e2d\u53ef\u7528\u3002\u8d85\u7ea7\u8d26\u53f7\uff0c\u8d85\u7ea7\u6743\u9650 2. \u521b\u5efa\u6240\u6709\u6570\u636e\u5e93\u7ba1\u7406\u7528\u6237 db.createUser({ user: \"useradmin\", pwd: \"adminpassword\", roles: [{ role: \"userAdminAnyDatabase\", db: \"admin\" }] }) 3. \u521b\u5efa\u5355\u4e2a\u6570\u636e\u5e93\u7528\u6237","title":"mongoDB\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E5%AD%A6%E4%B9%A0ing/mongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_1","text":"","title":""},{"location":"%E5%AD%A6%E4%B9%A0ing/mongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#mongodb","text":"","title":"mongodb \u5b66\u4e60"},{"location":"%E5%AD%A6%E4%B9%A0ing/mongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_2","text":"\u4e24\u79cd\u65b9\u5f0f \u76f4\u63a5\u4e0b\u8f7d\u538b\u7f29\u5305\u89e3\u538b\u5b89\u88c5\uff0c\u4e0b\u8f7d\u5730\u5740\uff1ahttps://www.mongodb.com/download-center/community \u89e3\u538b\u538b\u7f29\u5305 \u6267\u884c\u547d\u4ee4\uff1asudo mv mongodb-osx-x86_64-4.0.9 /usr/local/mongodb-4.0.9 \u914d\u7f6e~/.bash_profile \u6dfb\u52a0export PATH=/usr/local/mongodb-4.0.9/bin:$PATH \u5982\u4f7f\u7528zsh\uff0c\u5219\u5728~/.zshrc \u6dfb\u52a0 export PATH=/usr/local/mongodb-4.0.9/bin:$PATH \u4f7f\u7528brew \u4e00\u952e\u5b89\u88c5 brew install mongo (\u7565) docker \u65b9\u5f0f\u5b89\u88c5 docker pull mongo:4.2.0-rc2-bionic","title":"\u5b89\u88c5"},{"location":"%E5%AD%A6%E4%B9%A0ing/mongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_3","text":"\u63d0\u524d\u521b\u5efamongodb \u6570\u636e\u6587\u4ef6\u5939 sudo mkdir -p /data/db \u542f\u52a8 mongodb\uff0c\u9ed8\u8ba4\u6570\u636e\u5e93\u76ee\u5f55\u5373\u4e3a /data/db \u542f\u52a8\uff1asudo mongod","title":"\u542f\u52a8"},{"location":"%E5%AD%A6%E4%B9%A0ing/mongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_4","text":"\u6267\u884c\u547d\u4ee4\uff1amongo \u767b\u5165\u5ba2\u6237\u7aef use YOURDB \u6570\u636e\u5e93\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\uff0c\u82e5\u5b58\u5728\u5219\u5207\u6362 db.createCollection(\"YOUR_COLLECTION\") \u521b\u5efa\u96c6\u5408","title":"\u4f7f\u7528"},{"location":"%E5%AD%A6%E4%B9%A0ing/mongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_5","text":"find({\"name\":{\"$regex\":\"\u6b66\u6c49\u4e5d\u901a\",\"$options\":\"i\"}}).limit(10) \u4e0a\u8ff0\u67e5\u8be2\uff0c\u6b63\u5219\u67e5\u8be2\u540d\u79f0\u53eb\"\u6b66\u6c49\u4e5d\u901a\"\u7684\u6240\u6709\u8bb0\u5f55\uff0coptions=i \u8868\u793a\u4e0d\u533a\u5206\u5927\u5c0f\u5199 option\u7684\u503c\u5305\u542b\uff1a i(\u4e0d\u533a\u5206\u5927\u5c0f\u5199)\uff0c m(\u5f53\u4f7f\u7528^\u4e0e$\u7b26\u53f7\u6a21\u7cca\u5339\u914d\u65f6\uff0c\u4f5c\u7528\u4e8e\u5c4f\u853d\u4e2d\u95f4\u7684\u6362\u884c\u7b26) , x(\u5ffd\u7565\u6ce8\u91ca\uff0c\u4ee5#\u5f00\u5934 /n\u7ed3\u5c3e)\uff0c s(\u5141\u8bb8\u6240\u6709\u5b57\u7b26\u5305\u62ec\u6362\u884c\u7b26\u53c2\u4e0e\u6a21\u7cca\u5339\u914d)","title":"\u6a21\u7cca\u67e5\u8be2"},{"location":"%E5%AD%A6%E4%B9%A0ing/mongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_6","text":"find({\"source\":\"apoi\",\"cityCode\":\"0571\"}).limit(120)","title":"\u6309\u6761\u4ef6\u5206\u9875\u67e5\u8be2"},{"location":"%E5%AD%A6%E4%B9%A0ing/mongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_7","text":"find({\"source\":\"apoi\",\"cityCode\":\"0571\"}).count() \u8d26\u6237\u64cd\u4f5c&\u6388\u6743","title":"\u6309\u6761\u4ef6\u67e5\u8be2\u7edf\u8ba1"},{"location":"%E5%AD%A6%E4%B9%A0ing/mongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#1","text":"\u5148\u521b\u5efa\u4e00\u4e2a\u6709grant\u6743\u9650\u7684\u7528\u6237\uff0c\u5982root\u6743\u9650\u7684\u7528\u6237\uff1a user \uff1a\u7528\u6237\u540d pwd \uff1a\u5bc6\u7801 db \uff1a\u6307\u5b9a\u8be5\u7528\u6237\u7684\u6570\u636e\u5e93\uff0cadmin\u662f\u7528\u4e8e\u6743\u9650\u63a7\u5236\u7684\u6570\u636e\u5e93\uff0c\u5982\u679c\u6ca1\u6709\u9700\u8981\u65b0\u5efa\u4e00\u4e2a roles \uff1a\u6307\u5b9a\u7528\u6237\u7684\u89d2\u8272\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u7a7a\u6570\u7ec4\u7ed9\u65b0\u7528\u6237\u8bbe\u5b9a\u7a7a\u89d2\u8272\uff1b\u5728roles\u5b57\u6bb5,\u53ef\u4ee5\u6307\u5b9a\u5185\u7f6e\u89d2\u8272\u548c\u7528\u6237\u5b9a\u4e49\u7684\u89d2\u8272\u3002role\u91cc\u7684\u89d2\u8272\u53ef\u4ee5\u9009\uff1a Built-In Roles\uff08\u5185\u7f6e\u89d2\u8272\uff09\uff1a \\1. \u6570\u636e\u5e93\u7528\u6237\u89d2\u8272\uff1aread\u3001readWrite; \\2. \u6570\u636e\u5e93\u7ba1\u7406\u89d2\u8272\uff1adbAdmin\u3001dbOwner\u3001userAdmin\uff1b \\3. \u96c6\u7fa4\u7ba1\u7406\u89d2\u8272\uff1aclusterAdmin\u3001clusterManager\u3001clusterMonitor\u3001hostManager\uff1b \\4. \u5907\u4efd\u6062\u590d\u89d2\u8272\uff1abackup\u3001restore\uff1b \\5. \u6240\u6709\u6570\u636e\u5e93\u89d2\u8272\uff1areadAnyDatabase\u3001readWriteAnyDatabase\u3001userAdminAnyDatabase\u3001dbAdminAnyDatabase \\6. \u8d85\u7ea7\u7528\u6237\u89d2\u8272\uff1aroot // \u8fd9\u91cc\u8fd8\u6709\u51e0\u4e2a\u89d2\u8272\u95f4\u63a5\u6216\u76f4\u63a5\u63d0\u4f9b\u4e86\u7cfb\u7edf\u8d85\u7ea7\u7528\u6237\u7684\u8bbf\u95ee\uff08dbOwner \u3001userAdmin\u3001userAdminAnyDatabase\uff09 \\7. \u5185\u90e8\u89d2\u8272\uff1a__system \u5177\u4f53\u89d2\u8272\u7684\u529f\u80fd\uff1a Read\uff1a\u5141\u8bb8\u7528\u6237\u8bfb\u53d6\u6307\u5b9a\u6570\u636e\u5e93 readWrite\uff1a\u5141\u8bb8\u7528\u6237\u8bfb\u5199\u6307\u5b9a\u6570\u636e\u5e93 dbAdmin\uff1a\u5141\u8bb8\u7528\u6237\u5728\u6307\u5b9a\u6570\u636e\u5e93\u4e2d\u6267\u884c\u7ba1\u7406\u51fd\u6570\uff0c\u5982\u7d22\u5f15\u521b\u5efa\u3001\u5220\u9664\uff0c\u67e5\u770b\u7edf\u8ba1\u6216\u8bbf\u95eesystem.profile userAdmin\uff1a\u5141\u8bb8\u7528\u6237\u5411system.users\u96c6\u5408\u5199\u5165\uff0c\u53ef\u4ee5\u627e\u6307\u5b9a\u6570\u636e\u5e93\u91cc\u521b\u5efa\u3001\u5220\u9664\u548c\u7ba1\u7406\u7528\u6237 clusterAdmin\uff1a\u53ea\u5728admin\u6570\u636e\u5e93\u4e2d\u53ef\u7528\uff0c\u8d4b\u4e88\u7528\u6237\u6240\u6709\u5206\u7247\u548c\u590d\u5236\u96c6\u76f8\u5173\u51fd\u6570\u7684\u7ba1\u7406\u6743\u9650\u3002 readAnyDatabase\uff1a\u53ea\u5728admin\u6570\u636e\u5e93\u4e2d\u53ef\u7528\uff0c\u8d4b\u4e88\u7528\u6237\u6240\u6709\u6570\u636e\u5e93\u7684\u8bfb\u6743\u9650 readWriteAnyDatabase\uff1a\u53ea\u5728admin\u6570\u636e\u5e93\u4e2d\u53ef\u7528\uff0c\u8d4b\u4e88\u7528\u6237\u6240\u6709\u6570\u636e\u5e93\u7684\u8bfb\u5199\u6743\u9650 userAdminAnyDatabase\uff1a\u53ea\u5728admin\u6570\u636e\u5e93\u4e2d\u53ef\u7528\uff0c\u8d4b\u4e88\u7528\u6237\u6240\u6709\u6570\u636e\u5e93\u7684userAdmin\u6743\u9650 dbAdminAnyDatabase\uff1a\u53ea\u5728admin\u6570\u636e\u5e93\u4e2d\u53ef\u7528\uff0c\u8d4b\u4e88\u7528\u6237\u6240\u6709\u6570\u636e\u5e93\u7684dbAdmin\u6743\u9650\u3002 root\uff1a\u53ea\u5728admin\u6570\u636e\u5e93\u4e2d\u53ef\u7528\u3002\u8d85\u7ea7\u8d26\u53f7\uff0c\u8d85\u7ea7\u6743\u9650","title":"1. \u521b\u5efa\u8d85\u7ea7\u7528\u6237"},{"location":"%E5%AD%A6%E4%B9%A0ing/mongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#2","text":"db.createUser({ user: \"useradmin\", pwd: \"adminpassword\", roles: [{ role: \"userAdminAnyDatabase\", db: \"admin\" }] })","title":"2. \u521b\u5efa\u6240\u6709\u6570\u636e\u5e93\u7ba1\u7406\u7528\u6237"},{"location":"%E5%AD%A6%E4%B9%A0ing/mongoDB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#3","text":"","title":"3. \u521b\u5efa\u5355\u4e2a\u6570\u636e\u5e93\u7528\u6237"},{"location":"%E5%AD%A6%E4%B9%A0ing/%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/","text":"\u4e2a\u4eba\u957f\u671f\u5b66\u4e60\u8ba1\u5212 \u5f00\u6e90\u4ee3\u7801\u7814\u7a76 \u5b66\u4e60ElasticSearch \u5b66\u4e60Dubbo\u6e90\u7801 \u5b66\u4e60RocketMQ\u6e90\u7801 \u5b66\u4e60Canal mysql binlog \u8ba2\u9605\u6e90\u7801 \u5b66\u4e60Netty \u9ad8\u7ea7\u7f51\u7edc\u7f16\u7a0b\u6e90\u7801 \u5b66\u4e60RabbitMQ \u5b66\u4e60docker \u5b66\u4e60K8S \u5b66\u4e60\u4e91\u539f\u751f CI/CD \u5b66\u4e60\u9ad8\u6027\u80fdmysql \u5b66\u4e60\u6570\u636e\u5e93\u5206\u5e93\u5206\u8868\u5b9e\u6218 \u5206\u5e03\u5f0f\u6280\u672f\u5b66\u4e60 \u5b66\u4e60sentinel \u9650\u6d41\u3001\u964d\u7ea7\u3001\u7194\u65ad\u4f7f\u7528\uff1b","title":"\u4e2a\u4eba\u5b66\u4e60\u8ba1\u5212"},{"location":"%E5%AD%A6%E4%B9%A0ing/%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/#_1","text":"","title":"\u4e2a\u4eba\u957f\u671f\u5b66\u4e60\u8ba1\u5212"},{"location":"%E5%AD%A6%E4%B9%A0ing/%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/#_2","text":"\u5b66\u4e60ElasticSearch \u5b66\u4e60Dubbo\u6e90\u7801 \u5b66\u4e60RocketMQ\u6e90\u7801 \u5b66\u4e60Canal mysql binlog \u8ba2\u9605\u6e90\u7801 \u5b66\u4e60Netty \u9ad8\u7ea7\u7f51\u7edc\u7f16\u7a0b\u6e90\u7801 \u5b66\u4e60RabbitMQ \u5b66\u4e60docker \u5b66\u4e60K8S \u5b66\u4e60\u4e91\u539f\u751f CI/CD \u5b66\u4e60\u9ad8\u6027\u80fdmysql \u5b66\u4e60\u6570\u636e\u5e93\u5206\u5e93\u5206\u8868\u5b9e\u6218","title":"\u5f00\u6e90\u4ee3\u7801\u7814\u7a76"},{"location":"%E5%AD%A6%E4%B9%A0ing/%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/#_3","text":"\u5b66\u4e60sentinel \u9650\u6d41\u3001\u964d\u7ea7\u3001\u7194\u65ad\u4f7f\u7528\uff1b","title":"\u5206\u5e03\u5f0f\u6280\u672f\u5b66\u4e60"},{"location":"%E5%AE%9E%E8%B7%B5/docker%20%E7%8E%AF%E5%A2%83%E4%B8%8BmongoDB%20%E8%BF%81%E7%A7%BB%E4%B9%8B%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D%E5%AE%9E%E6%88%98/","text":"docker \u73af\u5883\u4e0bmongoDB \u8fc1\u79fb\u4e4b\u5907\u4efd\u548c\u6062\u590d\u5b9e\u6218 1.\u80cc\u666f \u9700\u6c42\u662f\u8fd9\u6837\u7684\uff0c\u4e00\u4e2a\u670b\u53cb\u6700\u8fd1\u5728\u67d0\u4e91\u4e0a\u901a\u8fc7\u4ee3\u7406\u5546\u4e70\u4e86\u51e0\u53f0\u670d\u52a1\u5668\uff0c\u4f46\u662f\u548c\u539f\u6765\u7684ECS \u4e0d\u5728\u540c\u4e00\u4e2a\u533a\u57df\u3002\u672c\u7740\u957f\u671f\u8282\u7ea6\u6210\u672c\u7684\u539f\u5219\uff0c\u5e2e\u670b\u53cb\u641e\u5168\u7f51\u8fc1\u79fb\uff0c\u5176\u4e2d\u672c\u7bc7\u5c31\u662fmongodb\u8fc1\u79fb\u5907\u4efd\u8fd8\u539f\u5b9e\u6218\uff0c\u5176\u4e2dmongodb \u4e3a\u4e86\u8fd0\u7ef4\u7701\u4e8b\uff0c\u91c7\u7528docker\u5b89\u88c5\u3002\u4f46\u662f\u4e0d\u7528\u62c5\u5fc3\uff0c\u5b9e\u9645\u4e0adocker \u65e0\u975e\u4e0d\u8fc7\u5c31\u662f\u7c7b\u4f3c\u591a\u4e00\u5c42ssh\u800c\u5df2\u3002 \u6211\u7684\u4efb\u52a1\u5c31\u662f\u5c06mongoDB\u4eceZJK\u533a\u8fc1\u79fb\u5230HZ\u533a\u3002 \u5728\u8fc1\u79fb\u524d\uff0c\u6211\u4eec\u5047\u8bbe\u76ee\u6807\u673a\u5668\u5df2\u7ecf\u5b89\u88c5\u597d\u7248\u672c\u4e00\u81f4\u7684mongo\uff0c\u5e76\u4e14mongo\u5df2\u7ecf\u542f\u52a8\u3002 \u5f53\u7136\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u5b89\u88c5\u597d\uff0c\u90a3\u4e48\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f\u5b89\u88c5\u3002 \u76f4\u63a5\u4e0b\u8f7d\u538b\u7f29\u5305\u89e3\u538b\u5b89\u88c5\uff0c\u4e0b\u8f7d\u5730\u5740\uff1ahttps://www.mongodb.com/download-center/community \u89e3\u538b\u538b\u7f29\u5305 \u6267\u884c\u547d\u4ee4\uff1asudo mv mongodb-osx-x86_64-4.0.9 /usr/local/mongodb-4.0.9 \u914d\u7f6e~/.bash_profile \u6dfb\u52a0export PATH=/usr/local/mongodb-4.0.9/bin:$PATH \u5982\u4f7f\u7528zsh\uff0c\u5219\u5728~/.zshrc \u6dfb\u52a0 export PATH=/usr/local/mongodb-4.0.9/bin:$PATH docker \u65b9\u5f0f\u5b89\u88c5 docker pull mongo:4.2.0-rc2-bionic \u4f7f\u7528brew \u4e00\u952e\u5b89\u88c5 brew install mongo \uff08\u9002\u5408mac \u672c\u5730\u5b89\u88c5\uff09 2.\u5b9e\u6218 2.1 \u5907\u4efd \u4f7f\u7528\u547d\u4ee4\u5148\u5907\u4efd\uff0c\u4e0a\u4f20\u6587\u4ef6\u5230\u676d\u5dde\u533a\u57dfECS\u518d\u5bfc\u5165\u5907\u4efd \u767b\u5f55\u5230mongdb\u5bb9\u5668\u5185 docker exec -it 5f630f4b50d2 /bin/bash 5f630f4b50d2 \u662f\u5bb9\u5668\u7684ID\uff0c\u4e5f\u53ef\u4ee5\u7528\u5bb9\u5668name \u5907\u4efdDB mongodump -h 127.0.0.1 --port 27017 -d record -u root -p=rpwd123 -o /backup --authenticationDatabase admin \u4e0a\u8ff0\u6b65\u9aa4\u5c06\u4f1a\u5728mongoDB\u5bb9\u5668\u5185\u7684/backup/ \u76ee\u5f55\u4e0b\u751f\u6210 record \u76ee\u5f55\uff0c\u5185\u90e8\u5305\u542b\u5f88\u591a*.json\u6587\u4ef6\u3002\u8fd9\u4e9bjson\u6587\u4ef6\u5c31\u662f\u5907\u4efd\u597d\u7684\u6587\u4ef6\u3002 \u4e00\u952e\u538b\u7f29\u5907\u4efd\u6587\u4ef6\u5939 tar -zcvf record.tar.gz backup/record 2.2 \u62f7\u8d1d\u6587\u4ef6\u5230\u76ee\u6807\u673a\u5668 \u62f7\u8d1ddocker\u5bb9\u5668\u6587\u4ef6\u5230\u771f\u673a\u8def\u5f84 docker cp 5f630f4b50d2:/root/backup/record.tar.gz ~/docker/lby-mongo \u53d1\u9001\u6587\u4ef6\u5230\u76ee\u6807\u673a\u5668 scp record.tar.gz root@218.2 . .1 :/root/docker/mongo \u5c06\u76ee\u6807\u673a\u5668\u4e0a\u5907\u4efd\u6587\u4ef6\u62f7\u8d1d\u5230\u5bb9\u5668 docker cp record.tar.gz 605d3a9126cb:/backup/ 2.3 \u6062\u590d \u8fdb\u5165\u76ee\u6807\u673a\u5668\u5bb9\u5668\u5185\u90e8 docker exec -it 605d3a9126cb /bin/bash \u89e3\u538b\u6587\u4ef6 gunzip record.tar.gz tar -xvf record.tar \u767b\u5f55mongo\u3001\u521b\u5efa\u8d26\u53f7\u3001\u6570\u636e\u5e93\u6388\u6743\u64cd\u4f5c use admin db.createUser({user:'root',pwd:' **** ',roles:['userAdminAnyDatabase']}) db.auth('root',' **** ') \u4e0a\u8ff0\u6b65\u9aa4\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u8d85\u7ea7\u7528\u6237root\u3002\u8be5root\u7528\u4e8e\u7ba1\u7406admin \u5e93\u91cc\u7684\u7528\u6237\u53ca\u6743\u9650\u3002 db.createUser({ user: \"anyadmin\", pwd: \"k * * * ***q\", roles: ['readWriteAnyDatabase'] }) \u8be5\u6b65\u9aa4\u521b\u5efa\u4e86\u4e00\u4e2a\u7528\u4e8e\u7ba1\u7406\u5168\u90e8DB\u7684\u7528\u6237\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6765anyadmin\u8d26\u53f7\u6765\u8fdb\u884c\u6062\u590d\u3002 \u521b\u5efa\u4e00\u4e2a\u540c\u540dDB \u5728\u5bb9\u5668\u5185\u6267\u884c mongo use record db.auth('anyadmin', 'k * * * ***q') db.createCollection(\"demo\") \u7528\u56fe\u5f62\u7ba1\u7406\u5de5\u5177\u767b\u5f55\u9a8c\u8bc1\u662f\u5426\u53ef\u4ee5\u770b\u5230DB\u548c\u96c6\u5408\uff08\u7565\uff09 \u6267\u884c\u6062\u590d\u64cd\u4f5c mongorestore -h localhost:27017 -d record -u anyadmin -p=k * * q --dir /backup/record --authenticationDatabase admin \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4f60\u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u6267\u884c\u65f6\uff0c\u5e94\u8be5\u662f\u4e00\u5e06\u98ce\u987a\u7684\u3002\u4f46\u5982\u679c\u4f60\u4e0d\u8d70\u8fd0\u9047\u5230\u4e86\u4e0b\u9762\u7684\u9519\u8bef\u3002\u90a3\u4e48\u4f60\u5c31\u5e94\u8be5\u597d\u597d\u68c0\u67e5\u4e0b\uff0c\u662f\u5426\u6709\u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u6b63\u786e\u6267\u884c\u3002 2.4 \u8e29\u5751\u7b14\u8bb0 \u62a5\u9519\u4fe1\u606f \u200b \u7b2c\u4e00\u6b21\u6062\u590d\u65f6\uff0c\u6267\u884c\uff1a mongorestore -h localhost:27017 -d record --dir /backup/record \u6ca1\u6709\u4f7f\u7528\u7528\u6237\u8ba4\u8bc1\u65b9\u5f0f\u62a5\u9519\u5982\u4e0b\uff1a 2020-12-01T03:36:49.405+0000 Failed: record.send_record: error reading database: (Unauthorized) not authorized on record to execute command { listCollections: 1, filter: {}, $db: \"record\", $readPreference: { mode: \"primaryPreferred\" } } 2020-12-01T03:36:49.405+0000 0 document(s) restored successfully. 0 document(s) failed to restore. \u7b2c\u4e8c\u6b21\u6062\u590d\u65f6\uff0c\u6267\u884c\uff1a mongorestore -h localhost:27017 -d record -u l**** -p=k**** --dir /backup/record \u6b64\u65f6\u5df2\u7136\u90a3\u4f1a\u62a5\u9519\uff0c\u62a5\u6743\u9650\u8ba4\u8bc1\u76f8\u5173\u62a5\u9519\uff0c\u53ea\u8981\u52a0\u4e0a --authenticationDatabase admin \u5373\u53ef\u3002 \u6b64\u5904\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u5747\u662f\u539f\u6765\u7684db\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002\u4e3a\u4e86\u8282\u7ea6\u65f6\u95f4\uff0c\u6211\u76f4\u63a5\u6309\u7167\u539fdb \u7528\u6237\u540d\u548c\u5bc6\u7801\u5728\u65b0\u7684mongodb\u4e0a\u521b\u5efa\u5e76\u6388\u6743\u3002 \u518d\u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\uff0c\u7ec8\u4e8e\u6210\u529f\u3002 2020-12-01T06:51:12.936+0000 no indexes to restore 2020-12-01T06:51:12.936+0000 finished restoring record.2t0.cn (5287717 documents, 0 failures) **** 2020-12-01T06:52:51.920+0000 [######################..] record.send_record 4.15GB/4.33GB (95.8%) **** 2020-12-01T06:52:59.043+0000 [########################] record.send_record 4.33GB/4.33GB (100.0%) 2020-12-01T06:52:59.043+0000 restoring indexes for collection record.send_record from metadata 2020-12-01T06:53:52.512+0000 finished restoring record.send_record (4075860 documents, 0 failures) 2020-12-01T06:53:52.512+0000 14808894 document(s) restored successfully. 0 document(s) failed to restore. \u5f53\u7136\uff0c\u6574\u4e2a\u8fc1\u79fb\u4e2d\u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u5751\u7684\uff0c\u6bd4\u5982\u5b89\u88c5docker\u65f6\uff0c\u7531\u4e8e\u9700\u8981\u914d\u5957\u4f7f\u7528docker-compose\u7ec4\u4ef6\u5feb\u6377\u90e8\u7f72\u5bb9\u5668\uff0c\u6240\u4ee5\u9700\u8981\u5b89\u88c5docker-compose\uff0c\u5728\u5b89\u88c5\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230pip \u547d\u4ee4\u4e0d\u5b58\u5728\u7b49\u95ee\u9898\u3002 \u8be6\u89c1\uff1a [\u603b\u7ed3] \u89e3\u51b3docker-compose \u5b89\u88c5\u5931\u8d25","title":"docker \u73af\u5883\u4e0bmongoDB \u8fc1\u79fb\u4e4b\u5907\u4efd\u548c\u6062\u590d\u5b9e\u6218"},{"location":"%E5%AE%9E%E8%B7%B5/docker%20%E7%8E%AF%E5%A2%83%E4%B8%8BmongoDB%20%E8%BF%81%E7%A7%BB%E4%B9%8B%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D%E5%AE%9E%E6%88%98/#docker-mongodb","text":"","title":"docker \u73af\u5883\u4e0bmongoDB \u8fc1\u79fb\u4e4b\u5907\u4efd\u548c\u6062\u590d\u5b9e\u6218"},{"location":"%E5%AE%9E%E8%B7%B5/docker%20%E7%8E%AF%E5%A2%83%E4%B8%8BmongoDB%20%E8%BF%81%E7%A7%BB%E4%B9%8B%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D%E5%AE%9E%E6%88%98/#1","text":"\u9700\u6c42\u662f\u8fd9\u6837\u7684\uff0c\u4e00\u4e2a\u670b\u53cb\u6700\u8fd1\u5728\u67d0\u4e91\u4e0a\u901a\u8fc7\u4ee3\u7406\u5546\u4e70\u4e86\u51e0\u53f0\u670d\u52a1\u5668\uff0c\u4f46\u662f\u548c\u539f\u6765\u7684ECS \u4e0d\u5728\u540c\u4e00\u4e2a\u533a\u57df\u3002\u672c\u7740\u957f\u671f\u8282\u7ea6\u6210\u672c\u7684\u539f\u5219\uff0c\u5e2e\u670b\u53cb\u641e\u5168\u7f51\u8fc1\u79fb\uff0c\u5176\u4e2d\u672c\u7bc7\u5c31\u662fmongodb\u8fc1\u79fb\u5907\u4efd\u8fd8\u539f\u5b9e\u6218\uff0c\u5176\u4e2dmongodb \u4e3a\u4e86\u8fd0\u7ef4\u7701\u4e8b\uff0c\u91c7\u7528docker\u5b89\u88c5\u3002\u4f46\u662f\u4e0d\u7528\u62c5\u5fc3\uff0c\u5b9e\u9645\u4e0adocker \u65e0\u975e\u4e0d\u8fc7\u5c31\u662f\u7c7b\u4f3c\u591a\u4e00\u5c42ssh\u800c\u5df2\u3002 \u6211\u7684\u4efb\u52a1\u5c31\u662f\u5c06mongoDB\u4eceZJK\u533a\u8fc1\u79fb\u5230HZ\u533a\u3002 \u5728\u8fc1\u79fb\u524d\uff0c\u6211\u4eec\u5047\u8bbe\u76ee\u6807\u673a\u5668\u5df2\u7ecf\u5b89\u88c5\u597d\u7248\u672c\u4e00\u81f4\u7684mongo\uff0c\u5e76\u4e14mongo\u5df2\u7ecf\u542f\u52a8\u3002 \u5f53\u7136\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u5b89\u88c5\u597d\uff0c\u90a3\u4e48\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f\u5b89\u88c5\u3002 \u76f4\u63a5\u4e0b\u8f7d\u538b\u7f29\u5305\u89e3\u538b\u5b89\u88c5\uff0c\u4e0b\u8f7d\u5730\u5740\uff1ahttps://www.mongodb.com/download-center/community \u89e3\u538b\u538b\u7f29\u5305 \u6267\u884c\u547d\u4ee4\uff1asudo mv mongodb-osx-x86_64-4.0.9 /usr/local/mongodb-4.0.9 \u914d\u7f6e~/.bash_profile \u6dfb\u52a0export PATH=/usr/local/mongodb-4.0.9/bin:$PATH \u5982\u4f7f\u7528zsh\uff0c\u5219\u5728~/.zshrc \u6dfb\u52a0 export PATH=/usr/local/mongodb-4.0.9/bin:$PATH docker \u65b9\u5f0f\u5b89\u88c5 docker pull mongo:4.2.0-rc2-bionic \u4f7f\u7528brew \u4e00\u952e\u5b89\u88c5 brew install mongo \uff08\u9002\u5408mac \u672c\u5730\u5b89\u88c5\uff09","title":"1.\u80cc\u666f"},{"location":"%E5%AE%9E%E8%B7%B5/docker%20%E7%8E%AF%E5%A2%83%E4%B8%8BmongoDB%20%E8%BF%81%E7%A7%BB%E4%B9%8B%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D%E5%AE%9E%E6%88%98/#2","text":"","title":"2.\u5b9e\u6218"},{"location":"%E5%AE%9E%E8%B7%B5/docker%20%E7%8E%AF%E5%A2%83%E4%B8%8BmongoDB%20%E8%BF%81%E7%A7%BB%E4%B9%8B%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D%E5%AE%9E%E6%88%98/#21","text":"\u4f7f\u7528\u547d\u4ee4\u5148\u5907\u4efd\uff0c\u4e0a\u4f20\u6587\u4ef6\u5230\u676d\u5dde\u533a\u57dfECS\u518d\u5bfc\u5165\u5907\u4efd \u767b\u5f55\u5230mongdb\u5bb9\u5668\u5185 docker exec -it 5f630f4b50d2 /bin/bash 5f630f4b50d2 \u662f\u5bb9\u5668\u7684ID\uff0c\u4e5f\u53ef\u4ee5\u7528\u5bb9\u5668name \u5907\u4efdDB mongodump -h 127.0.0.1 --port 27017 -d record -u root -p=rpwd123 -o /backup --authenticationDatabase admin \u4e0a\u8ff0\u6b65\u9aa4\u5c06\u4f1a\u5728mongoDB\u5bb9\u5668\u5185\u7684/backup/ \u76ee\u5f55\u4e0b\u751f\u6210 record \u76ee\u5f55\uff0c\u5185\u90e8\u5305\u542b\u5f88\u591a*.json\u6587\u4ef6\u3002\u8fd9\u4e9bjson\u6587\u4ef6\u5c31\u662f\u5907\u4efd\u597d\u7684\u6587\u4ef6\u3002 \u4e00\u952e\u538b\u7f29\u5907\u4efd\u6587\u4ef6\u5939 tar -zcvf record.tar.gz backup/record","title":"2.1 \u5907\u4efd"},{"location":"%E5%AE%9E%E8%B7%B5/docker%20%E7%8E%AF%E5%A2%83%E4%B8%8BmongoDB%20%E8%BF%81%E7%A7%BB%E4%B9%8B%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D%E5%AE%9E%E6%88%98/#22","text":"\u62f7\u8d1ddocker\u5bb9\u5668\u6587\u4ef6\u5230\u771f\u673a\u8def\u5f84 docker cp 5f630f4b50d2:/root/backup/record.tar.gz ~/docker/lby-mongo \u53d1\u9001\u6587\u4ef6\u5230\u76ee\u6807\u673a\u5668 scp record.tar.gz root@218.2 . .1 :/root/docker/mongo \u5c06\u76ee\u6807\u673a\u5668\u4e0a\u5907\u4efd\u6587\u4ef6\u62f7\u8d1d\u5230\u5bb9\u5668 docker cp record.tar.gz 605d3a9126cb:/backup/","title":"2.2 \u62f7\u8d1d\u6587\u4ef6\u5230\u76ee\u6807\u673a\u5668"},{"location":"%E5%AE%9E%E8%B7%B5/docker%20%E7%8E%AF%E5%A2%83%E4%B8%8BmongoDB%20%E8%BF%81%E7%A7%BB%E4%B9%8B%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D%E5%AE%9E%E6%88%98/#23","text":"\u8fdb\u5165\u76ee\u6807\u673a\u5668\u5bb9\u5668\u5185\u90e8 docker exec -it 605d3a9126cb /bin/bash \u89e3\u538b\u6587\u4ef6 gunzip record.tar.gz tar -xvf record.tar \u767b\u5f55mongo\u3001\u521b\u5efa\u8d26\u53f7\u3001\u6570\u636e\u5e93\u6388\u6743\u64cd\u4f5c use admin db.createUser({user:'root',pwd:' **** ',roles:['userAdminAnyDatabase']}) db.auth('root',' **** ') \u4e0a\u8ff0\u6b65\u9aa4\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u8d85\u7ea7\u7528\u6237root\u3002\u8be5root\u7528\u4e8e\u7ba1\u7406admin \u5e93\u91cc\u7684\u7528\u6237\u53ca\u6743\u9650\u3002 db.createUser({ user: \"anyadmin\", pwd: \"k * * * ***q\", roles: ['readWriteAnyDatabase'] }) \u8be5\u6b65\u9aa4\u521b\u5efa\u4e86\u4e00\u4e2a\u7528\u4e8e\u7ba1\u7406\u5168\u90e8DB\u7684\u7528\u6237\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6765anyadmin\u8d26\u53f7\u6765\u8fdb\u884c\u6062\u590d\u3002 \u521b\u5efa\u4e00\u4e2a\u540c\u540dDB \u5728\u5bb9\u5668\u5185\u6267\u884c mongo use record db.auth('anyadmin', 'k * * * ***q') db.createCollection(\"demo\") \u7528\u56fe\u5f62\u7ba1\u7406\u5de5\u5177\u767b\u5f55\u9a8c\u8bc1\u662f\u5426\u53ef\u4ee5\u770b\u5230DB\u548c\u96c6\u5408\uff08\u7565\uff09 \u6267\u884c\u6062\u590d\u64cd\u4f5c mongorestore -h localhost:27017 -d record -u anyadmin -p=k * * q --dir /backup/record --authenticationDatabase admin \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4f60\u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u6267\u884c\u65f6\uff0c\u5e94\u8be5\u662f\u4e00\u5e06\u98ce\u987a\u7684\u3002\u4f46\u5982\u679c\u4f60\u4e0d\u8d70\u8fd0\u9047\u5230\u4e86\u4e0b\u9762\u7684\u9519\u8bef\u3002\u90a3\u4e48\u4f60\u5c31\u5e94\u8be5\u597d\u597d\u68c0\u67e5\u4e0b\uff0c\u662f\u5426\u6709\u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u6b63\u786e\u6267\u884c\u3002","title":"2.3 \u6062\u590d"},{"location":"%E5%AE%9E%E8%B7%B5/docker%20%E7%8E%AF%E5%A2%83%E4%B8%8BmongoDB%20%E8%BF%81%E7%A7%BB%E4%B9%8B%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D%E5%AE%9E%E6%88%98/#24","text":"\u62a5\u9519\u4fe1\u606f \u200b \u7b2c\u4e00\u6b21\u6062\u590d\u65f6\uff0c\u6267\u884c\uff1a mongorestore -h localhost:27017 -d record --dir /backup/record \u6ca1\u6709\u4f7f\u7528\u7528\u6237\u8ba4\u8bc1\u65b9\u5f0f\u62a5\u9519\u5982\u4e0b\uff1a 2020-12-01T03:36:49.405+0000 Failed: record.send_record: error reading database: (Unauthorized) not authorized on record to execute command { listCollections: 1, filter: {}, $db: \"record\", $readPreference: { mode: \"primaryPreferred\" } } 2020-12-01T03:36:49.405+0000 0 document(s) restored successfully. 0 document(s) failed to restore. \u7b2c\u4e8c\u6b21\u6062\u590d\u65f6\uff0c\u6267\u884c\uff1a mongorestore -h localhost:27017 -d record -u l**** -p=k**** --dir /backup/record \u6b64\u65f6\u5df2\u7136\u90a3\u4f1a\u62a5\u9519\uff0c\u62a5\u6743\u9650\u8ba4\u8bc1\u76f8\u5173\u62a5\u9519\uff0c\u53ea\u8981\u52a0\u4e0a --authenticationDatabase admin \u5373\u53ef\u3002 \u6b64\u5904\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u5747\u662f\u539f\u6765\u7684db\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002\u4e3a\u4e86\u8282\u7ea6\u65f6\u95f4\uff0c\u6211\u76f4\u63a5\u6309\u7167\u539fdb \u7528\u6237\u540d\u548c\u5bc6\u7801\u5728\u65b0\u7684mongodb\u4e0a\u521b\u5efa\u5e76\u6388\u6743\u3002 \u518d\u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\uff0c\u7ec8\u4e8e\u6210\u529f\u3002 2020-12-01T06:51:12.936+0000 no indexes to restore 2020-12-01T06:51:12.936+0000 finished restoring record.2t0.cn (5287717 documents, 0 failures) **** 2020-12-01T06:52:51.920+0000 [######################..] record.send_record 4.15GB/4.33GB (95.8%) **** 2020-12-01T06:52:59.043+0000 [########################] record.send_record 4.33GB/4.33GB (100.0%) 2020-12-01T06:52:59.043+0000 restoring indexes for collection record.send_record from metadata 2020-12-01T06:53:52.512+0000 finished restoring record.send_record (4075860 documents, 0 failures) 2020-12-01T06:53:52.512+0000 14808894 document(s) restored successfully. 0 document(s) failed to restore. \u5f53\u7136\uff0c\u6574\u4e2a\u8fc1\u79fb\u4e2d\u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u5751\u7684\uff0c\u6bd4\u5982\u5b89\u88c5docker\u65f6\uff0c\u7531\u4e8e\u9700\u8981\u914d\u5957\u4f7f\u7528docker-compose\u7ec4\u4ef6\u5feb\u6377\u90e8\u7f72\u5bb9\u5668\uff0c\u6240\u4ee5\u9700\u8981\u5b89\u88c5docker-compose\uff0c\u5728\u5b89\u88c5\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230pip \u547d\u4ee4\u4e0d\u5b58\u5728\u7b49\u95ee\u9898\u3002 \u8be6\u89c1\uff1a [\u603b\u7ed3] \u89e3\u51b3docker-compose \u5b89\u88c5\u5931\u8d25","title":"2.4 \u8e29\u5751\u7b14\u8bb0"},{"location":"%E5%AE%9E%E8%B7%B5/mac%20%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85%E6%8C%87%E5%8D%97/","text":"1.\u5b89\u88c5charles\uff08\u7834\u89e3\u7248\uff09 1.1 \u4e0b\u8f7d \u4e0b\u8f7d\u5730\u5740-> \u6233\u6211 \u4e0b\u8f7d\u4e0b\u6765\u7684\u6587\u4ef6\u5185\u5305\u542bdmg\u5b89\u88c5\u5305\u548c\u7834\u89e3\u7684jar\u5305\u3002 \u89e3\u538b\u6587\u4ef6\uff0c\u5e76\u5b89\u88c5\uff0c\u5f97\u5230\u7684charles-proxy-4.2.1.dmg\u6587\u4ef6\u662f\u5b89\u88c5\u5305\uff0ccharler.jar\u6587\u4ef6\u662f\u7834\u89e3jar\u5305\uff1b 1.2 \u7834\u89e3 \u6253\u5f00mac \u8bbf\u8fbe\uff0c\u627e\u5230\u3010\u5e94\u7528\u7a0b\u5e8f\u3011\uff0c\u9009\u4e2dcharles \u53f3\u952e \u70b9\u51fb\u201d\u663e\u793a\u5305\u5185\u5bb9\u201c\u3002 \u4e8e\u662f\u8fdb\u5165\u5230charles\u5b89\u88c5\u76ee\u5f55\uff0c\u5c06\u4e0a\u4e00\u6b65\u4e0b\u8f7d\u5f97\u5230\u7684charles.jar \u62f7\u8d1d\u5230Contents->java \u4e0b\uff0c\u7cfb\u7edf\u63d0\u793a\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u9009\u62e9\u66ff\u6362\u8986\u76d6\u3002 \u4e8e\u662f\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u7834\u89e3\u6210\u529f\u4e86\uff0c\u8fd9\u91cc\u7684\u53ef\u80fd\u8981\u6ce8\u610f\uff0c\u5982\u679c\u662f\u65b0\u7248\u672cmac\u7684\u7cfb\u7edf\uff0c\u6b64\u65f6\u6253\u5f00charles\u4f1a\u62a5\u201dxxx\u6587\u4ef6\u5df2\u635f\u574f\u2026\u2026\u201c\u3002\u90a3\u4e48\u8bf7\u7ee7\u7eed\u770b1.3\u5c0f\u8282\u3002 1.3 \u8bbe\u7f6emac \u6253\u5f00\u4efb\u4f55\u6765\u6e90 \u5982\u679c\u4f60\u9047\u5230\u4e86\u65e0\u6cd5\u6253\u5f00charles\uff0c\u90a3\u662f\u56e0\u4e3amac\u7684\u5b89\u5168\u95ee\u9898\u6363\u9b3c\u3002 \u53ea\u9700\u4e00\u6b65\u5c31\u53ef\u4ee5\uff1a 1. \u6253\u5f00mac\u7ec8\u7aef\uff08\uff0c\u7ec8\u7aef\u9ed8\u8ba4\u5728\u201c\u5176\u4ed6\u201d\u4e2d\uff09\uff1b \u8f93\u5165\u4ee3\u7801\uff1asudo spctl --master-disable \uff08master\u524d\u9762\u4e3a\u4e24\u4e2a\u77ed\u6a2a\u7ebf\uff09 \u6267\u884c\u547d\u4ee4\u65f6\u8981\u6c42\u9a8c\u8bc1\u7528\u6237\u7ba1\u7406\u5458\u5bc6\u7801\uff0c\u8f93\u5165\u5373\u53ef\u3002 \u6b64\u65f6\u6253\u5f00\u201d\u7cfb\u7edf\u504f\u597d\u8bbe\u7f6e\u201c\uff0c\u67e5\u770b\u201d\u5b89\u5168\u6027\u4e0e\u9690\u79c1\u201c\uff0c\u5df2\u7ecf\u80fd\u770b\u5230\u3010\u4efb\u4f55\u6765\u6e90\u3011\u3002 2.\u4f7f\u7528charles\u6293\u5305PC\u7aef\u8bf7\u6c42 PC\u7aef\u6293\u5305\u5f88\u7b80\u5355\uff0c\u5982\u679c\u4f60\u9700\u8981\u6293https\u7684\uff0c\u53ef\u4ee5\u6309\u4e0b\u9762\u6b65\u9aa4\u64cd\u4f5c\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002 2.1 \u5b89\u88c5\u8bc1\u4e66 \u70b9\u51fb\u201dhelp\u201c -> \"SSL Proxying\" -> \"Install Charles Root Certiflcate \" \u5f39\u6846\u9009\u62e9\u201d\u7cfb\u7edf\u201c\uff0c\u6b64\u65f6\u8bc1\u4e66\u662f\u4e0d\u88ab\u4fe1\u4efb\u72b6\u6001\uff0c\u53f3\u51fbcharles \u8bc1\u4e66 \u5728\u6b64\u9009\u62e9\u201d\u59cb\u7ec8\u4fe1\u4efb\u201c\u5373\u53ef\u3002 2.2 \u914d\u7f6eSSL proxying Settings \u70b9\u51fb\u83dc\u5355\u201dProxy\u201c -> SSL proxying Settings \u8f93\u5165\u9700\u8981\u6293\u53d6\u7684\u7ad9\u70b9 3.\u4f7f\u7528charles\u6293\u5305\u624b\u673a\u7aef\u8bf7\u6c42 \u6293\u53d6\u624b\u673a\u7684\u539f\u7406\u5f88\u7b80\u5355\uff0c\u4e3b\u8981\u539f\u7406\u662f\uff1a 1.\u6211\u4eec\u5728PC\u4e0a\u542f\u52a8charles\uff0ccharles\u5f00\u653e\u81ea\u5df1\u7684\u4ee3\u7406\u7aef\u53e3\uff08\u9ed8\u8ba4\u662f8888\uff09\uff1b 2.\u7136\u540e\u786e\u4fdd\u624b\u673a\u548cPC\u8fde\u63a5\u540c\u4e00\u4e2awifi\uff0c\u4e5f\u5c31\u662f\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5c40\u57df\u7f51\uff1b 3.\u6b64\u65f6\u624b\u673a\u8fde\u63a5charles \u4ee3\u7406\u5730\u5740\u3002charles\u65b9\u53ef\u4ee3\u7406\u6293\u53d6\u624b\u673a\u7684\u8bf7\u6c42\u3002 3.1 \u8bbe\u7f6e\u6216\u68c0\u67e5charles \u68c0\u67e5\u4ee3\u7406\u7aef\u53e3 \u6253\u5f00\u83dc\u5355\u201dProxy\u201c -> \"Proxy Settings\"\uff0c\u5982\u4e0b\u56fe \u8bbe\u7f6e\u4f60\u60f3\u8981\u7684\u4ee3\u7406\u7aef\u53e3\uff0c\u6216\u8005\u7ee7\u7eed\u4f7f\u7528\u9ed8\u8ba4\u7684\u201d8888\u201c\u3002 \u68c0\u67e5PC\u672c\u673aIP \u67e5\u770bPC\u672c\u673aIP\uff0c\u83dc\u5355\"help\" -> \"Local IP Address\" PC\u672c\u673a\u7684IP\u5730\u5740\uff0c\u4e5f\u5373\u662fcharles\u7684\u5730\u5740 \u8fd9\u91cc\u7684192.168.31.250\u5c31\u662f\u6211\u4eec\u624b\u673a\u5373\u5c06\u53ef\u4ee5\u4f7f\u7528\u7684\u4ee3\u7406IP\u3002 3.2 \u8bbe\u7f6e\u624b\u673a\u4ee3\u7406 \u5fc5\u987b\u786e\u4fdd\u624b\u673a\u548cPC\u8fde\u63a5\u7684\u662f\u540c\u4e00\u4e2a\u7f51\u7edc\u3002 \u6309\u5982\u4e0b\u8bbe\u7f6e\u624b\u673a\u4ee3\u7406 3.3 \u6293\u5305\u9a8c\u8bc1 \u624b\u673a\u4e0a\u6253\u5f00\u4f60\u9700\u8981\u6293\u5305\u7684\u5e94\u7528\uff0c\u53d1\u8d77http request \u7136\u540e\u53bbcharles\u4e0a\u9a8c\u8bc1\u662f\u5426\u5df2\u7ecf\u6293\u5230\u5305\u3002 \u795d\u613f\u4f60\uff0c\u4e00\u5207\u987a\u5229\u3002","title":"Mac \u4f7f\u7528charles\u6293\u5305\u6307\u5357"},{"location":"%E5%AE%9E%E8%B7%B5/mac%20%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85%E6%8C%87%E5%8D%97/#1charles","text":"","title":"1.\u5b89\u88c5charles\uff08\u7834\u89e3\u7248\uff09"},{"location":"%E5%AE%9E%E8%B7%B5/mac%20%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85%E6%8C%87%E5%8D%97/#11","text":"\u4e0b\u8f7d\u5730\u5740-> \u6233\u6211 \u4e0b\u8f7d\u4e0b\u6765\u7684\u6587\u4ef6\u5185\u5305\u542bdmg\u5b89\u88c5\u5305\u548c\u7834\u89e3\u7684jar\u5305\u3002 \u89e3\u538b\u6587\u4ef6\uff0c\u5e76\u5b89\u88c5\uff0c\u5f97\u5230\u7684charles-proxy-4.2.1.dmg\u6587\u4ef6\u662f\u5b89\u88c5\u5305\uff0ccharler.jar\u6587\u4ef6\u662f\u7834\u89e3jar\u5305\uff1b","title":"1.1 \u4e0b\u8f7d"},{"location":"%E5%AE%9E%E8%B7%B5/mac%20%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85%E6%8C%87%E5%8D%97/#12","text":"\u6253\u5f00mac \u8bbf\u8fbe\uff0c\u627e\u5230\u3010\u5e94\u7528\u7a0b\u5e8f\u3011\uff0c\u9009\u4e2dcharles \u53f3\u952e \u70b9\u51fb\u201d\u663e\u793a\u5305\u5185\u5bb9\u201c\u3002 \u4e8e\u662f\u8fdb\u5165\u5230charles\u5b89\u88c5\u76ee\u5f55\uff0c\u5c06\u4e0a\u4e00\u6b65\u4e0b\u8f7d\u5f97\u5230\u7684charles.jar \u62f7\u8d1d\u5230Contents->java \u4e0b\uff0c\u7cfb\u7edf\u63d0\u793a\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u9009\u62e9\u66ff\u6362\u8986\u76d6\u3002 \u4e8e\u662f\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u7834\u89e3\u6210\u529f\u4e86\uff0c\u8fd9\u91cc\u7684\u53ef\u80fd\u8981\u6ce8\u610f\uff0c\u5982\u679c\u662f\u65b0\u7248\u672cmac\u7684\u7cfb\u7edf\uff0c\u6b64\u65f6\u6253\u5f00charles\u4f1a\u62a5\u201dxxx\u6587\u4ef6\u5df2\u635f\u574f\u2026\u2026\u201c\u3002\u90a3\u4e48\u8bf7\u7ee7\u7eed\u770b1.3\u5c0f\u8282\u3002","title":"1.2 \u7834\u89e3"},{"location":"%E5%AE%9E%E8%B7%B5/mac%20%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85%E6%8C%87%E5%8D%97/#13-mac","text":"\u5982\u679c\u4f60\u9047\u5230\u4e86\u65e0\u6cd5\u6253\u5f00charles\uff0c\u90a3\u662f\u56e0\u4e3amac\u7684\u5b89\u5168\u95ee\u9898\u6363\u9b3c\u3002 \u53ea\u9700\u4e00\u6b65\u5c31\u53ef\u4ee5\uff1a 1. \u6253\u5f00mac\u7ec8\u7aef\uff08\uff0c\u7ec8\u7aef\u9ed8\u8ba4\u5728\u201c\u5176\u4ed6\u201d\u4e2d\uff09\uff1b \u8f93\u5165\u4ee3\u7801\uff1asudo spctl --master-disable \uff08master\u524d\u9762\u4e3a\u4e24\u4e2a\u77ed\u6a2a\u7ebf\uff09 \u6267\u884c\u547d\u4ee4\u65f6\u8981\u6c42\u9a8c\u8bc1\u7528\u6237\u7ba1\u7406\u5458\u5bc6\u7801\uff0c\u8f93\u5165\u5373\u53ef\u3002 \u6b64\u65f6\u6253\u5f00\u201d\u7cfb\u7edf\u504f\u597d\u8bbe\u7f6e\u201c\uff0c\u67e5\u770b\u201d\u5b89\u5168\u6027\u4e0e\u9690\u79c1\u201c\uff0c\u5df2\u7ecf\u80fd\u770b\u5230\u3010\u4efb\u4f55\u6765\u6e90\u3011\u3002","title":"1.3 \u8bbe\u7f6emac \u6253\u5f00\u4efb\u4f55\u6765\u6e90"},{"location":"%E5%AE%9E%E8%B7%B5/mac%20%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85%E6%8C%87%E5%8D%97/#2charlespc","text":"PC\u7aef\u6293\u5305\u5f88\u7b80\u5355\uff0c\u5982\u679c\u4f60\u9700\u8981\u6293https\u7684\uff0c\u53ef\u4ee5\u6309\u4e0b\u9762\u6b65\u9aa4\u64cd\u4f5c\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002","title":"2.\u4f7f\u7528charles\u6293\u5305PC\u7aef\u8bf7\u6c42"},{"location":"%E5%AE%9E%E8%B7%B5/mac%20%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85%E6%8C%87%E5%8D%97/#21","text":"\u70b9\u51fb\u201dhelp\u201c -> \"SSL Proxying\" -> \"Install Charles Root Certiflcate \" \u5f39\u6846\u9009\u62e9\u201d\u7cfb\u7edf\u201c\uff0c\u6b64\u65f6\u8bc1\u4e66\u662f\u4e0d\u88ab\u4fe1\u4efb\u72b6\u6001\uff0c\u53f3\u51fbcharles \u8bc1\u4e66 \u5728\u6b64\u9009\u62e9\u201d\u59cb\u7ec8\u4fe1\u4efb\u201c\u5373\u53ef\u3002","title":"2.1 \u5b89\u88c5\u8bc1\u4e66"},{"location":"%E5%AE%9E%E8%B7%B5/mac%20%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85%E6%8C%87%E5%8D%97/#22-ssl-proxying-settings","text":"\u70b9\u51fb\u83dc\u5355\u201dProxy\u201c -> SSL proxying Settings \u8f93\u5165\u9700\u8981\u6293\u53d6\u7684\u7ad9\u70b9","title":"2.2 \u914d\u7f6eSSL proxying Settings"},{"location":"%E5%AE%9E%E8%B7%B5/mac%20%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85%E6%8C%87%E5%8D%97/#3charles","text":"\u6293\u53d6\u624b\u673a\u7684\u539f\u7406\u5f88\u7b80\u5355\uff0c\u4e3b\u8981\u539f\u7406\u662f\uff1a 1.\u6211\u4eec\u5728PC\u4e0a\u542f\u52a8charles\uff0ccharles\u5f00\u653e\u81ea\u5df1\u7684\u4ee3\u7406\u7aef\u53e3\uff08\u9ed8\u8ba4\u662f8888\uff09\uff1b 2.\u7136\u540e\u786e\u4fdd\u624b\u673a\u548cPC\u8fde\u63a5\u540c\u4e00\u4e2awifi\uff0c\u4e5f\u5c31\u662f\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5c40\u57df\u7f51\uff1b 3.\u6b64\u65f6\u624b\u673a\u8fde\u63a5charles \u4ee3\u7406\u5730\u5740\u3002charles\u65b9\u53ef\u4ee3\u7406\u6293\u53d6\u624b\u673a\u7684\u8bf7\u6c42\u3002","title":"3.\u4f7f\u7528charles\u6293\u5305\u624b\u673a\u7aef\u8bf7\u6c42"},{"location":"%E5%AE%9E%E8%B7%B5/mac%20%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85%E6%8C%87%E5%8D%97/#31-charles","text":"\u68c0\u67e5\u4ee3\u7406\u7aef\u53e3 \u6253\u5f00\u83dc\u5355\u201dProxy\u201c -> \"Proxy Settings\"\uff0c\u5982\u4e0b\u56fe \u8bbe\u7f6e\u4f60\u60f3\u8981\u7684\u4ee3\u7406\u7aef\u53e3\uff0c\u6216\u8005\u7ee7\u7eed\u4f7f\u7528\u9ed8\u8ba4\u7684\u201d8888\u201c\u3002 \u68c0\u67e5PC\u672c\u673aIP \u67e5\u770bPC\u672c\u673aIP\uff0c\u83dc\u5355\"help\" -> \"Local IP Address\" PC\u672c\u673a\u7684IP\u5730\u5740\uff0c\u4e5f\u5373\u662fcharles\u7684\u5730\u5740 \u8fd9\u91cc\u7684192.168.31.250\u5c31\u662f\u6211\u4eec\u624b\u673a\u5373\u5c06\u53ef\u4ee5\u4f7f\u7528\u7684\u4ee3\u7406IP\u3002","title":"3.1 \u8bbe\u7f6e\u6216\u68c0\u67e5charles"},{"location":"%E5%AE%9E%E8%B7%B5/mac%20%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85%E6%8C%87%E5%8D%97/#32","text":"\u5fc5\u987b\u786e\u4fdd\u624b\u673a\u548cPC\u8fde\u63a5\u7684\u662f\u540c\u4e00\u4e2a\u7f51\u7edc\u3002 \u6309\u5982\u4e0b\u8bbe\u7f6e\u624b\u673a\u4ee3\u7406","title":"3.2 \u8bbe\u7f6e\u624b\u673a\u4ee3\u7406"},{"location":"%E5%AE%9E%E8%B7%B5/mac%20%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85%E6%8C%87%E5%8D%97/#33","text":"\u624b\u673a\u4e0a\u6253\u5f00\u4f60\u9700\u8981\u6293\u5305\u7684\u5e94\u7528\uff0c\u53d1\u8d77http request \u7136\u540e\u53bbcharles\u4e0a\u9a8c\u8bc1\u662f\u5426\u5df2\u7ecf\u6293\u5230\u5305\u3002 \u795d\u613f\u4f60\uff0c\u4e00\u5207\u987a\u5229\u3002","title":"3.3 \u6293\u5305\u9a8c\u8bc1"},{"location":"%E5%AE%9E%E8%B7%B5/%E4%B8%80%E6%96%87%E5%BD%BB%E5%BA%95%E6%90%9E%E5%AE%9ASpring%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E6%9C%BA%E5%88%B6/","text":"\u4e00\u6587\u5f7b\u5e95\u641e\u5b9aSpring\u4e8b\u52a1\u4f20\u64ad\u673a\u5236 \u4e00\u3001\u4e8b\u52a1\u4f20\u64ad\u673a\u5236\u4ecb\u7ecd \u6211\u4eec\u5f00\u53d1\u4e2d\u7ecf\u5e38\u9047\u5230\u540c\u65f6\u64cd\u4f5c\u591a\u5f20\u8868\uff0c\u591a\u6b21\u64cd\u4f5c\u6570\u636e\u5e93\uff0c\u90a3\u4e48\u5728\u5f88\u591a\u573a\u666f\u4e0b\uff0c\u5f53\u6211\u4eec\u7684\u4e1a\u52a1\u9700\u8981\u5d4c\u5957\u8c03\u7528\u4e8b\u52a1\u65b9\u6cd5\uff0c\u800c\u5176\u4e2d\u67d0\u4e2a\u65b9\u6cd5\u51fa\u73b0\u5f02\u5e38\u7684\u65f6\u5019\uff0c\u4f1a\u6839\u636e\u5f02\u5e38\u70b9\u51fa\u73b0\u7684\u5730\u65b9\uff0c\u9002\u65f6\u8c03\u6574\u56de\u6eda\u65b9\u6848\u3002\u662f\u5168\u91cf\u56de\u6eda\u8fd8\u662f\u53ea\u56de\u6eda\u67d0\u4e2a\u70b9\uff1f\u6b64\u65f6spring \u4e8b\u52a1\u4f20\u64ad\u5c31\u53ef\u4ee5\u5b8c\u7f8e\u89e3\u51b3\u6b64\u95ee\u9898\u3002 \u4ee5\u4e0b\u662fSpring boot \u4e03\u5927\u4f20\u64ad\u673a\u5236\u4ecb\u7ecd\uff1a \u7c7b\u578b \u8bf4\u660e \u65b9\u6cd5\u6267\u884c\u65f6-\u4e8b\u52a1\u4e2a\u6570 Propagation.REQUIRED required \u8981\u6c42\u6709\u4e8b\u52a1\uff0c\u6709\u4e8b\u52a1\u5219\u52a0\u5165\u5230\u4e8b\u52a1\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u65b0\u5efa\u4e8b\u52a1\u518d\u6267\u884c\u3002\u540c\u65f6\u63d0\u4ea4\u3001\u540c\u65f6\u56de\u6eda\u3002 1\u4e2a\u4e8b\u52a1 Propagation.SUPORTS suports \u652f\u6301\u5728\u4e8b\u52a1\u4e2d\u8fd0\u884c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u4ee5\u975e\u4e8b\u52a1\u6267\u884c\u3002\u6709\u4e8b\u52a1\u5219\u540c\u65f6\u63d0\u4ea4\uff0c\u65e0\u4e8b\u52a1\u4e92\u4e0d\u5f71\u54cd\u3002 0\u62161\u4e2a\u4e8b\u52a1 Propagation.MANDATORY mandatory \u4f7f\u7528\u5f53\u524d\u4e8b\u52a1\uff0c\u5982\u679c\u6ca1\u6709\u4e8b\u52a1\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\u540c\u65f6\u63d0\u4ea4\u3001\u540c\u65f6\u56de\u6eda\u3002 \u590d\u75281\u4e2a\u4e8b\u52a1 Propagation.REQUIRED_NEW required_new \u65e0\u8bba\u6709\u65e0\u4e8b\u52a1\uff0c\u65b0\u5efa\u4e8b\u52a1\u8fdb\u884c\u6267\u884c\u3002\u4e24\u4e2a\u72ec\u7acb\u4e8b\u52a1\u4e92\u4e0d\u5f71\u54cd\u3002 \u65b0\u5efa1\u4e2a\u4e8b\u52a1 Propagation.NOT_SUPPORTED not_supported \u4e0d\u652f\u6301\u5728\u4e8b\u52a1\u4e2d\u6267\u884c\uff0c\u5982\u679c\u5b58\u5728\u4e8b\u52a1\uff0c\u5219\u6302\u8d77\u4e8b\u52a1\u3002\u4e8b\u52a1\u56de\u6eda\u4e0d\u5f71\u54cd\u5b50\u65b9\u6cd5 \u6700\u591a1\u4e2a\u4e8b\u52a1 Propagation.NEVER never \u4e0d\u652f\u6301\u5728\u4e8b\u52a1\u4e2d\u6267\u884c\uff0c\u5982\u679c\u6709\u4e8b\u52a1\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\u4e0d\u9700\u8981\u4e8b\u52a1\uff0c\u4e92\u4e0d\u5f71\u54cd\u3002 \u5fc5\u987b0\u4e2a\u4e8b\u52a1 Propagation.NESTED nested \u5982\u679c\u5f53\u524d\u5b58\u5728\u4e8b\u52a1\uff0c\u5219\u5d4c\u5957\u4e8b\u52a1\u6267\u884c\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5219\u65b0\u5efa\u4e8b\u52a1\u518d\u6267\u884c\u3002 \u4e3b\u65b9\u6cd5savepoint\u4fdd\u5b58\u70b9\u5f02\u5e38\uff0c\u4e0d\u5f71\u54cd\u4e3b\u65b9\u6cd5\u63d0\u4ea4\u4e8b\u52a1\u3002\u4e3b\u65b9\u6cd5\u5f02\u5e38\u5219\u6574\u4f53\u56de\u6eda\u3002 \u5d4c\u5957\u4e8b\u52a1\uff0c1\u4e2a\u4e8b\u52a1 \u4e8c\u3001\u91cd\u70b9\u7406\u89e3 \u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\u4e8b\u52a1\u65b9\u6cd5\u5d4c\u5957\u8c03\u7528\uff0c\u7279\u5199\u4f2a\u7f16\u7801\u5982\u4e0b\uff1a ServiceA{ @Transactional(rollbackFor = Exception.class, propagation= Propagation.REQUIRED) methodA(Parmas ...){ doSomethingA(...); // \u6b64\u5904\u5d4c\u5957\u8c03\u7528\u670d\u52a1B\u7684\u4e8b\u52a1\u65b9\u6cd5 serviceB.methodB(params ...); } } ServiceB{ @Transactional(rollbackFor = Exception.class, propagation= Propagation.NESTED) methodB(Params ...){ doSomethingB(...); } } \u4e24\u4e2a\u4e8b\u52a1\u4e4b\u95f4\uff0c\u6839\u672c\u914d\u7f6e\u7684\u4f20\u64ad\u673a\u5236\u4e0d\u4e00\u6837\uff0c\u800c\u8868\u73b0\u7684\u7ed3\u679c\u4e0d\u4e00\u6837\u3002 \u5176\u4ed6\u7684\u4e8b\u52a1\u4f20\u64ad\u673a\u5236\u6bd4\u5982Required\uff0cNever\u7b49\u90fd\u597d\u7406\u89e3\uff0c\u53c2\u770b\u4e0a\u8868\uff0c\u6ce8\u610f\u7ea2\u8272\u90e8\u5206\u3002\u4e00\u76f4\u4ee5\u6765\uff0c\u6211\u4e2a\u4eba\u53d1\u73b0\u867d\u7136\u5f88\u65e9\u4ee5\u524d\u5c31\u8ba4\u771f\u5b66\u8fc7\uff0c\u4f46\u6bcf\u6b21\u91cd\u65b0\u770b\u8fd9\u5757\u77e5\u8bc6\u70b9\u7684\u65f6\u5019\uff0c\u5c24\u5176\u662f\u5bf9nested\u90fd\u4f1a\u7406\u89e3\u4e0d\u51c6\u3002 \u4e3a\u6b64\uff0c\u67e5\u9605\u4e86\u5f88\u591a\u8d44\u6599\uff0c\u540c\u65f6\uff0c\u4e13\u95e8\u7f16\u7801\u53bb\u9a8c\u8bc1\u8be5nested\u4f20\u64ad\u673a\u5236\u7684\u7279\u522b\u4e4b\u5904\u3002\u603b\u4e4b\uff0c\u4f60\u53ea\u8981\u8bb0\u4f4f\uff1a NESTED\u7684\u56de\u6eda\u7279\u6027 \u4e3b\u4e8b\u52a1\u548c\u5d4c\u5957\u4e8b\u52a1\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4e8b\u52a1 \u5d4c\u5957\u4e8b\u52a1\u51fa\u9519\u56de\u6eda\u4e0d\u4f1a\u5f71\u54cd\u5230\u4e3b\u4e8b\u52a1 \u4e3b\u4e8b\u52a1\u56de\u6eda\u4f1a\u5c06\u5d4c\u5957\u4e8b\u52a1\u4e00\u8d77\u56de\u6eda\u4e86 \u5982\u679c\u4f60\u8fd8\u662f\u4e0d\u80fd\u5f88\u597d\u7406\u89e3\u548c\u638c\u63e1\uff0c\u90a3\u4e48\u82b1\u4e0a\u5341\u5206\u949f\uff0c\u4e0b\u8f7d\u9879\u76ee\uff0c\u81ea\u5df1\u8fd0\u884c\u4e00\u4e0b\u5427\u3002 \u4e09\u3001\u7f16\u7801\u9a8c\u8bc1 github\u5730\u5740\uff1ahttps://github.com/smileMrLee/spring-nested-demo \u4e0a\u9762\u7684demo\u4e2d\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e24\u4e2a\u63a5\u53e3test/required\u3001test/nested \u5206\u522b\u7528\u6765\u6d4b\u8bd5required\u548cnested\u7684\u4f20\u64ad\u673a\u5236\u3002 \u901a\u8fc7\u5165\u53c2\u4e2d\u7684remark\u662f\u5426\u5305\u542b\uff1achildError \u548c mainError \u6587\u672c\u6765\u63a7\u5236\u4e3b\u65b9\u6cd5\u548c\u5b50\u65b9\u6cd5\u662f\u5426\u629b\u51fa\u5f02\u5e38\uff0c\u4ece\u800c\u8fdb\u884c\u56de\u6eda\u3002 required case1 required\u4e3b\u65b9\u6cd5\u548crequired\u5b50\u65b9\u6cd5\u6b63\u5e38\u63d0\u4ea4\uff1ahttp://localhost:8080/test/required?name=changle&remark=required_required required case2 required\u4e3b\u65b9\u6cd5\u56e0required\u5b50\u65b9\u6cd5\u5f02\u5e38\u56de\u6eda\uff1ahttp://localhost:8080/test/required?name=lisi&remark=required_required_childError required Case3 required\u4e3b\u65b9\u6cd5\u5f02\u5e38\u8fde\u5e26required\u5b50\u65b9\u6cd5\u5f02\u5e38\u56de\u6eda\uff1ahttp://localhost:8080/test/required?name=lisi&remark=required_required_childError nested Case1 required\u4e3b\u65b9\u6cd5\u6b63\u5e38\u63d0\u4ea4-nested\u5b50\u65b9\u6cd5\u5f02\u5e38\u56de\u6eda\uff1ahttp://localhost:8080/test/nested?name=lisi&remark=required_required_childError nested Case2 required\u4e3b\u65b9\u6cd5\u5f02\u5e38\u56de\u6eda-\u8fde\u5e26nested\u5b50\u65b9\u6cd5\u56de\u6eda\uff1ahttp://localhost:8080/test/nested?name=lisi&remark=required_required_mainError \u56db\u3001\u6838\u5fc3\u4ee3\u7801 web controller @Slf4j @RestController @RequestMapping(\"/test\") public class CrudTestController { @Resource private UserService userService; @GetMapping(\"/required\") public String required(String name, String remark){ try { boolean result = userService.createUserRequired(name, remark); if (result){ return \"\u6210\u529f\"; }else { return \"\u5931\u8d25\"; } }catch (Exception e){ log.error(\"\u6267\u884crequired\u4e8b\u52a1\u4f8b\u5b50\u5f02\u5e38\", e); return \"\u5f02\u5e38\"; } } @GetMapping(\"/nested\") public String nested(String name, String remark){ try { boolean result = userService.createUserNested(name, remark); if (result){ return \"\u6210\u529f\"; }else { return \"\u5931\u8d25\"; } }catch (Exception e){ log.error(\"\u6267\u884cnested\u4e8b\u52a1\u4f8b\u5b50\u5f02\u5e38\", e); return \"\u5f02\u5e38\"; } } } serviceA main\u4e3b\u65b9\u6cd5\u5d4c\u5957\u8c03\u7528 @Slf4j @Service public class UserService { @Resource private UserMapper userMapper; @Resource private UserMoneyService userMoneyService; @Transactional(rollbackFor = Exception.class, propagation= Propagation.REQUIRED) public Boolean createUserRequired(String userName, String remark){ UserPo userPo = UserPo.builder() .userName(userName) .realName(\"\u771f\u5b9e\u7684\"+userName) .passWord(\"REQUIRED\") .remark(\"REQUIRED:\" + remark).build(); userMapper.insert(userPo); userMoneyService.createUserBalance(userPo.getId(), remark); if (remark.contains(\"mainError\")) { throw new RuntimeException(\"mainMethod \u624b\u52a8\u629b\u9519\"); } return true; } @Transactional(rollbackFor = Exception.class, propagation= Propagation.REQUIRED) public Boolean createUserNested(String userName, String remark){ UserPo userPo = UserPo.builder() .userName(userName) .realName(\"\u771f\u5b9e\u7684\"+userName) .passWord(\"REQUIRED\") .remark(\"REQUIRED:\" + remark).build(); userMapper.insert(userPo); try { userMoneyService.createUserBalanceNested(userPo.getId(), remark); }catch (Exception e){ log.error(\"\u521b\u5efa\u7528\u6237\u4f59\u989d\u65f6\u5f02\u5e38|userName:{},remark:{}\", userName, remark, e); } if (remark.contains(\"mainError\")) { throw new RuntimeException(\"mainMethod \u624b\u52a8\u629b\u9519\"); } return true; } } serviceB child\u5b50\u65b9\u6cd5\u88ab\u5d4c\u5957\u8c03\u7528 @Slf4j @Service public class UserMoneyService { @Resource private UserMoneyMapper userMoneyMapper; @Transactional(rollbackFor = Exception.class, propagation= Propagation.REQUIRED) public boolean createUserBalance(Integer userId, String remark){ userMoneyMapper.insert(UserMoneyPo.builder() .userId(userId) .balance(11) .remark(\"REQUIRED:\"+remark).build()); if (remark.contains(\"childError\")) { throw new RuntimeException(\"childMethod \u624b\u52a8\u629b\u9519\"); } return true; } @Transactional(rollbackFor = Exception.class, propagation= Propagation.NESTED) public boolean createUserBalanceNested(Integer userId, String remark){ userMoneyMapper.insert(UserMoneyPo.builder() .userId(userId) .balance(11) .remark(\"NESTED:\"+remark).build()); log.error(\"\u4f59\u989d\u521b\u5efa\u6210\u529f-------\u624b\u52a8\u56de\u6eda-------\"); if (remark.contains(\"childError\")) { throw new RuntimeException(\"childMethod \u624b\u52a8\u629b\u9519\"); } return true; } } \u672c\u6587\u6e90\u7801\uff1agithub\u5730\u5740\uff1ahttps://github.com/smileMrLee/spring-nested-demo","title":"\u4e00\u6587\u5f7b\u5e95\u641e\u5b9aSpring\u4e8b\u52a1\u4f20\u64ad\u673a\u5236"},{"location":"%E5%AE%9E%E8%B7%B5/%E4%B8%80%E6%96%87%E5%BD%BB%E5%BA%95%E6%90%9E%E5%AE%9ASpring%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E6%9C%BA%E5%88%B6/#spring","text":"","title":"\u4e00\u6587\u5f7b\u5e95\u641e\u5b9aSpring\u4e8b\u52a1\u4f20\u64ad\u673a\u5236"},{"location":"%E5%AE%9E%E8%B7%B5/%E4%B8%80%E6%96%87%E5%BD%BB%E5%BA%95%E6%90%9E%E5%AE%9ASpring%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E6%9C%BA%E5%88%B6/#_1","text":"\u6211\u4eec\u5f00\u53d1\u4e2d\u7ecf\u5e38\u9047\u5230\u540c\u65f6\u64cd\u4f5c\u591a\u5f20\u8868\uff0c\u591a\u6b21\u64cd\u4f5c\u6570\u636e\u5e93\uff0c\u90a3\u4e48\u5728\u5f88\u591a\u573a\u666f\u4e0b\uff0c\u5f53\u6211\u4eec\u7684\u4e1a\u52a1\u9700\u8981\u5d4c\u5957\u8c03\u7528\u4e8b\u52a1\u65b9\u6cd5\uff0c\u800c\u5176\u4e2d\u67d0\u4e2a\u65b9\u6cd5\u51fa\u73b0\u5f02\u5e38\u7684\u65f6\u5019\uff0c\u4f1a\u6839\u636e\u5f02\u5e38\u70b9\u51fa\u73b0\u7684\u5730\u65b9\uff0c\u9002\u65f6\u8c03\u6574\u56de\u6eda\u65b9\u6848\u3002\u662f\u5168\u91cf\u56de\u6eda\u8fd8\u662f\u53ea\u56de\u6eda\u67d0\u4e2a\u70b9\uff1f\u6b64\u65f6spring \u4e8b\u52a1\u4f20\u64ad\u5c31\u53ef\u4ee5\u5b8c\u7f8e\u89e3\u51b3\u6b64\u95ee\u9898\u3002 \u4ee5\u4e0b\u662fSpring boot \u4e03\u5927\u4f20\u64ad\u673a\u5236\u4ecb\u7ecd\uff1a \u7c7b\u578b \u8bf4\u660e \u65b9\u6cd5\u6267\u884c\u65f6-\u4e8b\u52a1\u4e2a\u6570 Propagation.REQUIRED required \u8981\u6c42\u6709\u4e8b\u52a1\uff0c\u6709\u4e8b\u52a1\u5219\u52a0\u5165\u5230\u4e8b\u52a1\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u65b0\u5efa\u4e8b\u52a1\u518d\u6267\u884c\u3002\u540c\u65f6\u63d0\u4ea4\u3001\u540c\u65f6\u56de\u6eda\u3002 1\u4e2a\u4e8b\u52a1 Propagation.SUPORTS suports \u652f\u6301\u5728\u4e8b\u52a1\u4e2d\u8fd0\u884c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u4ee5\u975e\u4e8b\u52a1\u6267\u884c\u3002\u6709\u4e8b\u52a1\u5219\u540c\u65f6\u63d0\u4ea4\uff0c\u65e0\u4e8b\u52a1\u4e92\u4e0d\u5f71\u54cd\u3002 0\u62161\u4e2a\u4e8b\u52a1 Propagation.MANDATORY mandatory \u4f7f\u7528\u5f53\u524d\u4e8b\u52a1\uff0c\u5982\u679c\u6ca1\u6709\u4e8b\u52a1\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\u540c\u65f6\u63d0\u4ea4\u3001\u540c\u65f6\u56de\u6eda\u3002 \u590d\u75281\u4e2a\u4e8b\u52a1 Propagation.REQUIRED_NEW required_new \u65e0\u8bba\u6709\u65e0\u4e8b\u52a1\uff0c\u65b0\u5efa\u4e8b\u52a1\u8fdb\u884c\u6267\u884c\u3002\u4e24\u4e2a\u72ec\u7acb\u4e8b\u52a1\u4e92\u4e0d\u5f71\u54cd\u3002 \u65b0\u5efa1\u4e2a\u4e8b\u52a1 Propagation.NOT_SUPPORTED not_supported \u4e0d\u652f\u6301\u5728\u4e8b\u52a1\u4e2d\u6267\u884c\uff0c\u5982\u679c\u5b58\u5728\u4e8b\u52a1\uff0c\u5219\u6302\u8d77\u4e8b\u52a1\u3002\u4e8b\u52a1\u56de\u6eda\u4e0d\u5f71\u54cd\u5b50\u65b9\u6cd5 \u6700\u591a1\u4e2a\u4e8b\u52a1 Propagation.NEVER never \u4e0d\u652f\u6301\u5728\u4e8b\u52a1\u4e2d\u6267\u884c\uff0c\u5982\u679c\u6709\u4e8b\u52a1\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\u4e0d\u9700\u8981\u4e8b\u52a1\uff0c\u4e92\u4e0d\u5f71\u54cd\u3002 \u5fc5\u987b0\u4e2a\u4e8b\u52a1 Propagation.NESTED nested \u5982\u679c\u5f53\u524d\u5b58\u5728\u4e8b\u52a1\uff0c\u5219\u5d4c\u5957\u4e8b\u52a1\u6267\u884c\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5219\u65b0\u5efa\u4e8b\u52a1\u518d\u6267\u884c\u3002 \u4e3b\u65b9\u6cd5savepoint\u4fdd\u5b58\u70b9\u5f02\u5e38\uff0c\u4e0d\u5f71\u54cd\u4e3b\u65b9\u6cd5\u63d0\u4ea4\u4e8b\u52a1\u3002\u4e3b\u65b9\u6cd5\u5f02\u5e38\u5219\u6574\u4f53\u56de\u6eda\u3002 \u5d4c\u5957\u4e8b\u52a1\uff0c1\u4e2a\u4e8b\u52a1","title":"\u4e00\u3001\u4e8b\u52a1\u4f20\u64ad\u673a\u5236\u4ecb\u7ecd"},{"location":"%E5%AE%9E%E8%B7%B5/%E4%B8%80%E6%96%87%E5%BD%BB%E5%BA%95%E6%90%9E%E5%AE%9ASpring%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E6%9C%BA%E5%88%B6/#_2","text":"\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\u4e8b\u52a1\u65b9\u6cd5\u5d4c\u5957\u8c03\u7528\uff0c\u7279\u5199\u4f2a\u7f16\u7801\u5982\u4e0b\uff1a ServiceA{ @Transactional(rollbackFor = Exception.class, propagation= Propagation.REQUIRED) methodA(Parmas ...){ doSomethingA(...); // \u6b64\u5904\u5d4c\u5957\u8c03\u7528\u670d\u52a1B\u7684\u4e8b\u52a1\u65b9\u6cd5 serviceB.methodB(params ...); } } ServiceB{ @Transactional(rollbackFor = Exception.class, propagation= Propagation.NESTED) methodB(Params ...){ doSomethingB(...); } } \u4e24\u4e2a\u4e8b\u52a1\u4e4b\u95f4\uff0c\u6839\u672c\u914d\u7f6e\u7684\u4f20\u64ad\u673a\u5236\u4e0d\u4e00\u6837\uff0c\u800c\u8868\u73b0\u7684\u7ed3\u679c\u4e0d\u4e00\u6837\u3002 \u5176\u4ed6\u7684\u4e8b\u52a1\u4f20\u64ad\u673a\u5236\u6bd4\u5982Required\uff0cNever\u7b49\u90fd\u597d\u7406\u89e3\uff0c\u53c2\u770b\u4e0a\u8868\uff0c\u6ce8\u610f\u7ea2\u8272\u90e8\u5206\u3002\u4e00\u76f4\u4ee5\u6765\uff0c\u6211\u4e2a\u4eba\u53d1\u73b0\u867d\u7136\u5f88\u65e9\u4ee5\u524d\u5c31\u8ba4\u771f\u5b66\u8fc7\uff0c\u4f46\u6bcf\u6b21\u91cd\u65b0\u770b\u8fd9\u5757\u77e5\u8bc6\u70b9\u7684\u65f6\u5019\uff0c\u5c24\u5176\u662f\u5bf9nested\u90fd\u4f1a\u7406\u89e3\u4e0d\u51c6\u3002 \u4e3a\u6b64\uff0c\u67e5\u9605\u4e86\u5f88\u591a\u8d44\u6599\uff0c\u540c\u65f6\uff0c\u4e13\u95e8\u7f16\u7801\u53bb\u9a8c\u8bc1\u8be5nested\u4f20\u64ad\u673a\u5236\u7684\u7279\u522b\u4e4b\u5904\u3002\u603b\u4e4b\uff0c\u4f60\u53ea\u8981\u8bb0\u4f4f\uff1a NESTED\u7684\u56de\u6eda\u7279\u6027 \u4e3b\u4e8b\u52a1\u548c\u5d4c\u5957\u4e8b\u52a1\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4e8b\u52a1 \u5d4c\u5957\u4e8b\u52a1\u51fa\u9519\u56de\u6eda\u4e0d\u4f1a\u5f71\u54cd\u5230\u4e3b\u4e8b\u52a1 \u4e3b\u4e8b\u52a1\u56de\u6eda\u4f1a\u5c06\u5d4c\u5957\u4e8b\u52a1\u4e00\u8d77\u56de\u6eda\u4e86 \u5982\u679c\u4f60\u8fd8\u662f\u4e0d\u80fd\u5f88\u597d\u7406\u89e3\u548c\u638c\u63e1\uff0c\u90a3\u4e48\u82b1\u4e0a\u5341\u5206\u949f\uff0c\u4e0b\u8f7d\u9879\u76ee\uff0c\u81ea\u5df1\u8fd0\u884c\u4e00\u4e0b\u5427\u3002","title":"\u4e8c\u3001\u91cd\u70b9\u7406\u89e3"},{"location":"%E5%AE%9E%E8%B7%B5/%E4%B8%80%E6%96%87%E5%BD%BB%E5%BA%95%E6%90%9E%E5%AE%9ASpring%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E6%9C%BA%E5%88%B6/#_3","text":"github\u5730\u5740\uff1ahttps://github.com/smileMrLee/spring-nested-demo \u4e0a\u9762\u7684demo\u4e2d\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e24\u4e2a\u63a5\u53e3test/required\u3001test/nested \u5206\u522b\u7528\u6765\u6d4b\u8bd5required\u548cnested\u7684\u4f20\u64ad\u673a\u5236\u3002 \u901a\u8fc7\u5165\u53c2\u4e2d\u7684remark\u662f\u5426\u5305\u542b\uff1achildError \u548c mainError \u6587\u672c\u6765\u63a7\u5236\u4e3b\u65b9\u6cd5\u548c\u5b50\u65b9\u6cd5\u662f\u5426\u629b\u51fa\u5f02\u5e38\uff0c\u4ece\u800c\u8fdb\u884c\u56de\u6eda\u3002 required case1 required\u4e3b\u65b9\u6cd5\u548crequired\u5b50\u65b9\u6cd5\u6b63\u5e38\u63d0\u4ea4\uff1ahttp://localhost:8080/test/required?name=changle&remark=required_required required case2 required\u4e3b\u65b9\u6cd5\u56e0required\u5b50\u65b9\u6cd5\u5f02\u5e38\u56de\u6eda\uff1ahttp://localhost:8080/test/required?name=lisi&remark=required_required_childError required Case3 required\u4e3b\u65b9\u6cd5\u5f02\u5e38\u8fde\u5e26required\u5b50\u65b9\u6cd5\u5f02\u5e38\u56de\u6eda\uff1ahttp://localhost:8080/test/required?name=lisi&remark=required_required_childError nested Case1 required\u4e3b\u65b9\u6cd5\u6b63\u5e38\u63d0\u4ea4-nested\u5b50\u65b9\u6cd5\u5f02\u5e38\u56de\u6eda\uff1ahttp://localhost:8080/test/nested?name=lisi&remark=required_required_childError nested Case2 required\u4e3b\u65b9\u6cd5\u5f02\u5e38\u56de\u6eda-\u8fde\u5e26nested\u5b50\u65b9\u6cd5\u56de\u6eda\uff1ahttp://localhost:8080/test/nested?name=lisi&remark=required_required_mainError","title":"\u4e09\u3001\u7f16\u7801\u9a8c\u8bc1"},{"location":"%E5%AE%9E%E8%B7%B5/%E4%B8%80%E6%96%87%E5%BD%BB%E5%BA%95%E6%90%9E%E5%AE%9ASpring%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E6%9C%BA%E5%88%B6/#_4","text":"web controller @Slf4j @RestController @RequestMapping(\"/test\") public class CrudTestController { @Resource private UserService userService; @GetMapping(\"/required\") public String required(String name, String remark){ try { boolean result = userService.createUserRequired(name, remark); if (result){ return \"\u6210\u529f\"; }else { return \"\u5931\u8d25\"; } }catch (Exception e){ log.error(\"\u6267\u884crequired\u4e8b\u52a1\u4f8b\u5b50\u5f02\u5e38\", e); return \"\u5f02\u5e38\"; } } @GetMapping(\"/nested\") public String nested(String name, String remark){ try { boolean result = userService.createUserNested(name, remark); if (result){ return \"\u6210\u529f\"; }else { return \"\u5931\u8d25\"; } }catch (Exception e){ log.error(\"\u6267\u884cnested\u4e8b\u52a1\u4f8b\u5b50\u5f02\u5e38\", e); return \"\u5f02\u5e38\"; } } } serviceA main\u4e3b\u65b9\u6cd5\u5d4c\u5957\u8c03\u7528 @Slf4j @Service public class UserService { @Resource private UserMapper userMapper; @Resource private UserMoneyService userMoneyService; @Transactional(rollbackFor = Exception.class, propagation= Propagation.REQUIRED) public Boolean createUserRequired(String userName, String remark){ UserPo userPo = UserPo.builder() .userName(userName) .realName(\"\u771f\u5b9e\u7684\"+userName) .passWord(\"REQUIRED\") .remark(\"REQUIRED:\" + remark).build(); userMapper.insert(userPo); userMoneyService.createUserBalance(userPo.getId(), remark); if (remark.contains(\"mainError\")) { throw new RuntimeException(\"mainMethod \u624b\u52a8\u629b\u9519\"); } return true; } @Transactional(rollbackFor = Exception.class, propagation= Propagation.REQUIRED) public Boolean createUserNested(String userName, String remark){ UserPo userPo = UserPo.builder() .userName(userName) .realName(\"\u771f\u5b9e\u7684\"+userName) .passWord(\"REQUIRED\") .remark(\"REQUIRED:\" + remark).build(); userMapper.insert(userPo); try { userMoneyService.createUserBalanceNested(userPo.getId(), remark); }catch (Exception e){ log.error(\"\u521b\u5efa\u7528\u6237\u4f59\u989d\u65f6\u5f02\u5e38|userName:{},remark:{}\", userName, remark, e); } if (remark.contains(\"mainError\")) { throw new RuntimeException(\"mainMethod \u624b\u52a8\u629b\u9519\"); } return true; } } serviceB child\u5b50\u65b9\u6cd5\u88ab\u5d4c\u5957\u8c03\u7528 @Slf4j @Service public class UserMoneyService { @Resource private UserMoneyMapper userMoneyMapper; @Transactional(rollbackFor = Exception.class, propagation= Propagation.REQUIRED) public boolean createUserBalance(Integer userId, String remark){ userMoneyMapper.insert(UserMoneyPo.builder() .userId(userId) .balance(11) .remark(\"REQUIRED:\"+remark).build()); if (remark.contains(\"childError\")) { throw new RuntimeException(\"childMethod \u624b\u52a8\u629b\u9519\"); } return true; } @Transactional(rollbackFor = Exception.class, propagation= Propagation.NESTED) public boolean createUserBalanceNested(Integer userId, String remark){ userMoneyMapper.insert(UserMoneyPo.builder() .userId(userId) .balance(11) .remark(\"NESTED:\"+remark).build()); log.error(\"\u4f59\u989d\u521b\u5efa\u6210\u529f-------\u624b\u52a8\u56de\u6eda-------\"); if (remark.contains(\"childError\")) { throw new RuntimeException(\"childMethod \u624b\u52a8\u629b\u9519\"); } return true; } } \u672c\u6587\u6e90\u7801\uff1agithub\u5730\u5740\uff1ahttps://github.com/smileMrLee/spring-nested-demo","title":"\u56db\u3001\u6838\u5fc3\u4ee3\u7801"},{"location":"%E5%AE%9E%E8%B7%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8sharding-jdbc%E5%AE%9E%E8%B7%B5/","text":"\u6570\u636e\u5e93\u5206\u5e93\u5206\u8868sharding-jdbc\u5b9e\u8df5 \u5f00\u59cb\u524d\u5fc5\u8bfb github\u5f00\u6e90\u5730\u5740 https://github.com/smileMrLee/sharding-jdbc-demo \u672c\u9879\u76ee\u57fa\u4e8e spring boot + sharding-jdbc + mybatis + mysql\u642d\u5efa\uff0c\u7528\u4f5c\u6d4b\u8bd5\u9a8c\u8bc1sharding-jdbc \u5b9e\u73b0\u6570\u636e\u5e93\u5206\u5e93\u5206\u8868\u3002 \u4e0b\u8f7d\u542f\u52a8\u672c\u9879\u76ee\u524d\uff0c\u8bf7\u5148\u6267\u884cDDL.sql \u521d\u59cb\u5316\u6570\u636e\u5e93\u3002 DDL.sql \u6587\u4ef6\u4f4d\u4e8e\u672c\u9879\u76ee\u6839\u8def\u5f84\u4e0b\u3002 \u542f\u52a8\u524d\uff0c\u8bf7\u5148\u4fee\u6539 mysql \u8fde\u63a5\u4fe1\u606f\uff0c\u786e\u4fdd\u8fde\u63a5\u8d26\u53f7\u5bc6\u7801\u65e0\u8bef\u3002 \u5b9e\u6218 \u96c6\u6210sharding-jdbc\u603b\u5171\u9700\u8981\u4ee5\u4e0b\u51e0\u6b65 1. pom\u4f9d\u8d56\u5f15\u5165sharding-jdbc \u53ca mybatis\u7ec4\u4ef6\u5305 <!-- mysql driver --> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <scope>runtime</scope> </dependency> <!-- mybatis --> <dependency> <groupId>com.baomidou</groupId> <artifactId>mybatis-plus-boot-starter</artifactId> <version>3.1.1</version> </dependency> <!-- sharding-jdbc start --> <dependency> <groupId>io.shardingsphere</groupId> <artifactId>sharding-jdbc-spring-boot-starter</artifactId> <version>3.1.0</version> </dependency> <dependency> <groupId>io.shardingsphere</groupId> <artifactId>sharding-jdbc-spring-namespace</artifactId> <version>3.1.0</version> </dependency> <!-- sharding-jdbc end --> 2. \u914d\u7f6e\u6570\u636e\u6e90 # test0\u6570\u636e\u6e90 sharding.jdbc.datasource.test0.type=com.zaxxer.hikari.HikariDataSource sharding.jdbc.datasource.test0.driver-class-name=com.mysql.cj.jdbc.Driver sharding.jdbc.datasource.test0.jdbc-url=jdbc:mysql://127.0.0.1:3306/test0?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC sharding.jdbc.datasource.test0.username=root sharding.jdbc.datasource.test0.password=123456 \u2026\u2026 # testn\u6570\u636e\u6e90 sharding.jdbc.datasource.test${n}.type=com.zaxxer.hikari.HikariDataSource sharding.jdbc.datasource.test${n}.driver-class-name=com.mysql.cj.jdbc.Driver sharding.jdbc.datasource.test${n}.jdbc-url=jdbc:mysql://127.0.0.1:3306/test${n}?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC sharding.jdbc.datasource.test${n}.username=root sharding.jdbc.datasource.test${n}.password=123456 # \u6ce8\u610f\u6b64\u5904\u7684\"test0\" \u5230 \"test${n}\" \u6309\u7167\u5b9e\u9645\u9700\u8981\u914d\u7f6e\u5206\u5e93\u9700\u8981\u7684\u6570\u636e\u6e90\u4e2a\u6570\u3002 ${n} \u6539\u4e3a\u5b9e\u9645\u7684\u5e93\u7f16\u53f7\u3002 # \u867d\u7136\u6b64\u5904\u7684test${n} \u4e2d\u7684n\u4e0d\u662f\u5fc5\u987b\u586b\u5199\u6570\u5b57\uff0c\u4f46\u662f\u4e3a\u4e86\u4fdd\u6301\u597d\u7684\u89c4\u8303\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u6309\u7167\u963f\u62c9\u4f2f\u6570\u5b571~n\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u7f16\u7801\u3002 3. \u914d\u7f6e\u6570\u636e\u5e93database\u5206\u5e93\u7b56\u7565\u3001\u8868table\u5206\u8868\u7b56\u7565 # \u5206\u5e93\u7b56\u7565 # \u6c34\u5e73\u62c6\u5206\u7684\u6570\u636e\u5e93\uff08\u8868\uff09 \u914d\u7f6e\u5206\u5e93\uff0c\u5206\u5e93\u4e3b\u8981\u53d6\u51b3\u4e8eid\u5217 sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=id sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=test$->{id % 3} # \u5206\u8868\u7b56\u7565 # \u5176\u4e2dcar\u4e3a\u903b\u8f91\u8868 \u5206\u8868\u4e3b\u8981\u53d6\u51b3\u4e8ecount\u5217\uff0c\u26a0\ufe0f\u6b64\u5904\u5e94\u8be5\u9009\u62e9\u4e00\u4e2a\u5747\u5300\u5206\u5e03\u7684\u5217\u503c\uff0c\u672c\u9879\u76ee\u4e3a\u4e86\u7b80\u4fbf\u624d\u968f\u673a\u9009\u62e9count\u5217\u3002 sharding.jdbc.config.sharding.tables.t_car.actual-data-nodes=test$->{0..2}.t_car_$->{0..1} sharding.jdbc.config.sharding.tables.t_car.table-strategy.inline.sharding-column=count 4. \u7f16\u7801\u5b9e\u73b0 \u8be6\u7ec6\u53c2\u8003\u6e90\u7801\uff0centity \u4e2d\u8868\u540d\u4f7f\u7528\u903b\u8f91\u8868\u8868\u540d\u3002 @TableName(\"t_car\") \u5728\u542f\u52a8\u7c7b\u6dfb\u52a0\u6ce8\u89e3 @MapperScan(\"com.lee.sharding.jdbc.demo.mapper\") \u7136\u540e\u7f16\u5199service \u548c controller\u8fdb\u884ccrud 5. http\u8c03\u7528\u9a8c\u8bc1 \u4fdd\u5b58\u8f66\u8f86\u4fe1\u606f\uff1ahttp://localhost:8080/car/save \u67e5\u8be2\u8f66\u8f86\u5217\u8868\uff1ahttp://localhost:8080/car/get","title":"\u6570\u636e\u5e93\u5206\u5e93\u5206\u8868sharding-jdbc\u5b9e\u8df5"},{"location":"%E5%AE%9E%E8%B7%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8sharding-jdbc%E5%AE%9E%E8%B7%B5/#sharding-jdbc","text":"","title":"\u6570\u636e\u5e93\u5206\u5e93\u5206\u8868sharding-jdbc\u5b9e\u8df5"},{"location":"%E5%AE%9E%E8%B7%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8sharding-jdbc%E5%AE%9E%E8%B7%B5/#_1","text":"","title":"\u5f00\u59cb\u524d\u5fc5\u8bfb"},{"location":"%E5%AE%9E%E8%B7%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8sharding-jdbc%E5%AE%9E%E8%B7%B5/#github","text":"https://github.com/smileMrLee/sharding-jdbc-demo \u672c\u9879\u76ee\u57fa\u4e8e spring boot + sharding-jdbc + mybatis + mysql\u642d\u5efa\uff0c\u7528\u4f5c\u6d4b\u8bd5\u9a8c\u8bc1sharding-jdbc \u5b9e\u73b0\u6570\u636e\u5e93\u5206\u5e93\u5206\u8868\u3002 \u4e0b\u8f7d\u542f\u52a8\u672c\u9879\u76ee\u524d\uff0c\u8bf7\u5148\u6267\u884cDDL.sql \u521d\u59cb\u5316\u6570\u636e\u5e93\u3002 DDL.sql \u6587\u4ef6\u4f4d\u4e8e\u672c\u9879\u76ee\u6839\u8def\u5f84\u4e0b\u3002 \u542f\u52a8\u524d\uff0c\u8bf7\u5148\u4fee\u6539 mysql \u8fde\u63a5\u4fe1\u606f\uff0c\u786e\u4fdd\u8fde\u63a5\u8d26\u53f7\u5bc6\u7801\u65e0\u8bef\u3002","title":"github\u5f00\u6e90\u5730\u5740"},{"location":"%E5%AE%9E%E8%B7%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8sharding-jdbc%E5%AE%9E%E8%B7%B5/#_2","text":"\u96c6\u6210sharding-jdbc\u603b\u5171\u9700\u8981\u4ee5\u4e0b\u51e0\u6b65","title":"\u5b9e\u6218"},{"location":"%E5%AE%9E%E8%B7%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8sharding-jdbc%E5%AE%9E%E8%B7%B5/#1-pomsharding-jdbc-mybatis","text":"<!-- mysql driver --> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <scope>runtime</scope> </dependency> <!-- mybatis --> <dependency> <groupId>com.baomidou</groupId> <artifactId>mybatis-plus-boot-starter</artifactId> <version>3.1.1</version> </dependency> <!-- sharding-jdbc start --> <dependency> <groupId>io.shardingsphere</groupId> <artifactId>sharding-jdbc-spring-boot-starter</artifactId> <version>3.1.0</version> </dependency> <dependency> <groupId>io.shardingsphere</groupId> <artifactId>sharding-jdbc-spring-namespace</artifactId> <version>3.1.0</version> </dependency> <!-- sharding-jdbc end -->","title":"1. pom\u4f9d\u8d56\u5f15\u5165sharding-jdbc \u53ca mybatis\u7ec4\u4ef6\u5305"},{"location":"%E5%AE%9E%E8%B7%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8sharding-jdbc%E5%AE%9E%E8%B7%B5/#2","text":"# test0\u6570\u636e\u6e90 sharding.jdbc.datasource.test0.type=com.zaxxer.hikari.HikariDataSource sharding.jdbc.datasource.test0.driver-class-name=com.mysql.cj.jdbc.Driver sharding.jdbc.datasource.test0.jdbc-url=jdbc:mysql://127.0.0.1:3306/test0?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC sharding.jdbc.datasource.test0.username=root sharding.jdbc.datasource.test0.password=123456 \u2026\u2026 # testn\u6570\u636e\u6e90 sharding.jdbc.datasource.test${n}.type=com.zaxxer.hikari.HikariDataSource sharding.jdbc.datasource.test${n}.driver-class-name=com.mysql.cj.jdbc.Driver sharding.jdbc.datasource.test${n}.jdbc-url=jdbc:mysql://127.0.0.1:3306/test${n}?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC sharding.jdbc.datasource.test${n}.username=root sharding.jdbc.datasource.test${n}.password=123456 # \u6ce8\u610f\u6b64\u5904\u7684\"test0\" \u5230 \"test${n}\" \u6309\u7167\u5b9e\u9645\u9700\u8981\u914d\u7f6e\u5206\u5e93\u9700\u8981\u7684\u6570\u636e\u6e90\u4e2a\u6570\u3002 ${n} \u6539\u4e3a\u5b9e\u9645\u7684\u5e93\u7f16\u53f7\u3002 # \u867d\u7136\u6b64\u5904\u7684test${n} \u4e2d\u7684n\u4e0d\u662f\u5fc5\u987b\u586b\u5199\u6570\u5b57\uff0c\u4f46\u662f\u4e3a\u4e86\u4fdd\u6301\u597d\u7684\u89c4\u8303\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u6309\u7167\u963f\u62c9\u4f2f\u6570\u5b571~n\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u7f16\u7801\u3002","title":"2. \u914d\u7f6e\u6570\u636e\u6e90"},{"location":"%E5%AE%9E%E8%B7%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8sharding-jdbc%E5%AE%9E%E8%B7%B5/#3-databasetable","text":"# \u5206\u5e93\u7b56\u7565 # \u6c34\u5e73\u62c6\u5206\u7684\u6570\u636e\u5e93\uff08\u8868\uff09 \u914d\u7f6e\u5206\u5e93\uff0c\u5206\u5e93\u4e3b\u8981\u53d6\u51b3\u4e8eid\u5217 sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=id sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=test$->{id % 3} # \u5206\u8868\u7b56\u7565 # \u5176\u4e2dcar\u4e3a\u903b\u8f91\u8868 \u5206\u8868\u4e3b\u8981\u53d6\u51b3\u4e8ecount\u5217\uff0c\u26a0\ufe0f\u6b64\u5904\u5e94\u8be5\u9009\u62e9\u4e00\u4e2a\u5747\u5300\u5206\u5e03\u7684\u5217\u503c\uff0c\u672c\u9879\u76ee\u4e3a\u4e86\u7b80\u4fbf\u624d\u968f\u673a\u9009\u62e9count\u5217\u3002 sharding.jdbc.config.sharding.tables.t_car.actual-data-nodes=test$->{0..2}.t_car_$->{0..1} sharding.jdbc.config.sharding.tables.t_car.table-strategy.inline.sharding-column=count","title":"3. \u914d\u7f6e\u6570\u636e\u5e93database\u5206\u5e93\u7b56\u7565\u3001\u8868table\u5206\u8868\u7b56\u7565"},{"location":"%E5%AE%9E%E8%B7%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8sharding-jdbc%E5%AE%9E%E8%B7%B5/#4","text":"\u8be6\u7ec6\u53c2\u8003\u6e90\u7801\uff0centity \u4e2d\u8868\u540d\u4f7f\u7528\u903b\u8f91\u8868\u8868\u540d\u3002 @TableName(\"t_car\") \u5728\u542f\u52a8\u7c7b\u6dfb\u52a0\u6ce8\u89e3 @MapperScan(\"com.lee.sharding.jdbc.demo.mapper\") \u7136\u540e\u7f16\u5199service \u548c controller\u8fdb\u884ccrud","title":"4. \u7f16\u7801\u5b9e\u73b0"},{"location":"%E5%AE%9E%E8%B7%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8sharding-jdbc%E5%AE%9E%E8%B7%B5/#5-http","text":"\u4fdd\u5b58\u8f66\u8f86\u4fe1\u606f\uff1ahttp://localhost:8080/car/save \u67e5\u8be2\u8f66\u8f86\u5217\u8868\uff1ahttp://localhost:8080/car/get","title":"5. http\u8c03\u7528\u9a8c\u8bc1"},{"location":"%E6%80%BB%E7%BB%93/dubbo%20%E6%9C%8D%E5%8A%A1%E6%AD%A3%E5%B8%B8%E6%B3%A8%E5%86%8C%E5%92%8C%E6%B6%88%E8%B4%B9%EF%BC%8C%E4%BD%86%E8%B0%83%E7%94%A8%E6%8A%A5%E9%94%99No%20provider/","text":"dubbo \u670d\u52a1\u6b63\u5e38\u6ce8\u518c\u548c\u6d88\u8d39\uff0c\u4f46\u8c03\u7528\u62a5\u9519No provider \u95ee\u9898\u73b0\u8c61 dubbo \u670d\u52a1\u63d0\u4f9b\u8005\u6b63\u5e38\u6ce8\u518c\uff0c\u6d88\u8d39\u8005\u4e5f\u6b63\u5e38\u6d88\u8d39\uff0c\u5728dubbo-admin\u4e0a\u89c2\u5bdf\u6ca1\u95ee\u9898\u3002\u672c\u5730\u670d\u52a1proxy\u4e5f\u6b63\u5e38\u751f\u6210\uff0c\u4f46\u65e0\u6cd5\u8c03\u7528\u6210\u529f\u3002\u6bcf\u6b21\u8c03\u7528\u90fd\u662f\u4e0b\u9762\u7684\u9519\u8bef\u4fe1\u606f\uff1a Failed to invoke the method getAllowUrls in the service com.xxx.bss.api.AcxxxQueryApi. No provider available for the service com.xxx.bss.api.AcxxxQueryApi:dev from registry 10.0.10.21:15311 on the consumer 10.200.190.182 using the dubbo version 2.6.4. Please check if the providers have been started and registered. \u8fd9\u4e2a\u95ee\u9898\u9690\u853d\u5f88\uff0c\u5e94\u7528\u542f\u52a8\u6ca1\u95ee\u9898\uff0c\u4e5f\u65e0\u542f\u52a8\u62a5\u9519\u4fe1\u606f\uff0c\u751a\u81f3warn\u90fd\u6ca1\u6709\u3002 \u6392\u67e5\u5206\u6790 \u9879\u76ee\u5728\u6dfb\u52a0\u65b0\u7684\u4e8c\u65b9\u5305\u4e4b\u540e\uff0c\u539f\u6765\u597d\u597d\u7684dubbo\u5ffd\u7136\u5c31\u8c03\u4e0d\u901a\u4e86\u3002\u4e00\u5f00\u59cb\u4ee5\u4e3a\u53ea\u662f\u4e2a\u522b\u670d\u52a1\uff0c\u5c1d\u8bd5\u4e86\u6240\u6709dubbo\u670d\u52a1\u4e4b\u540e\uff0c\u90fd\u4e0d\u6210\u529f\u3002\u62a5\u9519\u90fd\u662f\u4e00\u6837\u3002\u68c0\u67e5\u4e86dubbo admin\uff0c\u53d1\u73b0\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u90fd\u6b63\u5e38\u3002 \u4e8e\u662f\u671d\u7740\u5305\u51b2\u7a81\u65b9\u5411\u53bb\u6392\u67e5\uff0c\u628a\u4ee3\u7801\u56de\u9000\u5230\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528dubbo\u670d\u52a1\u7684\u7248\u672c\uff0c\u4e5f\u5c31\u662f\u672a\u6dfb\u52a0\u65b0\u4e8c\u65b9\u5305\u7684\u7248\u672c\u3002 \u4e8e\u662f\u5206\u6790\u53ef\u4ee5\u8c03\u7528\u7684\u7248\u672c\u548c\u8c03\u7528\u5931\u8d25\u7684\u7248\u672c\u7684\u5305\u4f9d\u8d56\u3002 \u6700\u540e\u53d1\u73b0\uff0c\u4e0d\u80fd\u6b63\u5e38\u8c03\u7528\u7684\u4ee3\u7801\u7248\u672c\u4e2d\uff0c\u6ca1\u6709\u4f9d\u8d56netty-3.2.5.Final.jar \u8fd9\u4e2a\u5305\uff0c\u4e8e\u662f\u5c06\u8be5\u5305\u624b\u52a8\u5f3a\u5236\u4f9d\u8d56\u5230\u9879\u76ee\u4e2d\u3002\u5c31\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528\u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cdubbo \u5305\u90fd\u4f1a\u4f20\u9012\u4f9d\u8d56netty\u5305\u8fdb\u6765\u7684\uff0c\u4e3a\u4ec0\u4e48netty\u5305\u4f1a\u88ab\u5e72\u6389\u5462\u3002\u4ed4\u7ec6\u6392\u67e5\u4ee3\u7801\u4e2d\u4e5f\u6ca1\u6709\u4efb\u4f55\u5730\u65b9\u8fdb\u884cexclusion.\u4e8e\u662f\u6000\u7591\u662fmaven \u4ef2\u88c1\u7684\u65f6\u5019\uff0c\u9009\u7528\u4e86\u4e8c\u65b9\u5305\u4f9d\u8d56\u8fdb\u6765\u7684\u5305\u4e2d\u67d0\u4e2a\u5305\u6070\u5de7\u628anetty\u5305\u7ed9\u5e72\u6389\u4e86\u3002\u5bfc\u81f4jar \u5305\u4f9d\u8d56\u77ed\u8def\uff0c\u77ed\u8def\u7684\u5305\u628a\u4f9d\u8d56\u4e22\u5f03\u4e86\u3002\u4ece\u800c\u5c11\u4e86netty\u5305\u3002 \u6700\u540e\u6392\u67e5\u7ed3\u679c\u786e\u5b9e\u5982\u6b64\uff0c\u662f\u56e0\u4e3a\u6211\u65b0\u5f15\u8fdb\u6765\u7684\u4e8c\u65b9\u5305\uff0c\u5c06dubbo \u5305\u7684\u4f9d\u8d56\u5168\u90e8\u8fdb\u884cexclusion\u4e86\u3002 \u5982\u4e0b\u56fe\u662f\u5305\u7f3a\u5931\u7684\u8bc1\u636e\uff1a netty \u5305\u88ab\u4e8c\u65b9\u5305\u6392\u9664\u4f9d\u8d56\u7684\u8bc1\u636e\uff1a \u89e3\u51b3\u65b9\u6cd5 <dependency> <groupId>org.jboss.netty</groupId> <artifactId>netty</artifactId> <version>${netty_version}</version> </dependency> <netty_version>3.2.5.Final</netty_version> \u5373\u53ef\u89e3\u51b3\u3002\u4e0d\u540c\u7684dubbo \u7248\u672c\u6362\u6210\u5bf9\u5e94\u7684netty\u7248\u672c\u5373\u53ef\u3002 \u603b\u7ed3 \u867d\u7136\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u4f46\u662f\u6709\u5fc5\u8981\u8bf4\u4e24\u53e5\u3002 1.\u4e8c\u65b9\u5305\u60f3\u8981\u51cf\u5c11\u8fdb\u5165\u4e1a\u52a1\u65b9\u4ee3\u7801\uff0cexclusion\u662f\u597d\u7684\u60f3\u6cd5\uff0c\u4f46exclusion\u4e0d\u591f\u5f7b\u5e95\u3002\u5982\u679c\u76f4\u63a5exclusion\u6389dubbo\uff0c\u5c31\u4e0d\u4f1a\u9020\u6210maven\u4ef2\u88c1\u9009\u7528\u7f3a\u5931\u4f9d\u8d56\u7684dubbo\u3002 2.dubbo \u62a5\u9519\u4e5f\u4e0d\u591f\u53cb\u597d\uff0c\u5f88\u660e\u663e\u8fd9\u79cd\u5f02\u5e38\u5e76\u4e0d\u662f\u56e0\u4e3a\u6ca1\u6709provider\u9020\u6210\u7684\uff0c\u800c\u662f\u5e95\u5c42\u7f51\u7edc\u6846\u67b6\u5305\u4e22\u5931\u4e86\u3002\u5f02\u5e38\u5e94\u8be5\u66f4\u52a0\u7ec6\u5316\u548c\u8be6\u5c3d\u3002","title":"dubbo \u670d\u52a1\u6b63\u5e38\u6ce8\u518c\u548c\u6d88\u8d39\uff0c\u4f46\u8c03\u7528\u62a5\u9519No provider"},{"location":"%E6%80%BB%E7%BB%93/dubbo%20%E6%9C%8D%E5%8A%A1%E6%AD%A3%E5%B8%B8%E6%B3%A8%E5%86%8C%E5%92%8C%E6%B6%88%E8%B4%B9%EF%BC%8C%E4%BD%86%E8%B0%83%E7%94%A8%E6%8A%A5%E9%94%99No%20provider/#_1","text":"dubbo \u670d\u52a1\u63d0\u4f9b\u8005\u6b63\u5e38\u6ce8\u518c\uff0c\u6d88\u8d39\u8005\u4e5f\u6b63\u5e38\u6d88\u8d39\uff0c\u5728dubbo-admin\u4e0a\u89c2\u5bdf\u6ca1\u95ee\u9898\u3002\u672c\u5730\u670d\u52a1proxy\u4e5f\u6b63\u5e38\u751f\u6210\uff0c\u4f46\u65e0\u6cd5\u8c03\u7528\u6210\u529f\u3002\u6bcf\u6b21\u8c03\u7528\u90fd\u662f\u4e0b\u9762\u7684\u9519\u8bef\u4fe1\u606f\uff1a Failed to invoke the method getAllowUrls in the service com.xxx.bss.api.AcxxxQueryApi. No provider available for the service com.xxx.bss.api.AcxxxQueryApi:dev from registry 10.0.10.21:15311 on the consumer 10.200.190.182 using the dubbo version 2.6.4. Please check if the providers have been started and registered. \u8fd9\u4e2a\u95ee\u9898\u9690\u853d\u5f88\uff0c\u5e94\u7528\u542f\u52a8\u6ca1\u95ee\u9898\uff0c\u4e5f\u65e0\u542f\u52a8\u62a5\u9519\u4fe1\u606f\uff0c\u751a\u81f3warn\u90fd\u6ca1\u6709\u3002","title":"\u95ee\u9898\u73b0\u8c61"},{"location":"%E6%80%BB%E7%BB%93/dubbo%20%E6%9C%8D%E5%8A%A1%E6%AD%A3%E5%B8%B8%E6%B3%A8%E5%86%8C%E5%92%8C%E6%B6%88%E8%B4%B9%EF%BC%8C%E4%BD%86%E8%B0%83%E7%94%A8%E6%8A%A5%E9%94%99No%20provider/#_2","text":"\u9879\u76ee\u5728\u6dfb\u52a0\u65b0\u7684\u4e8c\u65b9\u5305\u4e4b\u540e\uff0c\u539f\u6765\u597d\u597d\u7684dubbo\u5ffd\u7136\u5c31\u8c03\u4e0d\u901a\u4e86\u3002\u4e00\u5f00\u59cb\u4ee5\u4e3a\u53ea\u662f\u4e2a\u522b\u670d\u52a1\uff0c\u5c1d\u8bd5\u4e86\u6240\u6709dubbo\u670d\u52a1\u4e4b\u540e\uff0c\u90fd\u4e0d\u6210\u529f\u3002\u62a5\u9519\u90fd\u662f\u4e00\u6837\u3002\u68c0\u67e5\u4e86dubbo admin\uff0c\u53d1\u73b0\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u90fd\u6b63\u5e38\u3002 \u4e8e\u662f\u671d\u7740\u5305\u51b2\u7a81\u65b9\u5411\u53bb\u6392\u67e5\uff0c\u628a\u4ee3\u7801\u56de\u9000\u5230\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528dubbo\u670d\u52a1\u7684\u7248\u672c\uff0c\u4e5f\u5c31\u662f\u672a\u6dfb\u52a0\u65b0\u4e8c\u65b9\u5305\u7684\u7248\u672c\u3002 \u4e8e\u662f\u5206\u6790\u53ef\u4ee5\u8c03\u7528\u7684\u7248\u672c\u548c\u8c03\u7528\u5931\u8d25\u7684\u7248\u672c\u7684\u5305\u4f9d\u8d56\u3002 \u6700\u540e\u53d1\u73b0\uff0c\u4e0d\u80fd\u6b63\u5e38\u8c03\u7528\u7684\u4ee3\u7801\u7248\u672c\u4e2d\uff0c\u6ca1\u6709\u4f9d\u8d56netty-3.2.5.Final.jar \u8fd9\u4e2a\u5305\uff0c\u4e8e\u662f\u5c06\u8be5\u5305\u624b\u52a8\u5f3a\u5236\u4f9d\u8d56\u5230\u9879\u76ee\u4e2d\u3002\u5c31\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528\u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cdubbo \u5305\u90fd\u4f1a\u4f20\u9012\u4f9d\u8d56netty\u5305\u8fdb\u6765\u7684\uff0c\u4e3a\u4ec0\u4e48netty\u5305\u4f1a\u88ab\u5e72\u6389\u5462\u3002\u4ed4\u7ec6\u6392\u67e5\u4ee3\u7801\u4e2d\u4e5f\u6ca1\u6709\u4efb\u4f55\u5730\u65b9\u8fdb\u884cexclusion.\u4e8e\u662f\u6000\u7591\u662fmaven \u4ef2\u88c1\u7684\u65f6\u5019\uff0c\u9009\u7528\u4e86\u4e8c\u65b9\u5305\u4f9d\u8d56\u8fdb\u6765\u7684\u5305\u4e2d\u67d0\u4e2a\u5305\u6070\u5de7\u628anetty\u5305\u7ed9\u5e72\u6389\u4e86\u3002\u5bfc\u81f4jar \u5305\u4f9d\u8d56\u77ed\u8def\uff0c\u77ed\u8def\u7684\u5305\u628a\u4f9d\u8d56\u4e22\u5f03\u4e86\u3002\u4ece\u800c\u5c11\u4e86netty\u5305\u3002 \u6700\u540e\u6392\u67e5\u7ed3\u679c\u786e\u5b9e\u5982\u6b64\uff0c\u662f\u56e0\u4e3a\u6211\u65b0\u5f15\u8fdb\u6765\u7684\u4e8c\u65b9\u5305\uff0c\u5c06dubbo \u5305\u7684\u4f9d\u8d56\u5168\u90e8\u8fdb\u884cexclusion\u4e86\u3002 \u5982\u4e0b\u56fe\u662f\u5305\u7f3a\u5931\u7684\u8bc1\u636e\uff1a netty \u5305\u88ab\u4e8c\u65b9\u5305\u6392\u9664\u4f9d\u8d56\u7684\u8bc1\u636e\uff1a","title":"\u6392\u67e5\u5206\u6790"},{"location":"%E6%80%BB%E7%BB%93/dubbo%20%E6%9C%8D%E5%8A%A1%E6%AD%A3%E5%B8%B8%E6%B3%A8%E5%86%8C%E5%92%8C%E6%B6%88%E8%B4%B9%EF%BC%8C%E4%BD%86%E8%B0%83%E7%94%A8%E6%8A%A5%E9%94%99No%20provider/#_3","text":"<dependency> <groupId>org.jboss.netty</groupId> <artifactId>netty</artifactId> <version>${netty_version}</version> </dependency> <netty_version>3.2.5.Final</netty_version> \u5373\u53ef\u89e3\u51b3\u3002\u4e0d\u540c\u7684dubbo \u7248\u672c\u6362\u6210\u5bf9\u5e94\u7684netty\u7248\u672c\u5373\u53ef\u3002","title":"\u89e3\u51b3\u65b9\u6cd5"},{"location":"%E6%80%BB%E7%BB%93/dubbo%20%E6%9C%8D%E5%8A%A1%E6%AD%A3%E5%B8%B8%E6%B3%A8%E5%86%8C%E5%92%8C%E6%B6%88%E8%B4%B9%EF%BC%8C%E4%BD%86%E8%B0%83%E7%94%A8%E6%8A%A5%E9%94%99No%20provider/#_4","text":"\u867d\u7136\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u4f46\u662f\u6709\u5fc5\u8981\u8bf4\u4e24\u53e5\u3002 1.\u4e8c\u65b9\u5305\u60f3\u8981\u51cf\u5c11\u8fdb\u5165\u4e1a\u52a1\u65b9\u4ee3\u7801\uff0cexclusion\u662f\u597d\u7684\u60f3\u6cd5\uff0c\u4f46exclusion\u4e0d\u591f\u5f7b\u5e95\u3002\u5982\u679c\u76f4\u63a5exclusion\u6389dubbo\uff0c\u5c31\u4e0d\u4f1a\u9020\u6210maven\u4ef2\u88c1\u9009\u7528\u7f3a\u5931\u4f9d\u8d56\u7684dubbo\u3002 2.dubbo \u62a5\u9519\u4e5f\u4e0d\u591f\u53cb\u597d\uff0c\u5f88\u660e\u663e\u8fd9\u79cd\u5f02\u5e38\u5e76\u4e0d\u662f\u56e0\u4e3a\u6ca1\u6709provider\u9020\u6210\u7684\uff0c\u800c\u662f\u5e95\u5c42\u7f51\u7edc\u6846\u67b6\u5305\u4e22\u5931\u4e86\u3002\u5f02\u5e38\u5e94\u8be5\u66f4\u52a0\u7ec6\u5316\u548c\u8be6\u5c3d\u3002","title":"\u603b\u7ed3"},{"location":"%E6%80%BB%E7%BB%93/spring%20boot%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%EF%BC%8C%E4%B9%9F%E6%B2%A1%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/","text":"spring boot\u5e94\u7528\u65e0\u6cd5\u542f\u52a8\uff0c\u4e5f\u6ca1\u62a5\u9519\u4fe1\u606f \u95ee\u9898\u63cf\u8ff0 springboot\u5e94\u7528\u6628\u5929\u8fd8\u80fd\u6b63\u5e38\u597d\u597d\u542f\u52a8\uff0c\u5ffd\u7136\u4e4b\u95f4\u5c31\u542f\u52a8\u4e0d\u4e86\u4e86\uff0c\u4e5f\u4e0d\u62a5\u4efb\u4f55\u9519\u8bef\uff0c\u53ea\u89c1\u5230\u63a7\u5236\u53f0\u8f93\u51fa\"Stopping service\".\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u8fde\u7eed\u51fa\u73b0\u8fc73\u6b21\u4e86\uff0c\u8fd9\u6b21\u72e0\u4e0b\u51b3\u5fc3\u8981\u627e\u51fa\u4e2a\u6240\u4ee5\u7136\u3002 \u5728\u6b64\uff0c\u5148\u8bf4\u4e0b\u4e2a\u4eba\u7ecf\u5386\u7684\u524d\u9762\u4e09\u6b21\u65e0\u6cd5\u542f\u52a8\u6ca1\u6709\u62a5\u9519\u3002 \u4e3e\u4f8b\u8bf4\u660e \u7b2c\u4e00\u6b21\uff1a\u548c\u73af\u5883\u6709\u5173 \u5f53\u67d0\u4e2a\u4e2d\u95f4\u4ef6\u65e0\u6cd5\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7684\u540c\u4e8b\u5728try catch\u4e2d\u9519\u8bef\u7684\u4f7f\u7528\u4e86System.exit()\u5bfc\u81f4\u5f02\u5e38; java try{ \u2026\u2026 }catch(Exception e){ System.exit(); log.error(e) } \u7b2c\u4e8c\u6b21\uff1a\u548cjar\u5305\u51b2\u7a81\u6709\u5173 \u5f53\u65f6\u9879\u76ee\u4e2d\u7528\u5230\u4e86hbase\uff0c\u9700\u8981\u96c6\u6210hbase\uff0c\u6240\u4ee5\u5f15\u5165\u4e86hbase-client 2.1.0 \u7248\u672c\uff0c\u4f46\u662f\u8be5\u5305\u5bf9curator\u5305\u7248\u672c\u6709\u8981\u6c42\uff0c\u5bfc\u81f4\u548c\u5176\u4ed6\u7ec4\u4ef6\u7684curator\u7248\u672c\u51b2\u7a81\uff0c\u6700\u7ec8\u7a0b\u5e8f\u8f93\u51fa\u7684\u4fe1\u606f\u4e2d\uff0c\u53ea\u6709\u51e0\u884cINFO\u65e5\u5fd7\u3002 2019-09-12 10:39:30.350 INFO 37343 --- [5311@0x040943a6] org.apache.zookeeper.ZooKeeper : Session: 0x16b72a291d73e73 closed 2019-09-12 10:39:30.351 INFO 37343 --- [3a6-EventThread] org.apache.zookeeper.ClientCnxn : EventThread shut down for session: 0x16b72a291d73e73 2019-09-12 10:39:30.566 INFO 37343 --- [tor-Framework-0] o.a.c.f.imps.CuratorFrameworkImpl : backgroundOperationsLoop exiting \u6700\u7ec8\u901a\u8fc7jar\u5305\u51b2\u7a81\uff0c\u4e0d\u65ad\u8bd5\u9519\uff0c\u4e0d\u65ad\u5bf9\u6bd4\u548c\u5176\u4ed6\u80fd\u6b63\u5e38\u542f\u52a8\u5e94\u7528\u7684\u4f9d\u8d56\uff0c\u624d\u89e3\u51b3\u51b2\u7a81\u3002 \u7b2c\u4e09\u6b21\uff1a\u548c\u4ee3\u7801\u7f16\u5199\u6709\u5173 \u4e5f\u5c31\u662f\u521a\u521a\u53d1\u751f\u7684\uff0c\u8ba9\u7b14\u8005\u51b3\u5b9a\u72e0\u4e0b\u5fc3\u6316\u6398\"\u65e0\u62a5\u9519\u4fe1\u606f\"\u7684\u7f6a\u9b41\u7978\u9996\u3002\u4e00\u5b9a\u662f\u6709\u5f02\u5e38\u7684\uff0c\u53ea\u662f\u4e0d\u77e5\u9053\u5728\u54ea\u4e2a\u73af\u8282\u4e22\u5931\u4e86\u3002 \u5148\u8bf4\u7ed3\u8bba\uff1a\u672c\u6b21\"\u65e0\u7f18\u65e0\u6545\"\u65e0\u6cd5\u542f\u52a8\u7684\u539f\u56e0\uff0c\u5176\u5b9e\u662f\u6628\u5929\u7b14\u8005\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u4ee3\u7801\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2adubbo\u670d\u52a1\u4f9d\u8d56\uff0c\u4f46\u662f\u6ca1\u6709\u5728dubbo xml\u6587\u4ef6\u4e2d\u6ce8\u518creference\uff0c\u6240\u4ee5\u5bfc\u81f4\u4f9d\u8d56\u7f3a\u5931\uff0c\u6700\u7ec8\u5e94\u7528\u8d77\u4e0d\u6765\u3002 \u5f53\u7136\uff0c\u548c\u524d\u9762\u51e0\u6b21\u4e00\u6837\uff0c\u63a7\u5236\u53f0\uff0c\u65e5\u5fd7\u6587\u4ef6\uff0c\u6ca1\u6709\u4efb\u4f55\u5730\u65b9\u6709\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u3002 \u6392\u67e5\u5206\u6790 \u6839\u636e\u4e0b\u9762\u8fd9\u7bc7\u6587\u7ae0\uff0c\u7ed9\u51fa\u4e86\u63d0\u793a\u3002 \u5f15\u7528\uff1aSpringBoot\u542f\u52a8\u9879\u76ee\u540e\u81ea\u52a8\u5173\u95ed: https://blog.csdn.net/laoxilaoxi_/article/details/83654186 \u5148\u8bf4\u7ed3\u8bba\uff1a\u4e0d\u662f\u6ca1\u6709\u8f93\u51fa\u5f02\u5e38\uff0c\u662f\u65b0\u7248\u672c\u7684Spring boot \u5728\u51fa\u9519\u540e\uff0c\u4e0d\u518d\u8f93\u51fa\u9519\u8bef\u5230\u63a7\u5236\u53f0\u4e86\uff0c\u800c\u662f\u5c06\u5f02\u5e38\u5728Application main\u65b9\u6cd5\u4e2d\u629b\u51fa\u3002 \u5212\u91cd\u70b9\uff1a\u65b0\u7248\u672cSpring boot 2.x \u4e0d\u518d\u8f93\u51fa\u9519\u8bef\u5230\u65e5\u5fd7\u4e2d\uff0c\u5c06\u5f02\u5e38\u5728Application main\u65b9\u6cd5\u4e2d\u629b\u51fa\u3002 \u800c\u4f4e\u7248\u672cSpring boot 1.3.x\uff0c1.4.x\u7248\u672c\uff0c\u662f\u4f1a\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u9519\u8bef\u7684\u3002 \u89e3\u51b3\u65b9\u6cd5 \u89e3\u51b3\uff1a \u6709\u4e86\u4e0a\u9762\u7684\u7075\u611f\uff0c\u90a3\u597d\u529e\u6211\u5728main \u542f\u52a8\u65b9\u6cd5\u4e2d\u6355\u6349\uff0c\u81ea\u5df1\u6253\u5370\uff0c\u4e0d\u5c31\u80fd\u770b\u51fa\u6765\u9519\u8bef\u539f\u56e0\u4e86\u5417\uff1f \u4e8b\u5b9e\u4e0a\uff0c\u786e\u5b9e\u5e94\u8be5\u5982\u6b64\u3002 \u6700\u540e\uff0c\u7b14\u8005\u5728main\u65b9\u6cd5\u542f\u52a8spring boot \u65f6\uff0c\u8fdb\u884c\u4e00\u573a\u6355\u6349\u5e76\u8f93\u51fa\u65e5\u5fd7\u3002\u7136\u540e\u9519\u8bef\u5c31\u4e00\u76ee\u4e86\u7136\u4e86\u3002 @Slf4j @ImportResource(\"classpath*:spring-*.xml\") @SpringBootApplication public class SupportApplication { public static void main(String[] args) { try { SpringApplication.run(SupportApplication.class, args); System.out.println(\"Server startup done.\"); }catch (Exception e){ log.error(\"\u670d\u52a1xxx-support\u542f\u52a8\u62a5\u9519\", e); } } } \u6700\u7ec8\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u4e45\u8fdd\u7684\u5f02\u5e38\u4fe1\u606f\uff1a 2019-09-12 11:18:18.799 ERROR 38420 --- [ main] c.c.xxx.support.xxxSupportApplication : \u670d\u52a1xxx-support\u542f\u52a8\u62a5\u9519 org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'xxxController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'xxxCoreService': Unsatisfied dependency expressed through field 'xxxSpotService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.test.xxx.api.service.XxxSpotService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)} at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:321) ~[spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.0.10.RELEASE.jar:5.0.10 \u6269\u5c55\u9a8c\u8bc1 \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u9a8c\u8bc1\u4e0b\u4f4e\u7248\u672cSpring boot 1.3.x\uff0c1.4.x\u7248\u672c\uff0c\u662f\u5426\u4f1a\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u9519\u8bef\u3002 \u4e0b\u9762\u7684\u5b9e\u9a8c\u662f\u57fa\u4e8espring boot 1.4.7\u7248\u672c\u8fdb\u884c\u7684\uff0c\u4f4e\u7248\u672c\u7684spring boot \u90fd\u4f1a\u5728\u63a7\u5236\u53f0\u6216\u65e5\u5fd7\u6587\u4ef6\u4e2d\u5148\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u518d\u9000\u51fa\u542f\u52a8main\u65b9\u6cd5\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4ece\u4f4e\u7248\u672c\u5347\u5230\u9ad8\u7248\u672c\u7684\uff0c\u8bf7\u5728main\u542f\u52a8\u65f6\uff0c\u81ea\u884c\u6355\u6349\u5f02\u5e38\u3002 @Controller @RequestMapping(\"/test\") public class TestErrorController { /** * 1.\u5236\u9020\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684Spring bean\uff1b * 2.\u5e76\u5bf9\u5176\u8fdb\u884c\u4f9d\u8d56\uff1b * 3.\u542f\u52a8\u5e94\u7528XxxApplication\uff1b * 4.\u63a7\u5236\u53f0\u6709\u660e\u663e\u62a5\u9519\u4fe1\u606f\u8f93\u51fa\uff1b * 2019-09-12 10:44:38.014 INFO 37477 --- [ main] o.apache.catalina.core.StandardService : Stopping service [Tomcat] * 2019-09-12 10:44:38.026 INFO 37477 --- [ main] utoConfigurationReportLoggingInitializer : * * <p>Error starting ApplicationContext. To display the auto-configuration report re-run your * application with 'debug' enabled. 2019-09-12 10:44:38.155 ERROR 37477 --- [ main] o.s.b.d.LoggingFailureAnalysisReporter : * <p>*************************** APPLICATION FAILED TO START *************************** * <p>Description: * <p>A component required a bean of type * 'cn.test.lee.service.TestErrorService' that could not be found. * <p>Action: * <p>Consider defining a bean of type 'cn.test.service.TestErrorService' * in your configuration. * <p>Disconnected from the target VM, address: '127.0.0.1:57403', transport: 'socket' * <p>Process finished with exit code 1 */ @Resource private TestErrorService testErrorService; public String testError(){ testErrorService.testError(); return \"\u542f\u52a8\u5c31\u62a5\u9519\u4e86\uff01\"; } }","title":"spring boot\u5e94\u7528\u65e0\u6cd5\u542f\u52a8\uff0c\u4e5f\u6ca1\u62a5\u9519\u4fe1\u606f"},{"location":"%E6%80%BB%E7%BB%93/spring%20boot%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%EF%BC%8C%E4%B9%9F%E6%B2%A1%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/#spring-boot","text":"","title":"spring boot\u5e94\u7528\u65e0\u6cd5\u542f\u52a8\uff0c\u4e5f\u6ca1\u62a5\u9519\u4fe1\u606f"},{"location":"%E6%80%BB%E7%BB%93/spring%20boot%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%EF%BC%8C%E4%B9%9F%E6%B2%A1%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/#_1","text":"springboot\u5e94\u7528\u6628\u5929\u8fd8\u80fd\u6b63\u5e38\u597d\u597d\u542f\u52a8\uff0c\u5ffd\u7136\u4e4b\u95f4\u5c31\u542f\u52a8\u4e0d\u4e86\u4e86\uff0c\u4e5f\u4e0d\u62a5\u4efb\u4f55\u9519\u8bef\uff0c\u53ea\u89c1\u5230\u63a7\u5236\u53f0\u8f93\u51fa\"Stopping service\".\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u8fde\u7eed\u51fa\u73b0\u8fc73\u6b21\u4e86\uff0c\u8fd9\u6b21\u72e0\u4e0b\u51b3\u5fc3\u8981\u627e\u51fa\u4e2a\u6240\u4ee5\u7136\u3002 \u5728\u6b64\uff0c\u5148\u8bf4\u4e0b\u4e2a\u4eba\u7ecf\u5386\u7684\u524d\u9762\u4e09\u6b21\u65e0\u6cd5\u542f\u52a8\u6ca1\u6709\u62a5\u9519\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"%E6%80%BB%E7%BB%93/spring%20boot%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%EF%BC%8C%E4%B9%9F%E6%B2%A1%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/#_2","text":"\u7b2c\u4e00\u6b21\uff1a\u548c\u73af\u5883\u6709\u5173 \u5f53\u67d0\u4e2a\u4e2d\u95f4\u4ef6\u65e0\u6cd5\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7684\u540c\u4e8b\u5728try catch\u4e2d\u9519\u8bef\u7684\u4f7f\u7528\u4e86System.exit()\u5bfc\u81f4\u5f02\u5e38; java try{ \u2026\u2026 }catch(Exception e){ System.exit(); log.error(e) } \u7b2c\u4e8c\u6b21\uff1a\u548cjar\u5305\u51b2\u7a81\u6709\u5173 \u5f53\u65f6\u9879\u76ee\u4e2d\u7528\u5230\u4e86hbase\uff0c\u9700\u8981\u96c6\u6210hbase\uff0c\u6240\u4ee5\u5f15\u5165\u4e86hbase-client 2.1.0 \u7248\u672c\uff0c\u4f46\u662f\u8be5\u5305\u5bf9curator\u5305\u7248\u672c\u6709\u8981\u6c42\uff0c\u5bfc\u81f4\u548c\u5176\u4ed6\u7ec4\u4ef6\u7684curator\u7248\u672c\u51b2\u7a81\uff0c\u6700\u7ec8\u7a0b\u5e8f\u8f93\u51fa\u7684\u4fe1\u606f\u4e2d\uff0c\u53ea\u6709\u51e0\u884cINFO\u65e5\u5fd7\u3002 2019-09-12 10:39:30.350 INFO 37343 --- [5311@0x040943a6] org.apache.zookeeper.ZooKeeper : Session: 0x16b72a291d73e73 closed 2019-09-12 10:39:30.351 INFO 37343 --- [3a6-EventThread] org.apache.zookeeper.ClientCnxn : EventThread shut down for session: 0x16b72a291d73e73 2019-09-12 10:39:30.566 INFO 37343 --- [tor-Framework-0] o.a.c.f.imps.CuratorFrameworkImpl : backgroundOperationsLoop exiting \u6700\u7ec8\u901a\u8fc7jar\u5305\u51b2\u7a81\uff0c\u4e0d\u65ad\u8bd5\u9519\uff0c\u4e0d\u65ad\u5bf9\u6bd4\u548c\u5176\u4ed6\u80fd\u6b63\u5e38\u542f\u52a8\u5e94\u7528\u7684\u4f9d\u8d56\uff0c\u624d\u89e3\u51b3\u51b2\u7a81\u3002 \u7b2c\u4e09\u6b21\uff1a\u548c\u4ee3\u7801\u7f16\u5199\u6709\u5173 \u4e5f\u5c31\u662f\u521a\u521a\u53d1\u751f\u7684\uff0c\u8ba9\u7b14\u8005\u51b3\u5b9a\u72e0\u4e0b\u5fc3\u6316\u6398\"\u65e0\u62a5\u9519\u4fe1\u606f\"\u7684\u7f6a\u9b41\u7978\u9996\u3002\u4e00\u5b9a\u662f\u6709\u5f02\u5e38\u7684\uff0c\u53ea\u662f\u4e0d\u77e5\u9053\u5728\u54ea\u4e2a\u73af\u8282\u4e22\u5931\u4e86\u3002 \u5148\u8bf4\u7ed3\u8bba\uff1a\u672c\u6b21\"\u65e0\u7f18\u65e0\u6545\"\u65e0\u6cd5\u542f\u52a8\u7684\u539f\u56e0\uff0c\u5176\u5b9e\u662f\u6628\u5929\u7b14\u8005\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u4ee3\u7801\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2adubbo\u670d\u52a1\u4f9d\u8d56\uff0c\u4f46\u662f\u6ca1\u6709\u5728dubbo xml\u6587\u4ef6\u4e2d\u6ce8\u518creference\uff0c\u6240\u4ee5\u5bfc\u81f4\u4f9d\u8d56\u7f3a\u5931\uff0c\u6700\u7ec8\u5e94\u7528\u8d77\u4e0d\u6765\u3002 \u5f53\u7136\uff0c\u548c\u524d\u9762\u51e0\u6b21\u4e00\u6837\uff0c\u63a7\u5236\u53f0\uff0c\u65e5\u5fd7\u6587\u4ef6\uff0c\u6ca1\u6709\u4efb\u4f55\u5730\u65b9\u6709\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u3002","title":"\u4e3e\u4f8b\u8bf4\u660e"},{"location":"%E6%80%BB%E7%BB%93/spring%20boot%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%EF%BC%8C%E4%B9%9F%E6%B2%A1%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/#_3","text":"\u6839\u636e\u4e0b\u9762\u8fd9\u7bc7\u6587\u7ae0\uff0c\u7ed9\u51fa\u4e86\u63d0\u793a\u3002 \u5f15\u7528\uff1aSpringBoot\u542f\u52a8\u9879\u76ee\u540e\u81ea\u52a8\u5173\u95ed: https://blog.csdn.net/laoxilaoxi_/article/details/83654186 \u5148\u8bf4\u7ed3\u8bba\uff1a\u4e0d\u662f\u6ca1\u6709\u8f93\u51fa\u5f02\u5e38\uff0c\u662f\u65b0\u7248\u672c\u7684Spring boot \u5728\u51fa\u9519\u540e\uff0c\u4e0d\u518d\u8f93\u51fa\u9519\u8bef\u5230\u63a7\u5236\u53f0\u4e86\uff0c\u800c\u662f\u5c06\u5f02\u5e38\u5728Application main\u65b9\u6cd5\u4e2d\u629b\u51fa\u3002 \u5212\u91cd\u70b9\uff1a\u65b0\u7248\u672cSpring boot 2.x \u4e0d\u518d\u8f93\u51fa\u9519\u8bef\u5230\u65e5\u5fd7\u4e2d\uff0c\u5c06\u5f02\u5e38\u5728Application main\u65b9\u6cd5\u4e2d\u629b\u51fa\u3002 \u800c\u4f4e\u7248\u672cSpring boot 1.3.x\uff0c1.4.x\u7248\u672c\uff0c\u662f\u4f1a\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u9519\u8bef\u7684\u3002","title":"\u6392\u67e5\u5206\u6790"},{"location":"%E6%80%BB%E7%BB%93/spring%20boot%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%EF%BC%8C%E4%B9%9F%E6%B2%A1%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/#_4","text":"\u89e3\u51b3\uff1a \u6709\u4e86\u4e0a\u9762\u7684\u7075\u611f\uff0c\u90a3\u597d\u529e\u6211\u5728main \u542f\u52a8\u65b9\u6cd5\u4e2d\u6355\u6349\uff0c\u81ea\u5df1\u6253\u5370\uff0c\u4e0d\u5c31\u80fd\u770b\u51fa\u6765\u9519\u8bef\u539f\u56e0\u4e86\u5417\uff1f \u4e8b\u5b9e\u4e0a\uff0c\u786e\u5b9e\u5e94\u8be5\u5982\u6b64\u3002 \u6700\u540e\uff0c\u7b14\u8005\u5728main\u65b9\u6cd5\u542f\u52a8spring boot \u65f6\uff0c\u8fdb\u884c\u4e00\u573a\u6355\u6349\u5e76\u8f93\u51fa\u65e5\u5fd7\u3002\u7136\u540e\u9519\u8bef\u5c31\u4e00\u76ee\u4e86\u7136\u4e86\u3002 @Slf4j @ImportResource(\"classpath*:spring-*.xml\") @SpringBootApplication public class SupportApplication { public static void main(String[] args) { try { SpringApplication.run(SupportApplication.class, args); System.out.println(\"Server startup done.\"); }catch (Exception e){ log.error(\"\u670d\u52a1xxx-support\u542f\u52a8\u62a5\u9519\", e); } } } \u6700\u7ec8\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u4e45\u8fdd\u7684\u5f02\u5e38\u4fe1\u606f\uff1a 2019-09-12 11:18:18.799 ERROR 38420 --- [ main] c.c.xxx.support.xxxSupportApplication : \u670d\u52a1xxx-support\u542f\u52a8\u62a5\u9519 org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'xxxController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'xxxCoreService': Unsatisfied dependency expressed through field 'xxxSpotService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.test.xxx.api.service.XxxSpotService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)} at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:321) ~[spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.0.10.RELEASE.jar:5.0.10","title":"\u89e3\u51b3\u65b9\u6cd5"},{"location":"%E6%80%BB%E7%BB%93/spring%20boot%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%EF%BC%8C%E4%B9%9F%E6%B2%A1%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/#_5","text":"\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u9a8c\u8bc1\u4e0b\u4f4e\u7248\u672cSpring boot 1.3.x\uff0c1.4.x\u7248\u672c\uff0c\u662f\u5426\u4f1a\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u9519\u8bef\u3002 \u4e0b\u9762\u7684\u5b9e\u9a8c\u662f\u57fa\u4e8espring boot 1.4.7\u7248\u672c\u8fdb\u884c\u7684\uff0c\u4f4e\u7248\u672c\u7684spring boot \u90fd\u4f1a\u5728\u63a7\u5236\u53f0\u6216\u65e5\u5fd7\u6587\u4ef6\u4e2d\u5148\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u518d\u9000\u51fa\u542f\u52a8main\u65b9\u6cd5\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4ece\u4f4e\u7248\u672c\u5347\u5230\u9ad8\u7248\u672c\u7684\uff0c\u8bf7\u5728main\u542f\u52a8\u65f6\uff0c\u81ea\u884c\u6355\u6349\u5f02\u5e38\u3002 @Controller @RequestMapping(\"/test\") public class TestErrorController { /** * 1.\u5236\u9020\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684Spring bean\uff1b * 2.\u5e76\u5bf9\u5176\u8fdb\u884c\u4f9d\u8d56\uff1b * 3.\u542f\u52a8\u5e94\u7528XxxApplication\uff1b * 4.\u63a7\u5236\u53f0\u6709\u660e\u663e\u62a5\u9519\u4fe1\u606f\u8f93\u51fa\uff1b * 2019-09-12 10:44:38.014 INFO 37477 --- [ main] o.apache.catalina.core.StandardService : Stopping service [Tomcat] * 2019-09-12 10:44:38.026 INFO 37477 --- [ main] utoConfigurationReportLoggingInitializer : * * <p>Error starting ApplicationContext. To display the auto-configuration report re-run your * application with 'debug' enabled. 2019-09-12 10:44:38.155 ERROR 37477 --- [ main] o.s.b.d.LoggingFailureAnalysisReporter : * <p>*************************** APPLICATION FAILED TO START *************************** * <p>Description: * <p>A component required a bean of type * 'cn.test.lee.service.TestErrorService' that could not be found. * <p>Action: * <p>Consider defining a bean of type 'cn.test.service.TestErrorService' * in your configuration. * <p>Disconnected from the target VM, address: '127.0.0.1:57403', transport: 'socket' * <p>Process finished with exit code 1 */ @Resource private TestErrorService testErrorService; public String testError(){ testErrorService.testError(); return \"\u542f\u52a8\u5c31\u62a5\u9519\u4e86\uff01\"; } }","title":"\u6269\u5c55\u9a8c\u8bc1"},{"location":"%E6%8E%A8%E8%8D%90/%E8%AF%A6%E8%A7%A3Twitter%20snowflake%E5%BC%80%E6%BA%90%E5%88%86%E5%B8%83%E5%BC%8F%E8%87%AA%E5%A2%9EID%E7%AE%97%E6%B3%95%EF%BC%8C%E9%99%84%E6%BC%94%E7%AE%97%E9%AA%8C%E8%AF%81%E8%BF%87%E7%A8%8B/","text":"\u8be6\u89e3Twitter snowflake\u5f00\u6e90\u5206\u5e03\u5f0f\u81ea\u589eID\u7b97\u6cd5\uff0c\u9644\u6f14\u7b97\u9a8c\u8bc1\u8fc7\u7a0b 1.snowflake\u7b80\u4ecb \u200b \u4e92\u8054\u7f51\u5feb\u901f\u53d1\u5c55\u7684\u4eca\u5929\uff0c\u5206\u5e03\u5f0f\u5e94\u7528\u7cfb\u7edf\u5df2\u7ecf\u89c1\u602a\u4e0d\u602a\uff0c\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5404\u79cd\u5404\u6837\u7684ID\uff0c\u65e2\u7136\u662fID\u90a3\u4e48\u5fc5\u7136\u662f\u8981\u4fdd\u8bc1\u5168\u5c40\u552f\u4e00\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u4e0d\u540c\u5f53\u4e1a\u52a1\u8fd8\u9700\u8981\u4e0d\u540c\u7684\u7279\u6027\uff0c\u6bd4\u5982\u50cf\u5e76\u53d1\u5de8\u5927\u7684\u4e1a\u52a1\u8981\u6c42ID\u751f\u6210\u6548\u7387\u9ad8\uff0c\u541e\u5410\u5927\uff1b\u6bd4\u5982\u67d0\u4e9b\u94f6\u884c\u7c7b\u4e1a\u52a1\uff0c\u9700\u8981\u6309\u6bcf\u65e5\u65e5\u671f\u5236\u5b9a\u4ea4\u6613\u6d41\u6c34\u53f7\uff1b\u53c8\u6bd4\u5982\u6211\u4eec\u5e0c\u671b\u7528\u6237\u7684ID\u662f\u968f\u673a\u7684\uff0c\u65e0\u5e8f\u7684\uff0c\u7eaf\u6570\u5b57\u7684\uff0c\u4e14\u4f4d\u6570\u957f\u5ea6\u662f\u5c0f\u4e8e10\u4f4d\u7684\u3002\u7b49\u7b49\uff0c\u4e0d\u540c\u7684\u4e1a\u52a1\u573a\u666f\u9700\u8981\u7684ID\u7279\u6027\u5404\u4e0d\u4e00\u6837\uff0c\u4e8e\u662f\uff0c\u884d\u751f\u4e86\u5404\u79cdID\u751f\u6210\u5668\uff0c\u4f46\u5927\u591a\u6570\u5229\u7528\u6570\u636e\u5e93\u63a7\u5236ID\u7684\u751f\u6210\uff0c\u6027\u80fd\u53d7\u6570\u636e\u5e93\u5e76\u53d1\u80fd\u529b\u9650\u5236\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u6b3e\u4e0d\u9700\u8981\u4f9d\u8d56\u4efb\u4f55\u4e2d\u95f4\u4ef6\uff08\u5982\u6570\u636e\u5e93\uff0c\u5206\u5e03\u5f0f\u7f13\u5b58\u670d\u52a1\u7b49\uff09\u7684ID\u751f\u6210\u5668\u5462\uff1f\u672c\u7740\u53d6\u4e4b\u4e8e\u5f00\u6e90\uff0c\u7528\u4e4b\u4e8e\u5f00\u6e90\u7684\u539f\u5219\uff0c\u4eca\u5929\uff0c\u7279\u6b64\u4ecb\u7ecdTwitter\u5f00\u6e90\u7684\u4e00\u6b3e\u5206\u5e03\u5f0f\u81ea\u589eID\u7b97\u6cd5snowflake\uff0c\u5e76\u9644\u4e0a\u7b97\u6cd5\u539f\u7406\u63a8\u5bfc\u548c\u6f14\u7b97\u8fc7\u7a0b\uff01 snowflake\u7b97\u6cd5\u662f\u4e00\u6b3e\u672c\u5730\u751f\u6210\u7684\uff08ID\u751f\u6210\u8fc7\u7a0b\u4e0d\u4f9d\u8d56\u4efb\u4f55\u4e2d\u95f4\u4ef6\uff0c\u65e0\u7f51\u7edc\u901a\u4fe1\uff09\uff0c\u4fdd\u8bc1ID\u5168\u5c40\u552f\u4e00\uff0c\u5e76\u4e14ID\u603b\u4f53\u6709\u5e8f\u9012\u589e\uff0c\u6027\u80fd\u6bcf\u79d2\u751f\u6210300w\uff0b\u3002 2.snowflake\u7b97\u6cd5\u539f\u7406 snowflake\u751f\u4ea7\u7684ID\u662f\u4e00\u4e2a18\u4f4d\u7684long\u578b\u6570\u5b57\uff0c\u4e8c\u8fdb\u5236\u7ed3\u6784\u8868\u793a\u5982\u4e0b(\u6bcf\u90e8\u5206\u7528-\u5206\u5f00): 0 - 00000000 00000000 00000000 00000000 00000000 0 - 00000 - 00000 - 00000000 0000 \u7b2c\u4e00\u4f4d\u672a\u4f7f\u7528\uff0c\u63a5\u4e0b\u6765\u768441\u4f4d\u4e3a\u6beb\u79d2\u7ea7\u65f6\u95f4(41\u4f4d\u7684\u957f\u5ea6\u53ef\u4ee5\u4f7f\u752869\u5e74\uff0c\u4ece1970-01-01 08:00:00)\uff0c\u7136\u540e\u662f5\u4f4ddatacenterId\uff08\u6700\u5927\u652f\u63012^5\uff1d32\u4e2a\uff0c\u4e8c\u8fdb\u5236\u8868\u793a\u4ece00000-11111\uff0c\u4e5f\u5373\u662f\u5341\u8fdb\u52360-31\uff09\uff0c\u548c5\u4f4dworkerId\uff08\u6700\u5927\u652f\u63012^5\uff1d32\u4e2a\uff0c\u539f\u7406\u540cdatacenterId\uff09\uff0c\u6240\u4ee5datacenterId*workerId\u6700\u591a\u652f\u6301\u90e8\u7f721024\u4e2a\u8282\u70b9\uff0c\u6700\u540e12\u4f4d\u662f\u6beb\u79d2\u5185\u7684\u8ba1\u6570\uff0812\u4f4d\u7684\u8ba1\u6570\u987a\u5e8f\u53f7\u652f\u6301\u6bcf\u4e2a\u8282\u70b9\u6bcf\u6beb\u79d2\u4ea7\u751f2^12\uff1d4096\u4e2aID\u5e8f\u53f7\uff09. \u6240\u6709\u4f4d\u6570\u52a0\u8d77\u6765\u517164\u4f4d\uff0c\u6070\u597d\u662f\u4e00\u4e2aLong\u578b\uff08\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a18\uff09. \u5355\u53f0\u673a\u5668\u5b9e\u4f8b\uff0c\u901a\u8fc7\u65f6\u95f4\u6233\u4fdd\u8bc1\u524d41\u4f4d\u662f\u552f\u4e00\u7684\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u591a\u53f0\u673a\u5668\u5b9e\u4f8b\u4e0b\uff0c\u901a\u8fc7\u5bf9\u6bcf\u4e2a\u673a\u5668\u5b9e\u4f8b\u5206\u914d\u4e0d\u540c\u7684datacenterId\u548cworkerId\u907f\u514d\u4e2d\u95f4\u768410\u4f4d\u78b0\u649e\u3002\u6700\u540e12\u4f4d\u6bcf\u6beb\u79d2\u4ece0\u9012\u589e\u751f\u4ea7ID\uff0c\u518d\u63d0\u4e00\u6b21\uff1a\u6bcf\u6beb\u79d2\u6700\u591a\u751f\u62104096\u4e2aID\uff0c\u6bcf\u79d2\u53ef\u8fbe4096000\u4e2a\u3002\u7406\u8bba\u4e0a\uff0c\u53ea\u8981CPU\u8ba1\u7b97\u80fd\u529b\u8db3\u591f\uff0c\u5355\u673a\u6bcf\u79d2\u53ef\u751f\u4ea7400\u591a\u4e07\u4e2a\uff0c\u5b9e\u6d4b300w+\uff0c\u6548\u7387\u4e4b\u9ad8\u7531\u6b64\u53ef\u89c1\u3002 \uff08\u8be5\u8282\u6539\u7f16\u81ea\uff1ahttp://www.cnblogs.com/relucent/p/4955340.html\uff09 3.snowflake\u7b97\u6cd5\u6e90\u7801\uff08java\u7248\uff09 @ToString @Slf4j public class SnowflakeIdFactory { private final long twepoch = 1288834974657L; private final long workerIdBits = 5L; private final long datacenterIdBits = 5L; private final long maxWorkerId = -1L ^ (-1L << workerIdBits); private final long maxDatacenterId = -1L ^ (-1L << datacenterIdBits); private final long sequenceBits = 12L; private final long workerIdShift = sequenceBits; private final long datacenterIdShift = sequenceBits + workerIdBits; private final long timestampLeftShift = sequenceBits + workerIdBits + datacenterIdBits; private final long sequenceMask = -1L ^ (-1L << sequenceBits); private long workerId; private long datacenterId; private long sequence = 0L; private long lastTimestamp = -1L; public SnowflakeIdFactory(long workerId, long datacenterId) { if (workerId > maxWorkerId || workerId < 0) { throw new IllegalArgumentException(String.format(\"worker Id can't be greater than %d or less than 0\", maxWorkerId)); } if (datacenterId > maxDatacenterId || datacenterId < 0) { throw new IllegalArgumentException(String.format(\"datacenter Id can't be greater than %d or less than 0\", maxDatacenterId)); } this.workerId = workerId; this.datacenterId = datacenterId; } public synchronized long nextId() { long timestamp = timeGen(); if (timestamp < lastTimestamp) { //\u670d\u52a1\u5668\u65f6\u949f\u88ab\u8c03\u6574\u4e86,ID\u751f\u6210\u5668\u505c\u6b62\u670d\u52a1. throw new RuntimeException(String.format(\"Clock moved backwards. Refusing to generate id for %d milliseconds\", lastTimestamp - timestamp)); } if (lastTimestamp == timestamp) { sequence = (sequence + 1) & sequenceMask; if (sequence == 0) { timestamp = tilNextMillis(lastTimestamp); } } else { sequence = 0L; } lastTimestamp = timestamp; return ((timestamp - twepoch) << timestampLeftShift) | (datacenterId << datacenterIdShift) | (workerId << workerIdShift) | sequence; } protected long tilNextMillis(long lastTimestamp) { long timestamp = timeGen(); while (timestamp <= lastTimestamp) { timestamp = timeGen(); } return timestamp; } protected long timeGen() { return System.currentTimeMillis(); } public static void testProductIdByMoreThread(int dataCenterId, int workerId, int n) throws InterruptedException { List<Thread> tlist = new ArrayList<>(); Set<Long> setAll = new HashSet<>(); CountDownLatch cdLatch = new CountDownLatch(10); long start = System.currentTimeMillis(); int threadNo = dataCenterId; Map<String,SnowflakeIdFactory> idFactories = new HashMap<>(); for(int i=0;i<10;i++){ //\u7528\u7ebf\u7a0b\u540d\u79f0\u505amap key. idFactories.put(\"snowflake\"+i,new SnowflakeIdFactory(workerId, threadNo++)); } for(int i=0;i<10;i++){ Thread temp =new Thread(new Runnable() { @Override public void run() { Set<Long> setId = new HashSet<>(); SnowflakeIdFactory idWorker = idFactories.get(Thread.currentThread().getName()); for(int j=0;j<n;j++){ setId.add(idWorker.nextId()); } synchronized (setAll){ setAll.addAll(setId); log.info(\"{}\u751f\u4ea7\u4e86{}\u4e2aid,\u5e76\u6210\u529f\u52a0\u5165\u5230setAll\u4e2d.\",Thread.currentThread().getName(),n); } cdLatch.countDown(); } },\"snowflake\"+i); tlist.add(temp); } for(int j=0;j<10;j++){ tlist.get(j).start(); } cdLatch.await(); long end1 = System.currentTimeMillis() - start; log.info(\"\u5171\u8017\u65f6:{}\u6beb\u79d2,\u9884\u671f\u5e94\u8be5\u751f\u4ea7{}\u4e2aid, \u5b9e\u9645\u5408\u5e76\u603b\u8ba1\u751f\u6210ID\u4e2a\u6570:{}\",end1,10*n,setAll.size()); } public static void testProductId(int dataCenterId, int workerId, int n){ SnowflakeIdFactory idWorker = new SnowflakeIdFactory(workerId, dataCenterId); SnowflakeIdFactory idWorker2 = new SnowflakeIdFactory(workerId+1, dataCenterId); Set<Long> setOne = new HashSet<>(); Set<Long> setTow = new HashSet<>(); long start = System.currentTimeMillis(); for (int i = 0; i < n; i++) { setOne.add(idWorker.nextId());//\u52a0\u5165set } long end1 = System.currentTimeMillis() - start; log.info(\"\u7b2c\u4e00\u6279ID\u9884\u8ba1\u751f\u6210{}\u4e2a,\u5b9e\u9645\u751f\u6210{}\u4e2a<<<<*>>>>\u5171\u8017\u65f6:{}\",n,setOne.size(),end1); for (int i = 0; i < n; i++) { setTow.add(idWorker2.nextId());//\u52a0\u5165set } long end2 = System.currentTimeMillis() - start; log.info(\"\u7b2c\u4e8c\u6279ID\u9884\u8ba1\u751f\u6210{}\u4e2a,\u5b9e\u9645\u751f\u6210{}\u4e2a<<<<*>>>>\u5171\u8017\u65f6:{}\",n,setTow.size(),end2); setOne.addAll(setTow); log.info(\"\u5408\u5e76\u603b\u8ba1\u751f\u6210ID\u4e2a\u6570:{}\",setOne.size()); } public static void testPerSecondProductIdNums(){ SnowflakeIdFactory idWorker = new SnowflakeIdFactory(1, 2); long start = System.currentTimeMillis(); int count = 0; for (int i = 0; System.currentTimeMillis()-start<1000; i++,count=i) { /** \u6d4b\u8bd5\u65b9\u6cd5\u4e00: \u6b64\u7528\u6cd5\u7eaf\u7cb9\u7684\u751f\u4ea7ID,\u6bcf\u79d2\u751f\u4ea7ID\u4e2a\u6570\u4e3a300w+ */ idWorker.nextId(); /** \u6d4b\u8bd5\u65b9\u6cd5\u4e8c: \u5728log\u4e2d\u6253\u5370,\u540c\u65f6\u83b7\u53d6ID,\u6b64\u7528\u6cd5\u751f\u4ea7ID\u7684\u80fd\u529b\u53d7\u9650\u4e8elog.error()\u7684\u541e\u5410\u80fd\u529b. * \u6bcf\u79d2\u5f98\u5f8a\u572810\u4e07\u5de6\u53f3. */ //log.error(\"{}\",idWorker.nextId()); } long end = System.currentTimeMillis()-start; System.out.println(end); System.out.println(count); } public static void main(String[] args) { /** case1: \u6d4b\u8bd5\u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570? * \u7ed3\u8bba: \u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570300w+ */ //testPerSecondProductIdNums(); /** case2: \u5355\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid,\u9a8c\u8bc1id\u662f\u5426\u6709\u91cd\u590d? * \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ //testProductId(1,2,10000);//\u9a8c\u8bc1\u901a\u8fc7! //testProductId(1,2,20000);//\u9a8c\u8bc1\u901a\u8fc7! /** case3: \u591a\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid, \u5168\u90e8id\u5728\u5168\u5c40\u8303\u56f4\u5185\u662f\u5426\u4f1a\u91cd\u590d? * \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ try { testProductIdByMoreThread(1,2,100000);//\u5355\u673a\u6d4b\u8bd5\u6b64\u573a\u666f,\u6027\u80fd\u635f\u5931\u81f3\u5c11\u6298\u534a! } catch (InterruptedException e) { e.printStackTrace(); } } } \u6d4b\u8bd5\u7528\u4f8b\uff1a /** case1: \u6d4b\u8bd5\u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570? \u7ed3\u8bba: \u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570300w+ */ //testPerSecondProductIdNums(); /** case2: \u5355\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid,\u9a8c\u8bc1id\u662f\u5426\u6709\u91cd\u590d? \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ //testProductId(1,2,10000);//\u9a8c\u8bc1\u901a\u8fc7! //testProductId(1,2,20000);//\u9a8c\u8bc1\u901a\u8fc7! /** case3: \u591a\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid, \u5168\u90e8id\u5728\u5168\u5c40\u8303\u56f4\u5185\u662f\u5426\u4f1a\u91cd\u590d? \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ try { testProductIdByMoreThread(1,2,100000);//\u5355\u673a\u6d4b\u8bd5\u6b64\u573a\u666f,\u6027\u80fd\u635f\u5931\u81f3\u5c11\u6298\u534a! } catch (InterruptedException e) { e.printStackTrace(); } 4.snowflake\u7b97\u6cd5\u63a8\u5bfc\u548c\u6f14\u7b97\u8fc7\u7a0b \u8bf4\u660e\uff1a \u6f14\u7b97\u4f7f\u7528\u7684\u5bf9\u8c61\u5b9e\u4f8b\uff1aSnowflakeIdFactory idWorker = new SnowflakeIdFactory(1, 2); \u8fd0\u884c\u65f6\u6570\u636eworkerId\uff1d1\uff0cdatacenterId\uff1d2\uff0c\u5206\u522b\u8868\u793a\u673a\u5668\u5b9e\u4f8b\u7684\u751f\u4ea7\u8005\u7f16\u53f7\uff0c\u6570\u636e\u4e2d\u5fc3\u7f16\u53f7\uff1b sequence\uff1d0\u8868\u793a\u6bcf\u6beb\u79d2\u751f\u4ea7ID\u4ece0\u5f00\u59cb\u8ba1\u6570\u9012\u589e\uff1b \u4ee5\u4e0b\u6f14\u7b97\u57fa\u4e8e\u65f6\u95f4\u6233\uff1d1482394743339\u65f6\u523b\u8fdb\u884c\u63a8\u5bfc\u3002 \u4e00\u53e5\u8bdd\u63cf\u8ff0\uff1a\u4ee5\u4e0b\u6f14\u7b97\u6a21\u62df\u4e861482394743339\u8fd9\u4e00\u6beb\u79d2\u65f6\u523b\uff0cworkerId\uff1d1\uff0cdatacenterId\uff1d2\u7684id\u751f\u6210\u5668\uff0c\u751f\u4ea7\u7b2c\u4e00\u4e2aid\u7684\u8fc7\u7a0b\u3002 \uff08\u56fe\u7247\u539f\u521b\uff0c\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\uff0c\u753b\u56fe\u4e0d\u6613\uff0c\u8c22\u8c22\uff01\uff09 end\uff01 \u53c2\u8003 https://github.com/twitter/snowflake http://www.cnblogs.com/relucent/p/4955340.html","title":"\u8be6\u89e3Twitter snowflake\u5f00\u6e90\u5206\u5e03\u5f0f\u81ea\u589eID\u7b97\u6cd5\uff0c\u9644\u6f14\u7b97\u9a8c\u8bc1\u8fc7\u7a0b"},{"location":"%E6%8E%A8%E8%8D%90/%E8%AF%A6%E8%A7%A3Twitter%20snowflake%E5%BC%80%E6%BA%90%E5%88%86%E5%B8%83%E5%BC%8F%E8%87%AA%E5%A2%9EID%E7%AE%97%E6%B3%95%EF%BC%8C%E9%99%84%E6%BC%94%E7%AE%97%E9%AA%8C%E8%AF%81%E8%BF%87%E7%A8%8B/#twitter-snowflakeid","text":"","title":"\u8be6\u89e3Twitter snowflake\u5f00\u6e90\u5206\u5e03\u5f0f\u81ea\u589eID\u7b97\u6cd5\uff0c\u9644\u6f14\u7b97\u9a8c\u8bc1\u8fc7\u7a0b"},{"location":"%E6%8E%A8%E8%8D%90/%E8%AF%A6%E8%A7%A3Twitter%20snowflake%E5%BC%80%E6%BA%90%E5%88%86%E5%B8%83%E5%BC%8F%E8%87%AA%E5%A2%9EID%E7%AE%97%E6%B3%95%EF%BC%8C%E9%99%84%E6%BC%94%E7%AE%97%E9%AA%8C%E8%AF%81%E8%BF%87%E7%A8%8B/#1snowflake","text":"\u200b \u4e92\u8054\u7f51\u5feb\u901f\u53d1\u5c55\u7684\u4eca\u5929\uff0c\u5206\u5e03\u5f0f\u5e94\u7528\u7cfb\u7edf\u5df2\u7ecf\u89c1\u602a\u4e0d\u602a\uff0c\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5404\u79cd\u5404\u6837\u7684ID\uff0c\u65e2\u7136\u662fID\u90a3\u4e48\u5fc5\u7136\u662f\u8981\u4fdd\u8bc1\u5168\u5c40\u552f\u4e00\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u4e0d\u540c\u5f53\u4e1a\u52a1\u8fd8\u9700\u8981\u4e0d\u540c\u7684\u7279\u6027\uff0c\u6bd4\u5982\u50cf\u5e76\u53d1\u5de8\u5927\u7684\u4e1a\u52a1\u8981\u6c42ID\u751f\u6210\u6548\u7387\u9ad8\uff0c\u541e\u5410\u5927\uff1b\u6bd4\u5982\u67d0\u4e9b\u94f6\u884c\u7c7b\u4e1a\u52a1\uff0c\u9700\u8981\u6309\u6bcf\u65e5\u65e5\u671f\u5236\u5b9a\u4ea4\u6613\u6d41\u6c34\u53f7\uff1b\u53c8\u6bd4\u5982\u6211\u4eec\u5e0c\u671b\u7528\u6237\u7684ID\u662f\u968f\u673a\u7684\uff0c\u65e0\u5e8f\u7684\uff0c\u7eaf\u6570\u5b57\u7684\uff0c\u4e14\u4f4d\u6570\u957f\u5ea6\u662f\u5c0f\u4e8e10\u4f4d\u7684\u3002\u7b49\u7b49\uff0c\u4e0d\u540c\u7684\u4e1a\u52a1\u573a\u666f\u9700\u8981\u7684ID\u7279\u6027\u5404\u4e0d\u4e00\u6837\uff0c\u4e8e\u662f\uff0c\u884d\u751f\u4e86\u5404\u79cdID\u751f\u6210\u5668\uff0c\u4f46\u5927\u591a\u6570\u5229\u7528\u6570\u636e\u5e93\u63a7\u5236ID\u7684\u751f\u6210\uff0c\u6027\u80fd\u53d7\u6570\u636e\u5e93\u5e76\u53d1\u80fd\u529b\u9650\u5236\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u6b3e\u4e0d\u9700\u8981\u4f9d\u8d56\u4efb\u4f55\u4e2d\u95f4\u4ef6\uff08\u5982\u6570\u636e\u5e93\uff0c\u5206\u5e03\u5f0f\u7f13\u5b58\u670d\u52a1\u7b49\uff09\u7684ID\u751f\u6210\u5668\u5462\uff1f\u672c\u7740\u53d6\u4e4b\u4e8e\u5f00\u6e90\uff0c\u7528\u4e4b\u4e8e\u5f00\u6e90\u7684\u539f\u5219\uff0c\u4eca\u5929\uff0c\u7279\u6b64\u4ecb\u7ecdTwitter\u5f00\u6e90\u7684\u4e00\u6b3e\u5206\u5e03\u5f0f\u81ea\u589eID\u7b97\u6cd5snowflake\uff0c\u5e76\u9644\u4e0a\u7b97\u6cd5\u539f\u7406\u63a8\u5bfc\u548c\u6f14\u7b97\u8fc7\u7a0b\uff01 snowflake\u7b97\u6cd5\u662f\u4e00\u6b3e\u672c\u5730\u751f\u6210\u7684\uff08ID\u751f\u6210\u8fc7\u7a0b\u4e0d\u4f9d\u8d56\u4efb\u4f55\u4e2d\u95f4\u4ef6\uff0c\u65e0\u7f51\u7edc\u901a\u4fe1\uff09\uff0c\u4fdd\u8bc1ID\u5168\u5c40\u552f\u4e00\uff0c\u5e76\u4e14ID\u603b\u4f53\u6709\u5e8f\u9012\u589e\uff0c\u6027\u80fd\u6bcf\u79d2\u751f\u6210300w\uff0b\u3002","title":"1.snowflake\u7b80\u4ecb"},{"location":"%E6%8E%A8%E8%8D%90/%E8%AF%A6%E8%A7%A3Twitter%20snowflake%E5%BC%80%E6%BA%90%E5%88%86%E5%B8%83%E5%BC%8F%E8%87%AA%E5%A2%9EID%E7%AE%97%E6%B3%95%EF%BC%8C%E9%99%84%E6%BC%94%E7%AE%97%E9%AA%8C%E8%AF%81%E8%BF%87%E7%A8%8B/#2snowflake","text":"snowflake\u751f\u4ea7\u7684ID\u662f\u4e00\u4e2a18\u4f4d\u7684long\u578b\u6570\u5b57\uff0c\u4e8c\u8fdb\u5236\u7ed3\u6784\u8868\u793a\u5982\u4e0b(\u6bcf\u90e8\u5206\u7528-\u5206\u5f00): 0 - 00000000 00000000 00000000 00000000 00000000 0 - 00000 - 00000 - 00000000 0000 \u7b2c\u4e00\u4f4d\u672a\u4f7f\u7528\uff0c\u63a5\u4e0b\u6765\u768441\u4f4d\u4e3a\u6beb\u79d2\u7ea7\u65f6\u95f4(41\u4f4d\u7684\u957f\u5ea6\u53ef\u4ee5\u4f7f\u752869\u5e74\uff0c\u4ece1970-01-01 08:00:00)\uff0c\u7136\u540e\u662f5\u4f4ddatacenterId\uff08\u6700\u5927\u652f\u63012^5\uff1d32\u4e2a\uff0c\u4e8c\u8fdb\u5236\u8868\u793a\u4ece00000-11111\uff0c\u4e5f\u5373\u662f\u5341\u8fdb\u52360-31\uff09\uff0c\u548c5\u4f4dworkerId\uff08\u6700\u5927\u652f\u63012^5\uff1d32\u4e2a\uff0c\u539f\u7406\u540cdatacenterId\uff09\uff0c\u6240\u4ee5datacenterId*workerId\u6700\u591a\u652f\u6301\u90e8\u7f721024\u4e2a\u8282\u70b9\uff0c\u6700\u540e12\u4f4d\u662f\u6beb\u79d2\u5185\u7684\u8ba1\u6570\uff0812\u4f4d\u7684\u8ba1\u6570\u987a\u5e8f\u53f7\u652f\u6301\u6bcf\u4e2a\u8282\u70b9\u6bcf\u6beb\u79d2\u4ea7\u751f2^12\uff1d4096\u4e2aID\u5e8f\u53f7\uff09. \u6240\u6709\u4f4d\u6570\u52a0\u8d77\u6765\u517164\u4f4d\uff0c\u6070\u597d\u662f\u4e00\u4e2aLong\u578b\uff08\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a18\uff09. \u5355\u53f0\u673a\u5668\u5b9e\u4f8b\uff0c\u901a\u8fc7\u65f6\u95f4\u6233\u4fdd\u8bc1\u524d41\u4f4d\u662f\u552f\u4e00\u7684\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u591a\u53f0\u673a\u5668\u5b9e\u4f8b\u4e0b\uff0c\u901a\u8fc7\u5bf9\u6bcf\u4e2a\u673a\u5668\u5b9e\u4f8b\u5206\u914d\u4e0d\u540c\u7684datacenterId\u548cworkerId\u907f\u514d\u4e2d\u95f4\u768410\u4f4d\u78b0\u649e\u3002\u6700\u540e12\u4f4d\u6bcf\u6beb\u79d2\u4ece0\u9012\u589e\u751f\u4ea7ID\uff0c\u518d\u63d0\u4e00\u6b21\uff1a\u6bcf\u6beb\u79d2\u6700\u591a\u751f\u62104096\u4e2aID\uff0c\u6bcf\u79d2\u53ef\u8fbe4096000\u4e2a\u3002\u7406\u8bba\u4e0a\uff0c\u53ea\u8981CPU\u8ba1\u7b97\u80fd\u529b\u8db3\u591f\uff0c\u5355\u673a\u6bcf\u79d2\u53ef\u751f\u4ea7400\u591a\u4e07\u4e2a\uff0c\u5b9e\u6d4b300w+\uff0c\u6548\u7387\u4e4b\u9ad8\u7531\u6b64\u53ef\u89c1\u3002 \uff08\u8be5\u8282\u6539\u7f16\u81ea\uff1ahttp://www.cnblogs.com/relucent/p/4955340.html\uff09","title":"2.snowflake\u7b97\u6cd5\u539f\u7406"},{"location":"%E6%8E%A8%E8%8D%90/%E8%AF%A6%E8%A7%A3Twitter%20snowflake%E5%BC%80%E6%BA%90%E5%88%86%E5%B8%83%E5%BC%8F%E8%87%AA%E5%A2%9EID%E7%AE%97%E6%B3%95%EF%BC%8C%E9%99%84%E6%BC%94%E7%AE%97%E9%AA%8C%E8%AF%81%E8%BF%87%E7%A8%8B/#3snowflakejava","text":"@ToString @Slf4j public class SnowflakeIdFactory { private final long twepoch = 1288834974657L; private final long workerIdBits = 5L; private final long datacenterIdBits = 5L; private final long maxWorkerId = -1L ^ (-1L << workerIdBits); private final long maxDatacenterId = -1L ^ (-1L << datacenterIdBits); private final long sequenceBits = 12L; private final long workerIdShift = sequenceBits; private final long datacenterIdShift = sequenceBits + workerIdBits; private final long timestampLeftShift = sequenceBits + workerIdBits + datacenterIdBits; private final long sequenceMask = -1L ^ (-1L << sequenceBits); private long workerId; private long datacenterId; private long sequence = 0L; private long lastTimestamp = -1L; public SnowflakeIdFactory(long workerId, long datacenterId) { if (workerId > maxWorkerId || workerId < 0) { throw new IllegalArgumentException(String.format(\"worker Id can't be greater than %d or less than 0\", maxWorkerId)); } if (datacenterId > maxDatacenterId || datacenterId < 0) { throw new IllegalArgumentException(String.format(\"datacenter Id can't be greater than %d or less than 0\", maxDatacenterId)); } this.workerId = workerId; this.datacenterId = datacenterId; } public synchronized long nextId() { long timestamp = timeGen(); if (timestamp < lastTimestamp) { //\u670d\u52a1\u5668\u65f6\u949f\u88ab\u8c03\u6574\u4e86,ID\u751f\u6210\u5668\u505c\u6b62\u670d\u52a1. throw new RuntimeException(String.format(\"Clock moved backwards. Refusing to generate id for %d milliseconds\", lastTimestamp - timestamp)); } if (lastTimestamp == timestamp) { sequence = (sequence + 1) & sequenceMask; if (sequence == 0) { timestamp = tilNextMillis(lastTimestamp); } } else { sequence = 0L; } lastTimestamp = timestamp; return ((timestamp - twepoch) << timestampLeftShift) | (datacenterId << datacenterIdShift) | (workerId << workerIdShift) | sequence; } protected long tilNextMillis(long lastTimestamp) { long timestamp = timeGen(); while (timestamp <= lastTimestamp) { timestamp = timeGen(); } return timestamp; } protected long timeGen() { return System.currentTimeMillis(); } public static void testProductIdByMoreThread(int dataCenterId, int workerId, int n) throws InterruptedException { List<Thread> tlist = new ArrayList<>(); Set<Long> setAll = new HashSet<>(); CountDownLatch cdLatch = new CountDownLatch(10); long start = System.currentTimeMillis(); int threadNo = dataCenterId; Map<String,SnowflakeIdFactory> idFactories = new HashMap<>(); for(int i=0;i<10;i++){ //\u7528\u7ebf\u7a0b\u540d\u79f0\u505amap key. idFactories.put(\"snowflake\"+i,new SnowflakeIdFactory(workerId, threadNo++)); } for(int i=0;i<10;i++){ Thread temp =new Thread(new Runnable() { @Override public void run() { Set<Long> setId = new HashSet<>(); SnowflakeIdFactory idWorker = idFactories.get(Thread.currentThread().getName()); for(int j=0;j<n;j++){ setId.add(idWorker.nextId()); } synchronized (setAll){ setAll.addAll(setId); log.info(\"{}\u751f\u4ea7\u4e86{}\u4e2aid,\u5e76\u6210\u529f\u52a0\u5165\u5230setAll\u4e2d.\",Thread.currentThread().getName(),n); } cdLatch.countDown(); } },\"snowflake\"+i); tlist.add(temp); } for(int j=0;j<10;j++){ tlist.get(j).start(); } cdLatch.await(); long end1 = System.currentTimeMillis() - start; log.info(\"\u5171\u8017\u65f6:{}\u6beb\u79d2,\u9884\u671f\u5e94\u8be5\u751f\u4ea7{}\u4e2aid, \u5b9e\u9645\u5408\u5e76\u603b\u8ba1\u751f\u6210ID\u4e2a\u6570:{}\",end1,10*n,setAll.size()); } public static void testProductId(int dataCenterId, int workerId, int n){ SnowflakeIdFactory idWorker = new SnowflakeIdFactory(workerId, dataCenterId); SnowflakeIdFactory idWorker2 = new SnowflakeIdFactory(workerId+1, dataCenterId); Set<Long> setOne = new HashSet<>(); Set<Long> setTow = new HashSet<>(); long start = System.currentTimeMillis(); for (int i = 0; i < n; i++) { setOne.add(idWorker.nextId());//\u52a0\u5165set } long end1 = System.currentTimeMillis() - start; log.info(\"\u7b2c\u4e00\u6279ID\u9884\u8ba1\u751f\u6210{}\u4e2a,\u5b9e\u9645\u751f\u6210{}\u4e2a<<<<*>>>>\u5171\u8017\u65f6:{}\",n,setOne.size(),end1); for (int i = 0; i < n; i++) { setTow.add(idWorker2.nextId());//\u52a0\u5165set } long end2 = System.currentTimeMillis() - start; log.info(\"\u7b2c\u4e8c\u6279ID\u9884\u8ba1\u751f\u6210{}\u4e2a,\u5b9e\u9645\u751f\u6210{}\u4e2a<<<<*>>>>\u5171\u8017\u65f6:{}\",n,setTow.size(),end2); setOne.addAll(setTow); log.info(\"\u5408\u5e76\u603b\u8ba1\u751f\u6210ID\u4e2a\u6570:{}\",setOne.size()); } public static void testPerSecondProductIdNums(){ SnowflakeIdFactory idWorker = new SnowflakeIdFactory(1, 2); long start = System.currentTimeMillis(); int count = 0; for (int i = 0; System.currentTimeMillis()-start<1000; i++,count=i) { /** \u6d4b\u8bd5\u65b9\u6cd5\u4e00: \u6b64\u7528\u6cd5\u7eaf\u7cb9\u7684\u751f\u4ea7ID,\u6bcf\u79d2\u751f\u4ea7ID\u4e2a\u6570\u4e3a300w+ */ idWorker.nextId(); /** \u6d4b\u8bd5\u65b9\u6cd5\u4e8c: \u5728log\u4e2d\u6253\u5370,\u540c\u65f6\u83b7\u53d6ID,\u6b64\u7528\u6cd5\u751f\u4ea7ID\u7684\u80fd\u529b\u53d7\u9650\u4e8elog.error()\u7684\u541e\u5410\u80fd\u529b. * \u6bcf\u79d2\u5f98\u5f8a\u572810\u4e07\u5de6\u53f3. */ //log.error(\"{}\",idWorker.nextId()); } long end = System.currentTimeMillis()-start; System.out.println(end); System.out.println(count); } public static void main(String[] args) { /** case1: \u6d4b\u8bd5\u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570? * \u7ed3\u8bba: \u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570300w+ */ //testPerSecondProductIdNums(); /** case2: \u5355\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid,\u9a8c\u8bc1id\u662f\u5426\u6709\u91cd\u590d? * \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ //testProductId(1,2,10000);//\u9a8c\u8bc1\u901a\u8fc7! //testProductId(1,2,20000);//\u9a8c\u8bc1\u901a\u8fc7! /** case3: \u591a\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid, \u5168\u90e8id\u5728\u5168\u5c40\u8303\u56f4\u5185\u662f\u5426\u4f1a\u91cd\u590d? * \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ try { testProductIdByMoreThread(1,2,100000);//\u5355\u673a\u6d4b\u8bd5\u6b64\u573a\u666f,\u6027\u80fd\u635f\u5931\u81f3\u5c11\u6298\u534a! } catch (InterruptedException e) { e.printStackTrace(); } } } \u6d4b\u8bd5\u7528\u4f8b\uff1a /** case1: \u6d4b\u8bd5\u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570? \u7ed3\u8bba: \u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570300w+ */ //testPerSecondProductIdNums(); /** case2: \u5355\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid,\u9a8c\u8bc1id\u662f\u5426\u6709\u91cd\u590d? \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ //testProductId(1,2,10000);//\u9a8c\u8bc1\u901a\u8fc7! //testProductId(1,2,20000);//\u9a8c\u8bc1\u901a\u8fc7! /** case3: \u591a\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid, \u5168\u90e8id\u5728\u5168\u5c40\u8303\u56f4\u5185\u662f\u5426\u4f1a\u91cd\u590d? \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ try { testProductIdByMoreThread(1,2,100000);//\u5355\u673a\u6d4b\u8bd5\u6b64\u573a\u666f,\u6027\u80fd\u635f\u5931\u81f3\u5c11\u6298\u534a! } catch (InterruptedException e) { e.printStackTrace(); }","title":"3.snowflake\u7b97\u6cd5\u6e90\u7801\uff08java\u7248\uff09"},{"location":"%E6%8E%A8%E8%8D%90/%E8%AF%A6%E8%A7%A3Twitter%20snowflake%E5%BC%80%E6%BA%90%E5%88%86%E5%B8%83%E5%BC%8F%E8%87%AA%E5%A2%9EID%E7%AE%97%E6%B3%95%EF%BC%8C%E9%99%84%E6%BC%94%E7%AE%97%E9%AA%8C%E8%AF%81%E8%BF%87%E7%A8%8B/#4snowflake","text":"\u8bf4\u660e\uff1a \u6f14\u7b97\u4f7f\u7528\u7684\u5bf9\u8c61\u5b9e\u4f8b\uff1aSnowflakeIdFactory idWorker = new SnowflakeIdFactory(1, 2); \u8fd0\u884c\u65f6\u6570\u636eworkerId\uff1d1\uff0cdatacenterId\uff1d2\uff0c\u5206\u522b\u8868\u793a\u673a\u5668\u5b9e\u4f8b\u7684\u751f\u4ea7\u8005\u7f16\u53f7\uff0c\u6570\u636e\u4e2d\u5fc3\u7f16\u53f7\uff1b sequence\uff1d0\u8868\u793a\u6bcf\u6beb\u79d2\u751f\u4ea7ID\u4ece0\u5f00\u59cb\u8ba1\u6570\u9012\u589e\uff1b \u4ee5\u4e0b\u6f14\u7b97\u57fa\u4e8e\u65f6\u95f4\u6233\uff1d1482394743339\u65f6\u523b\u8fdb\u884c\u63a8\u5bfc\u3002 \u4e00\u53e5\u8bdd\u63cf\u8ff0\uff1a\u4ee5\u4e0b\u6f14\u7b97\u6a21\u62df\u4e861482394743339\u8fd9\u4e00\u6beb\u79d2\u65f6\u523b\uff0cworkerId\uff1d1\uff0cdatacenterId\uff1d2\u7684id\u751f\u6210\u5668\uff0c\u751f\u4ea7\u7b2c\u4e00\u4e2aid\u7684\u8fc7\u7a0b\u3002 \uff08\u56fe\u7247\u539f\u521b\uff0c\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\uff0c\u753b\u56fe\u4e0d\u6613\uff0c\u8c22\u8c22\uff01\uff09 end\uff01","title":"4.snowflake\u7b97\u6cd5\u63a8\u5bfc\u548c\u6f14\u7b97\u8fc7\u7a0b"},{"location":"%E6%8E%A8%E8%8D%90/%E8%AF%A6%E8%A7%A3Twitter%20snowflake%E5%BC%80%E6%BA%90%E5%88%86%E5%B8%83%E5%BC%8F%E8%87%AA%E5%A2%9EID%E7%AE%97%E6%B3%95%EF%BC%8C%E9%99%84%E6%BC%94%E7%AE%97%E9%AA%8C%E8%AF%81%E8%BF%87%E7%A8%8B/#_1","text":"https://github.com/twitter/snowflake http://www.cnblogs.com/relucent/p/4955340.html","title":"\u53c2\u8003"}]}