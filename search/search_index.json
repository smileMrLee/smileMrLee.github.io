{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u9996\u9875 \u6211\u4eec\u6e3a\u5c0f\uff0c\u4f46\u4e0d\u5351\u8d31\uff1b\u6211\u4eec\u5e73\u51e1\uff0c\u4f46\u4e0d\u5e73\u5eb8\u3002 csdn\u535a\u5ba2 .","title":"\u9996\u9875"},{"location":"#_1","text":"\u6211\u4eec\u6e3a\u5c0f\uff0c\u4f46\u4e0d\u5351\u8d31\uff1b\u6211\u4eec\u5e73\u51e1\uff0c\u4f46\u4e0d\u5e73\u5eb8\u3002 csdn\u535a\u5ba2 .","title":"\u9996\u9875"},{"location":"\u5b66\u4e60\u8ba1\u5212/2019\u5e74\u5ea6\u5b66\u4e60\u8ba1\u5212/","text":"2019\u5e74\u5ea6\u5b66\u4e60\u8ba1\u5212 \u5f00\u6e90\u4ee3\u7801\u7814\u7a76 \u5b66\u4e60ElasticSearch \u5b66\u4e60Dubbo\u6e90\u7801 \u5b66\u4e60RocketMQ\u6e90\u7801 \u5b66\u4e60Canal mysql binlog \u8ba2\u9605\u6e90\u7801 \u5b66\u4e60Netty \u9ad8\u7ea7\u7f51\u7edc\u7f16\u7a0b\u6e90\u7801 \u5206\u5e03\u5f0f\u6280\u672f\u5b66\u4e60 \u5b66\u4e60sentinel \u9650\u6d41\u3001\u964d\u7ea7\u3001\u7194\u65ad\u4f7f\u7528\uff1b","title":"2019\u5e74\u5ea6\u5b66\u4e60\u8ba1\u5212"},{"location":"\u5b66\u4e60\u8ba1\u5212/2019\u5e74\u5ea6\u5b66\u4e60\u8ba1\u5212/#2019","text":"","title":"2019\u5e74\u5ea6\u5b66\u4e60\u8ba1\u5212"},{"location":"\u5b66\u4e60\u8ba1\u5212/2019\u5e74\u5ea6\u5b66\u4e60\u8ba1\u5212/#_1","text":"\u5b66\u4e60ElasticSearch \u5b66\u4e60Dubbo\u6e90\u7801 \u5b66\u4e60RocketMQ\u6e90\u7801 \u5b66\u4e60Canal mysql binlog \u8ba2\u9605\u6e90\u7801 \u5b66\u4e60Netty \u9ad8\u7ea7\u7f51\u7edc\u7f16\u7a0b\u6e90\u7801","title":"\u5f00\u6e90\u4ee3\u7801\u7814\u7a76"},{"location":"\u5b66\u4e60\u8ba1\u5212/2019\u5e74\u5ea6\u5b66\u4e60\u8ba1\u5212/#_2","text":"\u5b66\u4e60sentinel \u9650\u6d41\u3001\u964d\u7ea7\u3001\u7194\u65ad\u4f7f\u7528\uff1b","title":"\u5206\u5e03\u5f0f\u6280\u672f\u5b66\u4e60"},{"location":"\u603b\u7ed3/dubbo \u670d\u52a1\u6b63\u5e38\u6ce8\u518c\u548c\u6d88\u8d39\uff0c\u4f46\u8c03\u7528\u62a5\u9519No provider/","text":"\u95ee\u9898\u73b0\u8c61 dubbo \u670d\u52a1\u63d0\u4f9b\u8005\u6b63\u5e38\u6ce8\u518c\uff0c\u6d88\u8d39\u8005\u4e5f\u6b63\u5e38\u6d88\u8d39\uff0c\u5728dubbo-admin\u4e0a\u89c2\u5bdf\u6ca1\u95ee\u9898\u3002\u672c\u5730\u670d\u52a1proxy\u4e5f\u6b63\u5e38\u751f\u6210\uff0c\u4f46\u65e0\u6cd5\u8c03\u7528\u6210\u529f\u3002\u6bcf\u6b21\u8c03\u7528\u90fd\u662f\u4e0b\u9762\u7684\u9519\u8bef\u4fe1\u606f\uff1a Failed to invoke the method getAllowUrls in the service com.xxx.bss.api.AcxxxQueryApi. No provider available for the service com.xxx.bss.api.AcxxxQueryApi:dev from registry 10.0.10.21:15311 on the consumer 10.200.190.182 using the dubbo version 2.6.4. Please check if the providers have been started and registered. \u8fd9\u4e2a\u95ee\u9898\u9690\u853d\u5f88\uff0c\u5e94\u7528\u542f\u52a8\u6ca1\u95ee\u9898\uff0c\u4e5f\u65e0\u542f\u52a8\u62a5\u9519\u4fe1\u606f\uff0c\u751a\u81f3warn\u90fd\u6ca1\u6709\u3002 \u6392\u67e5\u5206\u6790 \u9879\u76ee\u5728\u6dfb\u52a0\u65b0\u7684\u4e8c\u65b9\u5305\u4e4b\u540e\uff0c\u539f\u6765\u597d\u597d\u7684dubbo\u5ffd\u7136\u5c31\u8c03\u4e0d\u901a\u4e86\u3002\u4e00\u5f00\u59cb\u4ee5\u4e3a\u53ea\u662f\u4e2a\u522b\u670d\u52a1\uff0c\u5c1d\u8bd5\u4e86\u6240\u6709dubbo\u670d\u52a1\u4e4b\u540e\uff0c\u90fd\u4e0d\u6210\u529f\u3002\u62a5\u9519\u90fd\u662f\u4e00\u6837\u3002\u68c0\u67e5\u4e86dubbo admin\uff0c\u53d1\u73b0\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u90fd\u6b63\u5e38\u3002 \u4e8e\u662f\u671d\u7740\u5305\u51b2\u7a81\u65b9\u5411\u53bb\u6392\u67e5\uff0c\u628a\u4ee3\u7801\u56de\u9000\u5230\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528dubbo\u670d\u52a1\u7684\u7248\u672c\uff0c\u4e5f\u5c31\u662f\u672a\u6dfb\u52a0\u65b0\u4e8c\u65b9\u5305\u7684\u7248\u672c\u3002 \u4e8e\u662f\u5206\u6790\u53ef\u4ee5\u8c03\u7528\u7684\u7248\u672c\u548c\u8c03\u7528\u5931\u8d25\u7684\u7248\u672c\u7684\u5305\u4f9d\u8d56\u3002 \u6700\u540e\u53d1\u73b0\uff0c\u4e0d\u80fd\u6b63\u5e38\u8c03\u7528\u7684\u4ee3\u7801\u7248\u672c\u4e2d\uff0c\u6ca1\u6709\u4f9d\u8d56netty-3.2.5.Final.jar \u8fd9\u4e2a\u5305\uff0c\u4e8e\u662f\u5c06\u8be5\u5305\u624b\u52a8\u5f3a\u5236\u4f9d\u8d56\u5230\u9879\u76ee\u4e2d\u3002\u5c31\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528\u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cdubbo \u5305\u90fd\u4f1a\u4f20\u9012\u4f9d\u8d56netty\u5305\u8fdb\u6765\u7684\uff0c\u4e3a\u4ec0\u4e48netty\u5305\u4f1a\u88ab\u5e72\u6389\u5462\u3002\u4ed4\u7ec6\u6392\u67e5\u4ee3\u7801\u4e2d\u4e5f\u6ca1\u6709\u4efb\u4f55\u5730\u65b9\u8fdb\u884cexclusion.\u4e8e\u662f\u6000\u7591\u662fmaven \u4ef2\u88c1\u7684\u65f6\u5019\uff0c\u9009\u7528\u4e86\u4e8c\u65b9\u5305\u4f9d\u8d56\u8fdb\u6765\u7684\u5305\u4e2d\u67d0\u4e2a\u5305\u6070\u5de7\u628anetty\u5305\u7ed9\u5e72\u6389\u4e86\u3002\u5bfc\u81f4jar \u5305\u4f9d\u8d56\u77ed\u8def\uff0c\u77ed\u8def\u7684\u5305\u628a\u4f9d\u8d56\u4e22\u5f03\u4e86\u3002\u4ece\u800c\u5c11\u4e86netty\u5305\u3002 \u6700\u540e\u6392\u67e5\u7ed3\u679c\u786e\u5b9e\u5982\u6b64\uff0c\u662f\u56e0\u4e3a\u6211\u65b0\u5f15\u8fdb\u6765\u7684\u4e8c\u65b9\u5305\uff0c\u5c06dubbo \u5305\u7684\u4f9d\u8d56\u5168\u90e8\u8fdb\u884cexclusion\u4e86\u3002 \u5982\u4e0b\u56fe\u662f\u5305\u7f3a\u5931\u7684\u8bc1\u636e\uff1a netty \u5305\u88ab\u4e8c\u65b9\u5305\u6392\u9664\u4f9d\u8d56\u7684\u8bc1\u636e\uff1a \u89e3\u51b3\u65b9\u6cd5 <dependency> <groupId>org.jboss.netty</groupId> <artifactId>netty</artifactId> <version>${netty_version}</version> </dependency> <netty_version>3.2.5.Final</netty_version> \u5373\u53ef\u89e3\u51b3\u3002\u4e0d\u540c\u7684dubbo \u7248\u672c\u6362\u6210\u5bf9\u5e94\u7684netty\u7248\u672c\u5373\u53ef\u3002 \u603b\u7ed3 \u867d\u7136\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u4f46\u662f\u6709\u5fc5\u8981\u8bf4\u4e24\u53e5\u3002 1.\u4e8c\u65b9\u5305\u60f3\u8981\u51cf\u5c11\u8fdb\u5165\u4e1a\u52a1\u65b9\u4ee3\u7801\uff0cexclusion\u662f\u597d\u7684\u60f3\u6cd5\uff0c\u4f46exclusion\u4e0d\u591f\u5f7b\u5e95\u3002\u5982\u679c\u76f4\u63a5exclusion\u6389dubbo\uff0c\u5c31\u4e0d\u4f1a\u9020\u6210maven\u4ef2\u88c1\u9009\u7528\u7f3a\u5931\u4f9d\u8d56\u7684dubbo\u3002 2.dubbo \u62a5\u9519\u4e5f\u4e0d\u591f\u53cb\u597d\uff0c\u5f88\u660e\u663e\u8fd9\u79cd\u5f02\u5e38\u5e76\u4e0d\u662f\u56e0\u4e3a\u6ca1\u6709provider\u9020\u6210\u7684\uff0c\u800c\u662f\u5e95\u5c42\u7f51\u7edc\u6846\u67b6\u5305\u4e22\u5931\u4e86\u3002\u5f02\u5e38\u5e94\u8be5\u66f4\u52a0\u7ec6\u5316\u548c\u8be6\u5c3d\u3002","title":"dubbo \u670d\u52a1\u6b63\u5e38\u6ce8\u518c\u548c\u6d88\u8d39\uff0c\u4f46\u8c03\u7528\u62a5\u9519No provider"},{"location":"\u603b\u7ed3/dubbo \u670d\u52a1\u6b63\u5e38\u6ce8\u518c\u548c\u6d88\u8d39\uff0c\u4f46\u8c03\u7528\u62a5\u9519No provider/#_1","text":"dubbo \u670d\u52a1\u63d0\u4f9b\u8005\u6b63\u5e38\u6ce8\u518c\uff0c\u6d88\u8d39\u8005\u4e5f\u6b63\u5e38\u6d88\u8d39\uff0c\u5728dubbo-admin\u4e0a\u89c2\u5bdf\u6ca1\u95ee\u9898\u3002\u672c\u5730\u670d\u52a1proxy\u4e5f\u6b63\u5e38\u751f\u6210\uff0c\u4f46\u65e0\u6cd5\u8c03\u7528\u6210\u529f\u3002\u6bcf\u6b21\u8c03\u7528\u90fd\u662f\u4e0b\u9762\u7684\u9519\u8bef\u4fe1\u606f\uff1a Failed to invoke the method getAllowUrls in the service com.xxx.bss.api.AcxxxQueryApi. No provider available for the service com.xxx.bss.api.AcxxxQueryApi:dev from registry 10.0.10.21:15311 on the consumer 10.200.190.182 using the dubbo version 2.6.4. Please check if the providers have been started and registered. \u8fd9\u4e2a\u95ee\u9898\u9690\u853d\u5f88\uff0c\u5e94\u7528\u542f\u52a8\u6ca1\u95ee\u9898\uff0c\u4e5f\u65e0\u542f\u52a8\u62a5\u9519\u4fe1\u606f\uff0c\u751a\u81f3warn\u90fd\u6ca1\u6709\u3002","title":"\u95ee\u9898\u73b0\u8c61"},{"location":"\u603b\u7ed3/dubbo \u670d\u52a1\u6b63\u5e38\u6ce8\u518c\u548c\u6d88\u8d39\uff0c\u4f46\u8c03\u7528\u62a5\u9519No provider/#_2","text":"\u9879\u76ee\u5728\u6dfb\u52a0\u65b0\u7684\u4e8c\u65b9\u5305\u4e4b\u540e\uff0c\u539f\u6765\u597d\u597d\u7684dubbo\u5ffd\u7136\u5c31\u8c03\u4e0d\u901a\u4e86\u3002\u4e00\u5f00\u59cb\u4ee5\u4e3a\u53ea\u662f\u4e2a\u522b\u670d\u52a1\uff0c\u5c1d\u8bd5\u4e86\u6240\u6709dubbo\u670d\u52a1\u4e4b\u540e\uff0c\u90fd\u4e0d\u6210\u529f\u3002\u62a5\u9519\u90fd\u662f\u4e00\u6837\u3002\u68c0\u67e5\u4e86dubbo admin\uff0c\u53d1\u73b0\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u90fd\u6b63\u5e38\u3002 \u4e8e\u662f\u671d\u7740\u5305\u51b2\u7a81\u65b9\u5411\u53bb\u6392\u67e5\uff0c\u628a\u4ee3\u7801\u56de\u9000\u5230\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528dubbo\u670d\u52a1\u7684\u7248\u672c\uff0c\u4e5f\u5c31\u662f\u672a\u6dfb\u52a0\u65b0\u4e8c\u65b9\u5305\u7684\u7248\u672c\u3002 \u4e8e\u662f\u5206\u6790\u53ef\u4ee5\u8c03\u7528\u7684\u7248\u672c\u548c\u8c03\u7528\u5931\u8d25\u7684\u7248\u672c\u7684\u5305\u4f9d\u8d56\u3002 \u6700\u540e\u53d1\u73b0\uff0c\u4e0d\u80fd\u6b63\u5e38\u8c03\u7528\u7684\u4ee3\u7801\u7248\u672c\u4e2d\uff0c\u6ca1\u6709\u4f9d\u8d56netty-3.2.5.Final.jar \u8fd9\u4e2a\u5305\uff0c\u4e8e\u662f\u5c06\u8be5\u5305\u624b\u52a8\u5f3a\u5236\u4f9d\u8d56\u5230\u9879\u76ee\u4e2d\u3002\u5c31\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528\u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cdubbo \u5305\u90fd\u4f1a\u4f20\u9012\u4f9d\u8d56netty\u5305\u8fdb\u6765\u7684\uff0c\u4e3a\u4ec0\u4e48netty\u5305\u4f1a\u88ab\u5e72\u6389\u5462\u3002\u4ed4\u7ec6\u6392\u67e5\u4ee3\u7801\u4e2d\u4e5f\u6ca1\u6709\u4efb\u4f55\u5730\u65b9\u8fdb\u884cexclusion.\u4e8e\u662f\u6000\u7591\u662fmaven \u4ef2\u88c1\u7684\u65f6\u5019\uff0c\u9009\u7528\u4e86\u4e8c\u65b9\u5305\u4f9d\u8d56\u8fdb\u6765\u7684\u5305\u4e2d\u67d0\u4e2a\u5305\u6070\u5de7\u628anetty\u5305\u7ed9\u5e72\u6389\u4e86\u3002\u5bfc\u81f4jar \u5305\u4f9d\u8d56\u77ed\u8def\uff0c\u77ed\u8def\u7684\u5305\u628a\u4f9d\u8d56\u4e22\u5f03\u4e86\u3002\u4ece\u800c\u5c11\u4e86netty\u5305\u3002 \u6700\u540e\u6392\u67e5\u7ed3\u679c\u786e\u5b9e\u5982\u6b64\uff0c\u662f\u56e0\u4e3a\u6211\u65b0\u5f15\u8fdb\u6765\u7684\u4e8c\u65b9\u5305\uff0c\u5c06dubbo \u5305\u7684\u4f9d\u8d56\u5168\u90e8\u8fdb\u884cexclusion\u4e86\u3002 \u5982\u4e0b\u56fe\u662f\u5305\u7f3a\u5931\u7684\u8bc1\u636e\uff1a netty \u5305\u88ab\u4e8c\u65b9\u5305\u6392\u9664\u4f9d\u8d56\u7684\u8bc1\u636e\uff1a","title":"\u6392\u67e5\u5206\u6790"},{"location":"\u603b\u7ed3/dubbo \u670d\u52a1\u6b63\u5e38\u6ce8\u518c\u548c\u6d88\u8d39\uff0c\u4f46\u8c03\u7528\u62a5\u9519No provider/#_3","text":"<dependency> <groupId>org.jboss.netty</groupId> <artifactId>netty</artifactId> <version>${netty_version}</version> </dependency> <netty_version>3.2.5.Final</netty_version> \u5373\u53ef\u89e3\u51b3\u3002\u4e0d\u540c\u7684dubbo \u7248\u672c\u6362\u6210\u5bf9\u5e94\u7684netty\u7248\u672c\u5373\u53ef\u3002","title":"\u89e3\u51b3\u65b9\u6cd5"},{"location":"\u603b\u7ed3/dubbo \u670d\u52a1\u6b63\u5e38\u6ce8\u518c\u548c\u6d88\u8d39\uff0c\u4f46\u8c03\u7528\u62a5\u9519No provider/#_4","text":"\u867d\u7136\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u4f46\u662f\u6709\u5fc5\u8981\u8bf4\u4e24\u53e5\u3002 1.\u4e8c\u65b9\u5305\u60f3\u8981\u51cf\u5c11\u8fdb\u5165\u4e1a\u52a1\u65b9\u4ee3\u7801\uff0cexclusion\u662f\u597d\u7684\u60f3\u6cd5\uff0c\u4f46exclusion\u4e0d\u591f\u5f7b\u5e95\u3002\u5982\u679c\u76f4\u63a5exclusion\u6389dubbo\uff0c\u5c31\u4e0d\u4f1a\u9020\u6210maven\u4ef2\u88c1\u9009\u7528\u7f3a\u5931\u4f9d\u8d56\u7684dubbo\u3002 2.dubbo \u62a5\u9519\u4e5f\u4e0d\u591f\u53cb\u597d\uff0c\u5f88\u660e\u663e\u8fd9\u79cd\u5f02\u5e38\u5e76\u4e0d\u662f\u56e0\u4e3a\u6ca1\u6709provider\u9020\u6210\u7684\uff0c\u800c\u662f\u5e95\u5c42\u7f51\u7edc\u6846\u67b6\u5305\u4e22\u5931\u4e86\u3002\u5f02\u5e38\u5e94\u8be5\u66f4\u52a0\u7ec6\u5316\u548c\u8be6\u5c3d\u3002","title":"\u603b\u7ed3"},{"location":"\u603b\u7ed3/spring boot\u5e94\u7528\u65e0\u6cd5\u542f\u52a8\uff0c\u4e5f\u6ca1\u62a5\u9519\u4fe1\u606f/","text":"[\u603b\u7ed3]spring boot\u5e94\u7528\u65e0\u6cd5\u542f\u52a8\uff0c\u4e5f\u6ca1\u62a5\u9519\u4fe1\u606f \u95ee\u9898\u63cf\u8ff0 springboot\u5e94\u7528\u6628\u5929\u8fd8\u80fd\u6b63\u5e38\u597d\u597d\u542f\u52a8\uff0c\u5ffd\u7136\u4e4b\u95f4\u5c31\u542f\u52a8\u4e0d\u4e86\u4e86\uff0c\u4e5f\u4e0d\u62a5\u4efb\u4f55\u9519\u8bef\uff0c\u53ea\u89c1\u5230\u63a7\u5236\u53f0\u8f93\u51fa\"Stopping service\".\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u8fde\u7eed\u51fa\u73b0\u8fc73\u6b21\u4e86\uff0c\u8fd9\u6b21\u72e0\u4e0b\u51b3\u5fc3\u8981\u627e\u51fa\u4e2a\u6240\u4ee5\u7136\u3002 \u5728\u6b64\uff0c\u5148\u8bf4\u4e0b\u4e2a\u4eba\u7ecf\u5386\u7684\u524d\u9762\u4e09\u6b21\u65e0\u6cd5\u542f\u52a8\u6ca1\u6709\u62a5\u9519\u3002 \u4e3e\u4f8b\u8bf4\u660e \u7b2c\u4e00\u6b21\uff1a\u548c\u73af\u5883\u6709\u5173 \u5f53\u67d0\u4e2a\u4e2d\u95f4\u4ef6\u65e0\u6cd5\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7684\u540c\u4e8b\u5728try catch\u4e2d\u9519\u8bef\u7684\u4f7f\u7528\u4e86System.exit()\u5bfc\u81f4\u5f02\u5e38; java try{ \u2026\u2026 }catch(Exception e){ System.exit(); log.error(e) } \u7b2c\u4e8c\u6b21\uff1a\u548cjar\u5305\u51b2\u7a81\u6709\u5173 \u5f53\u65f6\u9879\u76ee\u4e2d\u7528\u5230\u4e86hbase\uff0c\u9700\u8981\u96c6\u6210hbase\uff0c\u6240\u4ee5\u5f15\u5165\u4e86hbase-client 2.1.0 \u7248\u672c\uff0c\u4f46\u662f\u8be5\u5305\u5bf9curator\u5305\u7248\u672c\u6709\u8981\u6c42\uff0c\u5bfc\u81f4\u548c\u5176\u4ed6\u7ec4\u4ef6\u7684curator\u7248\u672c\u51b2\u7a81\uff0c\u6700\u7ec8\u7a0b\u5e8f\u8f93\u51fa\u7684\u4fe1\u606f\u4e2d\uff0c\u53ea\u6709\u51e0\u884cINFO\u65e5\u5fd7\u3002 2019-09-12 10:39:30.350 INFO 37343 --- [5311@0x040943a6] org.apache.zookeeper.ZooKeeper : Session: 0x16b72a291d73e73 closed 2019-09-12 10:39:30.351 INFO 37343 --- [3a6-EventThread] org.apache.zookeeper.ClientCnxn : EventThread shut down for session: 0x16b72a291d73e73 2019-09-12 10:39:30.566 INFO 37343 --- [tor-Framework-0] o.a.c.f.imps.CuratorFrameworkImpl : backgroundOperationsLoop exiting \u6700\u7ec8\u901a\u8fc7jar\u5305\u51b2\u7a81\uff0c\u4e0d\u65ad\u8bd5\u9519\uff0c\u4e0d\u65ad\u5bf9\u6bd4\u548c\u5176\u4ed6\u80fd\u6b63\u5e38\u542f\u52a8\u5e94\u7528\u7684\u4f9d\u8d56\uff0c\u624d\u89e3\u51b3\u51b2\u7a81\u3002 \u7b2c\u4e09\u6b21\uff1a\u548c\u4ee3\u7801\u7f16\u5199\u6709\u5173 \u4e5f\u5c31\u662f\u521a\u521a\u53d1\u751f\u7684\uff0c\u8ba9\u7b14\u8005\u51b3\u5b9a\u72e0\u4e0b\u5fc3\u6316\u6398\"\u65e0\u62a5\u9519\u4fe1\u606f\"\u7684\u7f6a\u9b41\u7978\u9996\u3002\u4e00\u5b9a\u662f\u6709\u5f02\u5e38\u7684\uff0c\u53ea\u662f\u4e0d\u77e5\u9053\u5728\u54ea\u4e2a\u73af\u8282\u4e22\u5931\u4e86\u3002 \u5148\u8bf4\u7ed3\u8bba\uff1a\u672c\u6b21\"\u65e0\u7f18\u65e0\u6545\"\u65e0\u6cd5\u542f\u52a8\u7684\u539f\u56e0\uff0c\u5176\u5b9e\u662f\u6628\u5929\u7b14\u8005\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u4ee3\u7801\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2adubbo\u670d\u52a1\u4f9d\u8d56\uff0c\u4f46\u662f\u6ca1\u6709\u5728dubbo xml\u6587\u4ef6\u4e2d\u6ce8\u518creference\uff0c\u6240\u4ee5\u5bfc\u81f4\u4f9d\u8d56\u7f3a\u5931\uff0c\u6700\u7ec8\u5e94\u7528\u8d77\u4e0d\u6765\u3002 \u5f53\u7136\uff0c\u548c\u524d\u9762\u51e0\u6b21\u4e00\u6837\uff0c\u63a7\u5236\u53f0\uff0c\u65e5\u5fd7\u6587\u4ef6\uff0c\u6ca1\u6709\u4efb\u4f55\u5730\u65b9\u6709\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u3002 \u6392\u67e5\u5206\u6790 \u6839\u636e\u4e0b\u9762\u8fd9\u7bc7\u6587\u7ae0\uff0c\u7ed9\u51fa\u4e86\u63d0\u793a\u3002 \u5f15\u7528\uff1aSpringBoot\u542f\u52a8\u9879\u76ee\u540e\u81ea\u52a8\u5173\u95ed: https://blog.csdn.net/laoxilaoxi_/article/details/83654186 \u5148\u8bf4\u7ed3\u8bba\uff1a\u4e0d\u662f\u6ca1\u6709\u8f93\u51fa\u5f02\u5e38\uff0c\u662f\u65b0\u7248\u672c\u7684Spring boot \u5728\u51fa\u9519\u540e\uff0c\u4e0d\u518d\u8f93\u51fa\u9519\u8bef\u5230\u63a7\u5236\u53f0\u4e86\uff0c\u800c\u662f\u5c06\u5f02\u5e38\u5728Application main\u65b9\u6cd5\u4e2d\u629b\u51fa\u3002 \u5212\u91cd\u70b9\uff1a\u65b0\u7248\u672cSpring boot 2.x \u4e0d\u518d\u8f93\u51fa\u9519\u8bef\u5230\u65e5\u5fd7\u4e2d\uff0c\u5c06\u5f02\u5e38\u5728Application main\u65b9\u6cd5\u4e2d\u629b\u51fa\u3002 \u800c\u4f4e\u7248\u672cSpring boot 1.3.x\uff0c1.4.x\u7248\u672c\uff0c\u662f\u4f1a\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u9519\u8bef\u7684\u3002 \u89e3\u51b3\u65b9\u6cd5 \u89e3\u51b3\uff1a \u6709\u4e86\u4e0a\u9762\u7684\u7075\u611f\uff0c\u90a3\u597d\u529e\u6211\u5728main \u542f\u52a8\u65b9\u6cd5\u4e2d\u6355\u6349\uff0c\u81ea\u5df1\u6253\u5370\uff0c\u4e0d\u5c31\u80fd\u770b\u51fa\u6765\u9519\u8bef\u539f\u56e0\u4e86\u5417\uff1f \u4e8b\u5b9e\u4e0a\uff0c\u786e\u5b9e\u5e94\u8be5\u5982\u6b64\u3002 \u6700\u540e\uff0c\u7b14\u8005\u5728main\u65b9\u6cd5\u542f\u52a8spring boot \u65f6\uff0c\u8fdb\u884c\u4e00\u573a\u6355\u6349\u5e76\u8f93\u51fa\u65e5\u5fd7\u3002\u7136\u540e\u9519\u8bef\u5c31\u4e00\u76ee\u4e86\u7136\u4e86\u3002 @Slf4j @ImportResource(\"classpath*:spring-*.xml\") @SpringBootApplication public class SupportApplication { public static void main(String[] args) { try { SpringApplication.run(SupportApplication.class, args); System.out.println(\"Server startup done.\"); }catch (Exception e){ log.error(\"\u670d\u52a1xxx-support\u542f\u52a8\u62a5\u9519\", e); } } } \u6700\u7ec8\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u4e45\u8fdd\u7684\u5f02\u5e38\u4fe1\u606f\uff1a 2019-09-12 11:18:18.799 ERROR 38420 --- [ main] c.c.xxx.support.xxxSupportApplication : \u670d\u52a1xxx-support\u542f\u52a8\u62a5\u9519 org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'xxxController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'xxxCoreService': Unsatisfied dependency expressed through field 'xxxSpotService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.test.xxx.api.service.XxxSpotService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)} at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:321) ~[spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.0.10.RELEASE.jar:5.0.10 \u6269\u5c55\u9a8c\u8bc1 \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u9a8c\u8bc1\u4e0b\u4f4e\u7248\u672cSpring boot 1.3.x\uff0c1.4.x\u7248\u672c\uff0c\u662f\u5426\u4f1a\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u9519\u8bef\u3002 \u4e0b\u9762\u7684\u5b9e\u9a8c\u662f\u57fa\u4e8espring boot 1.4.7\u7248\u672c\u8fdb\u884c\u7684\uff0c\u4f4e\u7248\u672c\u7684spring boot \u90fd\u4f1a\u5728\u63a7\u5236\u53f0\u6216\u65e5\u5fd7\u6587\u4ef6\u4e2d\u5148\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u518d\u9000\u51fa\u542f\u52a8main\u65b9\u6cd5\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4ece\u4f4e\u7248\u672c\u5347\u5230\u9ad8\u7248\u672c\u7684\uff0c\u8bf7\u5728main\u542f\u52a8\u65f6\uff0c\u81ea\u884c\u6355\u6349\u5f02\u5e38\u3002 @Controller @RequestMapping(\"/test\") public class TestErrorController { /** * 1.\u5236\u9020\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684Spring bean\uff1b * 2.\u5e76\u5bf9\u5176\u8fdb\u884c\u4f9d\u8d56\uff1b * 3.\u542f\u52a8\u5e94\u7528XxxApplication\uff1b * 4.\u63a7\u5236\u53f0\u6709\u660e\u663e\u62a5\u9519\u4fe1\u606f\u8f93\u51fa\uff1b * 2019-09-12 10:44:38.014 INFO 37477 --- [ main] o.apache.catalina.core.StandardService : Stopping service [Tomcat] * 2019-09-12 10:44:38.026 INFO 37477 --- [ main] utoConfigurationReportLoggingInitializer : * * <p>Error starting ApplicationContext. To display the auto-configuration report re-run your * application with 'debug' enabled. 2019-09-12 10:44:38.155 ERROR 37477 --- [ main] o.s.b.d.LoggingFailureAnalysisReporter : * <p>*************************** APPLICATION FAILED TO START *************************** * <p>Description: * <p>A component required a bean of type * 'cn.test.lee.service.TestErrorService' that could not be found. * <p>Action: * <p>Consider defining a bean of type 'cn.test.service.TestErrorService' * in your configuration. * <p>Disconnected from the target VM, address: '127.0.0.1:57403', transport: 'socket' * <p>Process finished with exit code 1 */ @Resource private TestErrorService testErrorService; public String testError(){ testErrorService.testError(); return \"\u542f\u52a8\u5c31\u62a5\u9519\u4e86\uff01\"; } }","title":"Spring boot\u5e94\u7528\u65e0\u6cd5\u542f\u52a8\uff0c\u4e5f\u6ca1\u62a5\u9519\u4fe1\u606f"},{"location":"\u603b\u7ed3/spring boot\u5e94\u7528\u65e0\u6cd5\u542f\u52a8\uff0c\u4e5f\u6ca1\u62a5\u9519\u4fe1\u606f/#spring-boot","text":"","title":"[\u603b\u7ed3]spring boot\u5e94\u7528\u65e0\u6cd5\u542f\u52a8\uff0c\u4e5f\u6ca1\u62a5\u9519\u4fe1\u606f"},{"location":"\u603b\u7ed3/spring boot\u5e94\u7528\u65e0\u6cd5\u542f\u52a8\uff0c\u4e5f\u6ca1\u62a5\u9519\u4fe1\u606f/#_1","text":"springboot\u5e94\u7528\u6628\u5929\u8fd8\u80fd\u6b63\u5e38\u597d\u597d\u542f\u52a8\uff0c\u5ffd\u7136\u4e4b\u95f4\u5c31\u542f\u52a8\u4e0d\u4e86\u4e86\uff0c\u4e5f\u4e0d\u62a5\u4efb\u4f55\u9519\u8bef\uff0c\u53ea\u89c1\u5230\u63a7\u5236\u53f0\u8f93\u51fa\"Stopping service\".\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u8fde\u7eed\u51fa\u73b0\u8fc73\u6b21\u4e86\uff0c\u8fd9\u6b21\u72e0\u4e0b\u51b3\u5fc3\u8981\u627e\u51fa\u4e2a\u6240\u4ee5\u7136\u3002 \u5728\u6b64\uff0c\u5148\u8bf4\u4e0b\u4e2a\u4eba\u7ecf\u5386\u7684\u524d\u9762\u4e09\u6b21\u65e0\u6cd5\u542f\u52a8\u6ca1\u6709\u62a5\u9519\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"\u603b\u7ed3/spring boot\u5e94\u7528\u65e0\u6cd5\u542f\u52a8\uff0c\u4e5f\u6ca1\u62a5\u9519\u4fe1\u606f/#_2","text":"\u7b2c\u4e00\u6b21\uff1a\u548c\u73af\u5883\u6709\u5173 \u5f53\u67d0\u4e2a\u4e2d\u95f4\u4ef6\u65e0\u6cd5\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7684\u540c\u4e8b\u5728try catch\u4e2d\u9519\u8bef\u7684\u4f7f\u7528\u4e86System.exit()\u5bfc\u81f4\u5f02\u5e38; java try{ \u2026\u2026 }catch(Exception e){ System.exit(); log.error(e) } \u7b2c\u4e8c\u6b21\uff1a\u548cjar\u5305\u51b2\u7a81\u6709\u5173 \u5f53\u65f6\u9879\u76ee\u4e2d\u7528\u5230\u4e86hbase\uff0c\u9700\u8981\u96c6\u6210hbase\uff0c\u6240\u4ee5\u5f15\u5165\u4e86hbase-client 2.1.0 \u7248\u672c\uff0c\u4f46\u662f\u8be5\u5305\u5bf9curator\u5305\u7248\u672c\u6709\u8981\u6c42\uff0c\u5bfc\u81f4\u548c\u5176\u4ed6\u7ec4\u4ef6\u7684curator\u7248\u672c\u51b2\u7a81\uff0c\u6700\u7ec8\u7a0b\u5e8f\u8f93\u51fa\u7684\u4fe1\u606f\u4e2d\uff0c\u53ea\u6709\u51e0\u884cINFO\u65e5\u5fd7\u3002 2019-09-12 10:39:30.350 INFO 37343 --- [5311@0x040943a6] org.apache.zookeeper.ZooKeeper : Session: 0x16b72a291d73e73 closed 2019-09-12 10:39:30.351 INFO 37343 --- [3a6-EventThread] org.apache.zookeeper.ClientCnxn : EventThread shut down for session: 0x16b72a291d73e73 2019-09-12 10:39:30.566 INFO 37343 --- [tor-Framework-0] o.a.c.f.imps.CuratorFrameworkImpl : backgroundOperationsLoop exiting \u6700\u7ec8\u901a\u8fc7jar\u5305\u51b2\u7a81\uff0c\u4e0d\u65ad\u8bd5\u9519\uff0c\u4e0d\u65ad\u5bf9\u6bd4\u548c\u5176\u4ed6\u80fd\u6b63\u5e38\u542f\u52a8\u5e94\u7528\u7684\u4f9d\u8d56\uff0c\u624d\u89e3\u51b3\u51b2\u7a81\u3002 \u7b2c\u4e09\u6b21\uff1a\u548c\u4ee3\u7801\u7f16\u5199\u6709\u5173 \u4e5f\u5c31\u662f\u521a\u521a\u53d1\u751f\u7684\uff0c\u8ba9\u7b14\u8005\u51b3\u5b9a\u72e0\u4e0b\u5fc3\u6316\u6398\"\u65e0\u62a5\u9519\u4fe1\u606f\"\u7684\u7f6a\u9b41\u7978\u9996\u3002\u4e00\u5b9a\u662f\u6709\u5f02\u5e38\u7684\uff0c\u53ea\u662f\u4e0d\u77e5\u9053\u5728\u54ea\u4e2a\u73af\u8282\u4e22\u5931\u4e86\u3002 \u5148\u8bf4\u7ed3\u8bba\uff1a\u672c\u6b21\"\u65e0\u7f18\u65e0\u6545\"\u65e0\u6cd5\u542f\u52a8\u7684\u539f\u56e0\uff0c\u5176\u5b9e\u662f\u6628\u5929\u7b14\u8005\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u4ee3\u7801\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2adubbo\u670d\u52a1\u4f9d\u8d56\uff0c\u4f46\u662f\u6ca1\u6709\u5728dubbo xml\u6587\u4ef6\u4e2d\u6ce8\u518creference\uff0c\u6240\u4ee5\u5bfc\u81f4\u4f9d\u8d56\u7f3a\u5931\uff0c\u6700\u7ec8\u5e94\u7528\u8d77\u4e0d\u6765\u3002 \u5f53\u7136\uff0c\u548c\u524d\u9762\u51e0\u6b21\u4e00\u6837\uff0c\u63a7\u5236\u53f0\uff0c\u65e5\u5fd7\u6587\u4ef6\uff0c\u6ca1\u6709\u4efb\u4f55\u5730\u65b9\u6709\u9519\u8bef\u4fe1\u606f\u8f93\u51fa\u3002","title":"\u4e3e\u4f8b\u8bf4\u660e"},{"location":"\u603b\u7ed3/spring boot\u5e94\u7528\u65e0\u6cd5\u542f\u52a8\uff0c\u4e5f\u6ca1\u62a5\u9519\u4fe1\u606f/#_3","text":"\u6839\u636e\u4e0b\u9762\u8fd9\u7bc7\u6587\u7ae0\uff0c\u7ed9\u51fa\u4e86\u63d0\u793a\u3002 \u5f15\u7528\uff1aSpringBoot\u542f\u52a8\u9879\u76ee\u540e\u81ea\u52a8\u5173\u95ed: https://blog.csdn.net/laoxilaoxi_/article/details/83654186 \u5148\u8bf4\u7ed3\u8bba\uff1a\u4e0d\u662f\u6ca1\u6709\u8f93\u51fa\u5f02\u5e38\uff0c\u662f\u65b0\u7248\u672c\u7684Spring boot \u5728\u51fa\u9519\u540e\uff0c\u4e0d\u518d\u8f93\u51fa\u9519\u8bef\u5230\u63a7\u5236\u53f0\u4e86\uff0c\u800c\u662f\u5c06\u5f02\u5e38\u5728Application main\u65b9\u6cd5\u4e2d\u629b\u51fa\u3002 \u5212\u91cd\u70b9\uff1a\u65b0\u7248\u672cSpring boot 2.x \u4e0d\u518d\u8f93\u51fa\u9519\u8bef\u5230\u65e5\u5fd7\u4e2d\uff0c\u5c06\u5f02\u5e38\u5728Application main\u65b9\u6cd5\u4e2d\u629b\u51fa\u3002 \u800c\u4f4e\u7248\u672cSpring boot 1.3.x\uff0c1.4.x\u7248\u672c\uff0c\u662f\u4f1a\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u9519\u8bef\u7684\u3002","title":"\u6392\u67e5\u5206\u6790"},{"location":"\u603b\u7ed3/spring boot\u5e94\u7528\u65e0\u6cd5\u542f\u52a8\uff0c\u4e5f\u6ca1\u62a5\u9519\u4fe1\u606f/#_4","text":"\u89e3\u51b3\uff1a \u6709\u4e86\u4e0a\u9762\u7684\u7075\u611f\uff0c\u90a3\u597d\u529e\u6211\u5728main \u542f\u52a8\u65b9\u6cd5\u4e2d\u6355\u6349\uff0c\u81ea\u5df1\u6253\u5370\uff0c\u4e0d\u5c31\u80fd\u770b\u51fa\u6765\u9519\u8bef\u539f\u56e0\u4e86\u5417\uff1f \u4e8b\u5b9e\u4e0a\uff0c\u786e\u5b9e\u5e94\u8be5\u5982\u6b64\u3002 \u6700\u540e\uff0c\u7b14\u8005\u5728main\u65b9\u6cd5\u542f\u52a8spring boot \u65f6\uff0c\u8fdb\u884c\u4e00\u573a\u6355\u6349\u5e76\u8f93\u51fa\u65e5\u5fd7\u3002\u7136\u540e\u9519\u8bef\u5c31\u4e00\u76ee\u4e86\u7136\u4e86\u3002 @Slf4j @ImportResource(\"classpath*:spring-*.xml\") @SpringBootApplication public class SupportApplication { public static void main(String[] args) { try { SpringApplication.run(SupportApplication.class, args); System.out.println(\"Server startup done.\"); }catch (Exception e){ log.error(\"\u670d\u52a1xxx-support\u542f\u52a8\u62a5\u9519\", e); } } } \u6700\u7ec8\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u4e45\u8fdd\u7684\u5f02\u5e38\u4fe1\u606f\uff1a 2019-09-12 11:18:18.799 ERROR 38420 --- [ main] c.c.xxx.support.xxxSupportApplication : \u670d\u52a1xxx-support\u542f\u52a8\u62a5\u9519 org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'xxxController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'xxxCoreService': Unsatisfied dependency expressed through field 'xxxSpotService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.test.xxx.api.service.XxxSpotService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)} at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:321) ~[spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.0.10.RELEASE.jar:5.0.10","title":"\u89e3\u51b3\u65b9\u6cd5"},{"location":"\u603b\u7ed3/spring boot\u5e94\u7528\u65e0\u6cd5\u542f\u52a8\uff0c\u4e5f\u6ca1\u62a5\u9519\u4fe1\u606f/#_5","text":"\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u9a8c\u8bc1\u4e0b\u4f4e\u7248\u672cSpring boot 1.3.x\uff0c1.4.x\u7248\u672c\uff0c\u662f\u5426\u4f1a\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u9519\u8bef\u3002 \u4e0b\u9762\u7684\u5b9e\u9a8c\u662f\u57fa\u4e8espring boot 1.4.7\u7248\u672c\u8fdb\u884c\u7684\uff0c\u4f4e\u7248\u672c\u7684spring boot \u90fd\u4f1a\u5728\u63a7\u5236\u53f0\u6216\u65e5\u5fd7\u6587\u4ef6\u4e2d\u5148\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u518d\u9000\u51fa\u542f\u52a8main\u65b9\u6cd5\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4ece\u4f4e\u7248\u672c\u5347\u5230\u9ad8\u7248\u672c\u7684\uff0c\u8bf7\u5728main\u542f\u52a8\u65f6\uff0c\u81ea\u884c\u6355\u6349\u5f02\u5e38\u3002 @Controller @RequestMapping(\"/test\") public class TestErrorController { /** * 1.\u5236\u9020\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684Spring bean\uff1b * 2.\u5e76\u5bf9\u5176\u8fdb\u884c\u4f9d\u8d56\uff1b * 3.\u542f\u52a8\u5e94\u7528XxxApplication\uff1b * 4.\u63a7\u5236\u53f0\u6709\u660e\u663e\u62a5\u9519\u4fe1\u606f\u8f93\u51fa\uff1b * 2019-09-12 10:44:38.014 INFO 37477 --- [ main] o.apache.catalina.core.StandardService : Stopping service [Tomcat] * 2019-09-12 10:44:38.026 INFO 37477 --- [ main] utoConfigurationReportLoggingInitializer : * * <p>Error starting ApplicationContext. To display the auto-configuration report re-run your * application with 'debug' enabled. 2019-09-12 10:44:38.155 ERROR 37477 --- [ main] o.s.b.d.LoggingFailureAnalysisReporter : * <p>*************************** APPLICATION FAILED TO START *************************** * <p>Description: * <p>A component required a bean of type * 'cn.test.lee.service.TestErrorService' that could not be found. * <p>Action: * <p>Consider defining a bean of type 'cn.test.service.TestErrorService' * in your configuration. * <p>Disconnected from the target VM, address: '127.0.0.1:57403', transport: 'socket' * <p>Process finished with exit code 1 */ @Resource private TestErrorService testErrorService; public String testError(){ testErrorService.testError(); return \"\u542f\u52a8\u5c31\u62a5\u9519\u4e86\uff01\"; } }","title":"\u6269\u5c55\u9a8c\u8bc1"},{"location":"\u63a8\u8350/\u8be6\u89e3Twitter snowflake\u5f00\u6e90\u5206\u5e03\u5f0f\u81ea\u589eID\u7b97\u6cd5\uff0c\u9644\u6f14\u7b97\u9a8c\u8bc1\u8fc7\u7a0b/","text":"1.snowflake\u7b80\u4ecb \u200b \u4e92\u8054\u7f51\u5feb\u901f\u53d1\u5c55\u7684\u4eca\u5929\uff0c\u5206\u5e03\u5f0f\u5e94\u7528\u7cfb\u7edf\u5df2\u7ecf\u89c1\u602a\u4e0d\u602a\uff0c\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5404\u79cd\u5404\u6837\u7684ID\uff0c\u65e2\u7136\u662fID\u90a3\u4e48\u5fc5\u7136\u662f\u8981\u4fdd\u8bc1\u5168\u5c40\u552f\u4e00\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u4e0d\u540c\u5f53\u4e1a\u52a1\u8fd8\u9700\u8981\u4e0d\u540c\u7684\u7279\u6027\uff0c\u6bd4\u5982\u50cf\u5e76\u53d1\u5de8\u5927\u7684\u4e1a\u52a1\u8981\u6c42ID\u751f\u6210\u6548\u7387\u9ad8\uff0c\u541e\u5410\u5927\uff1b\u6bd4\u5982\u67d0\u4e9b\u94f6\u884c\u7c7b\u4e1a\u52a1\uff0c\u9700\u8981\u6309\u6bcf\u65e5\u65e5\u671f\u5236\u5b9a\u4ea4\u6613\u6d41\u6c34\u53f7\uff1b\u53c8\u6bd4\u5982\u6211\u4eec\u5e0c\u671b\u7528\u6237\u7684ID\u662f\u968f\u673a\u7684\uff0c\u65e0\u5e8f\u7684\uff0c\u7eaf\u6570\u5b57\u7684\uff0c\u4e14\u4f4d\u6570\u957f\u5ea6\u662f\u5c0f\u4e8e10\u4f4d\u7684\u3002\u7b49\u7b49\uff0c\u4e0d\u540c\u7684\u4e1a\u52a1\u573a\u666f\u9700\u8981\u7684ID\u7279\u6027\u5404\u4e0d\u4e00\u6837\uff0c\u4e8e\u662f\uff0c\u884d\u751f\u4e86\u5404\u79cdID\u751f\u6210\u5668\uff0c\u4f46\u5927\u591a\u6570\u5229\u7528\u6570\u636e\u5e93\u63a7\u5236ID\u7684\u751f\u6210\uff0c\u6027\u80fd\u53d7\u6570\u636e\u5e93\u5e76\u53d1\u80fd\u529b\u9650\u5236\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u6b3e\u4e0d\u9700\u8981\u4f9d\u8d56\u4efb\u4f55\u4e2d\u95f4\u4ef6\uff08\u5982\u6570\u636e\u5e93\uff0c\u5206\u5e03\u5f0f\u7f13\u5b58\u670d\u52a1\u7b49\uff09\u7684ID\u751f\u6210\u5668\u5462\uff1f\u672c\u7740\u53d6\u4e4b\u4e8e\u5f00\u6e90\uff0c\u7528\u4e4b\u4e8e\u5f00\u6e90\u7684\u539f\u5219\uff0c\u4eca\u5929\uff0c\u7279\u6b64\u4ecb\u7ecdTwitter\u5f00\u6e90\u7684\u4e00\u6b3e\u5206\u5e03\u5f0f\u81ea\u589eID\u7b97\u6cd5snowflake\uff0c\u5e76\u9644\u4e0a\u7b97\u6cd5\u539f\u7406\u63a8\u5bfc\u548c\u6f14\u7b97\u8fc7\u7a0b\uff01 snowflake\u7b97\u6cd5\u662f\u4e00\u6b3e\u672c\u5730\u751f\u6210\u7684\uff08ID\u751f\u6210\u8fc7\u7a0b\u4e0d\u4f9d\u8d56\u4efb\u4f55\u4e2d\u95f4\u4ef6\uff0c\u65e0\u7f51\u7edc\u901a\u4fe1\uff09\uff0c\u4fdd\u8bc1ID\u5168\u5c40\u552f\u4e00\uff0c\u5e76\u4e14ID\u603b\u4f53\u6709\u5e8f\u9012\u589e\uff0c\u6027\u80fd\u6bcf\u79d2\u751f\u6210300w\uff0b\u3002 2.snowflake\u7b97\u6cd5\u539f\u7406 snowflake\u751f\u4ea7\u7684ID\u662f\u4e00\u4e2a18\u4f4d\u7684long\u578b\u6570\u5b57\uff0c\u4e8c\u8fdb\u5236\u7ed3\u6784\u8868\u793a\u5982\u4e0b(\u6bcf\u90e8\u5206\u7528-\u5206\u5f00): 0 - 00000000 00000000 00000000 00000000 00000000 0 - 00000 - 00000 - 00000000 0000 \u7b2c\u4e00\u4f4d\u672a\u4f7f\u7528\uff0c\u63a5\u4e0b\u6765\u768441\u4f4d\u4e3a\u6beb\u79d2\u7ea7\u65f6\u95f4(41\u4f4d\u7684\u957f\u5ea6\u53ef\u4ee5\u4f7f\u752869\u5e74\uff0c\u4ece1970-01-01 08:00:00)\uff0c\u7136\u540e\u662f5\u4f4ddatacenterId\uff08\u6700\u5927\u652f\u63012^5\uff1d32\u4e2a\uff0c\u4e8c\u8fdb\u5236\u8868\u793a\u4ece00000-11111\uff0c\u4e5f\u5373\u662f\u5341\u8fdb\u52360-31\uff09\uff0c\u548c5\u4f4dworkerId\uff08\u6700\u5927\u652f\u63012^5\uff1d32\u4e2a\uff0c\u539f\u7406\u540cdatacenterId\uff09\uff0c\u6240\u4ee5datacenterId*workerId\u6700\u591a\u652f\u6301\u90e8\u7f721024\u4e2a\u8282\u70b9\uff0c\u6700\u540e12\u4f4d\u662f\u6beb\u79d2\u5185\u7684\u8ba1\u6570\uff0812\u4f4d\u7684\u8ba1\u6570\u987a\u5e8f\u53f7\u652f\u6301\u6bcf\u4e2a\u8282\u70b9\u6bcf\u6beb\u79d2\u4ea7\u751f2^12\uff1d4096\u4e2aID\u5e8f\u53f7\uff09. \u6240\u6709\u4f4d\u6570\u52a0\u8d77\u6765\u517164\u4f4d\uff0c\u6070\u597d\u662f\u4e00\u4e2aLong\u578b\uff08\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a18\uff09. \u5355\u53f0\u673a\u5668\u5b9e\u4f8b\uff0c\u901a\u8fc7\u65f6\u95f4\u6233\u4fdd\u8bc1\u524d41\u4f4d\u662f\u552f\u4e00\u7684\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u591a\u53f0\u673a\u5668\u5b9e\u4f8b\u4e0b\uff0c\u901a\u8fc7\u5bf9\u6bcf\u4e2a\u673a\u5668\u5b9e\u4f8b\u5206\u914d\u4e0d\u540c\u7684datacenterId\u548cworkerId\u907f\u514d\u4e2d\u95f4\u768410\u4f4d\u78b0\u649e\u3002\u6700\u540e12\u4f4d\u6bcf\u6beb\u79d2\u4ece0\u9012\u589e\u751f\u4ea7ID\uff0c\u518d\u63d0\u4e00\u6b21\uff1a\u6bcf\u6beb\u79d2\u6700\u591a\u751f\u62104096\u4e2aID\uff0c\u6bcf\u79d2\u53ef\u8fbe4096000\u4e2a\u3002\u7406\u8bba\u4e0a\uff0c\u53ea\u8981CPU\u8ba1\u7b97\u80fd\u529b\u8db3\u591f\uff0c\u5355\u673a\u6bcf\u79d2\u53ef\u751f\u4ea7400\u591a\u4e07\u4e2a\uff0c\u5b9e\u6d4b300w+\uff0c\u6548\u7387\u4e4b\u9ad8\u7531\u6b64\u53ef\u89c1\u3002 \uff08\u8be5\u8282\u6539\u7f16\u81ea\uff1ahttp://www.cnblogs.com/relucent/p/4955340.html\uff09 3.snowflake\u7b97\u6cd5\u6e90\u7801\uff08java\u7248\uff09 @ToString @Slf4j public class SnowflakeIdFactory { private final long twepoch = 1288834974657L; private final long workerIdBits = 5L; private final long datacenterIdBits = 5L; private final long maxWorkerId = -1L ^ (-1L << workerIdBits); private final long maxDatacenterId = -1L ^ (-1L << datacenterIdBits); private final long sequenceBits = 12L; private final long workerIdShift = sequenceBits; private final long datacenterIdShift = sequenceBits + workerIdBits; private final long timestampLeftShift = sequenceBits + workerIdBits + datacenterIdBits; private final long sequenceMask = -1L ^ (-1L << sequenceBits); private long workerId; private long datacenterId; private long sequence = 0L; private long lastTimestamp = -1L; public SnowflakeIdFactory(long workerId, long datacenterId) { if (workerId > maxWorkerId || workerId < 0) { throw new IllegalArgumentException(String.format(\"worker Id can't be greater than %d or less than 0\", maxWorkerId)); } if (datacenterId > maxDatacenterId || datacenterId < 0) { throw new IllegalArgumentException(String.format(\"datacenter Id can't be greater than %d or less than 0\", maxDatacenterId)); } this.workerId = workerId; this.datacenterId = datacenterId; } public synchronized long nextId() { long timestamp = timeGen(); if (timestamp < lastTimestamp) { //\u670d\u52a1\u5668\u65f6\u949f\u88ab\u8c03\u6574\u4e86,ID\u751f\u6210\u5668\u505c\u6b62\u670d\u52a1. throw new RuntimeException(String.format(\"Clock moved backwards. Refusing to generate id for %d milliseconds\", lastTimestamp - timestamp)); } if (lastTimestamp == timestamp) { sequence = (sequence + 1) & sequenceMask; if (sequence == 0) { timestamp = tilNextMillis(lastTimestamp); } } else { sequence = 0L; } lastTimestamp = timestamp; return ((timestamp - twepoch) << timestampLeftShift) | (datacenterId << datacenterIdShift) | (workerId << workerIdShift) | sequence; } protected long tilNextMillis(long lastTimestamp) { long timestamp = timeGen(); while (timestamp <= lastTimestamp) { timestamp = timeGen(); } return timestamp; } protected long timeGen() { return System.currentTimeMillis(); } public static void testProductIdByMoreThread(int dataCenterId, int workerId, int n) throws InterruptedException { List<Thread> tlist = new ArrayList<>(); Set<Long> setAll = new HashSet<>(); CountDownLatch cdLatch = new CountDownLatch(10); long start = System.currentTimeMillis(); int threadNo = dataCenterId; Map<String,SnowflakeIdFactory> idFactories = new HashMap<>(); for(int i=0;i<10;i++){ //\u7528\u7ebf\u7a0b\u540d\u79f0\u505amap key. idFactories.put(\"snowflake\"+i,new SnowflakeIdFactory(workerId, threadNo++)); } for(int i=0;i<10;i++){ Thread temp =new Thread(new Runnable() { @Override public void run() { Set<Long> setId = new HashSet<>(); SnowflakeIdFactory idWorker = idFactories.get(Thread.currentThread().getName()); for(int j=0;j<n;j++){ setId.add(idWorker.nextId()); } synchronized (setAll){ setAll.addAll(setId); log.info(\"{}\u751f\u4ea7\u4e86{}\u4e2aid,\u5e76\u6210\u529f\u52a0\u5165\u5230setAll\u4e2d.\",Thread.currentThread().getName(),n); } cdLatch.countDown(); } },\"snowflake\"+i); tlist.add(temp); } for(int j=0;j<10;j++){ tlist.get(j).start(); } cdLatch.await(); long end1 = System.currentTimeMillis() - start; log.info(\"\u5171\u8017\u65f6:{}\u6beb\u79d2,\u9884\u671f\u5e94\u8be5\u751f\u4ea7{}\u4e2aid, \u5b9e\u9645\u5408\u5e76\u603b\u8ba1\u751f\u6210ID\u4e2a\u6570:{}\",end1,10*n,setAll.size()); } public static void testProductId(int dataCenterId, int workerId, int n){ SnowflakeIdFactory idWorker = new SnowflakeIdFactory(workerId, dataCenterId); SnowflakeIdFactory idWorker2 = new SnowflakeIdFactory(workerId+1, dataCenterId); Set<Long> setOne = new HashSet<>(); Set<Long> setTow = new HashSet<>(); long start = System.currentTimeMillis(); for (int i = 0; i < n; i++) { setOne.add(idWorker.nextId());//\u52a0\u5165set } long end1 = System.currentTimeMillis() - start; log.info(\"\u7b2c\u4e00\u6279ID\u9884\u8ba1\u751f\u6210{}\u4e2a,\u5b9e\u9645\u751f\u6210{}\u4e2a<<<<*>>>>\u5171\u8017\u65f6:{}\",n,setOne.size(),end1); for (int i = 0; i < n; i++) { setTow.add(idWorker2.nextId());//\u52a0\u5165set } long end2 = System.currentTimeMillis() - start; log.info(\"\u7b2c\u4e8c\u6279ID\u9884\u8ba1\u751f\u6210{}\u4e2a,\u5b9e\u9645\u751f\u6210{}\u4e2a<<<<*>>>>\u5171\u8017\u65f6:{}\",n,setTow.size(),end2); setOne.addAll(setTow); log.info(\"\u5408\u5e76\u603b\u8ba1\u751f\u6210ID\u4e2a\u6570:{}\",setOne.size()); } public static void testPerSecondProductIdNums(){ SnowflakeIdFactory idWorker = new SnowflakeIdFactory(1, 2); long start = System.currentTimeMillis(); int count = 0; for (int i = 0; System.currentTimeMillis()-start<1000; i++,count=i) { /** \u6d4b\u8bd5\u65b9\u6cd5\u4e00: \u6b64\u7528\u6cd5\u7eaf\u7cb9\u7684\u751f\u4ea7ID,\u6bcf\u79d2\u751f\u4ea7ID\u4e2a\u6570\u4e3a300w+ */ idWorker.nextId(); /** \u6d4b\u8bd5\u65b9\u6cd5\u4e8c: \u5728log\u4e2d\u6253\u5370,\u540c\u65f6\u83b7\u53d6ID,\u6b64\u7528\u6cd5\u751f\u4ea7ID\u7684\u80fd\u529b\u53d7\u9650\u4e8elog.error()\u7684\u541e\u5410\u80fd\u529b. * \u6bcf\u79d2\u5f98\u5f8a\u572810\u4e07\u5de6\u53f3. */ //log.error(\"{}\",idWorker.nextId()); } long end = System.currentTimeMillis()-start; System.out.println(end); System.out.println(count); } public static void main(String[] args) { /** case1: \u6d4b\u8bd5\u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570? * \u7ed3\u8bba: \u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570300w+ */ //testPerSecondProductIdNums(); /** case2: \u5355\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid,\u9a8c\u8bc1id\u662f\u5426\u6709\u91cd\u590d? * \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ //testProductId(1,2,10000);//\u9a8c\u8bc1\u901a\u8fc7! //testProductId(1,2,20000);//\u9a8c\u8bc1\u901a\u8fc7! /** case3: \u591a\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid, \u5168\u90e8id\u5728\u5168\u5c40\u8303\u56f4\u5185\u662f\u5426\u4f1a\u91cd\u590d? * \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ try { testProductIdByMoreThread(1,2,100000);//\u5355\u673a\u6d4b\u8bd5\u6b64\u573a\u666f,\u6027\u80fd\u635f\u5931\u81f3\u5c11\u6298\u534a! } catch (InterruptedException e) { e.printStackTrace(); } } } \u6d4b\u8bd5\u7528\u4f8b\uff1a /** case1: \u6d4b\u8bd5\u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570? \u7ed3\u8bba: \u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570300w+ */ //testPerSecondProductIdNums(); /** case2: \u5355\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid,\u9a8c\u8bc1id\u662f\u5426\u6709\u91cd\u590d? \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ //testProductId(1,2,10000);//\u9a8c\u8bc1\u901a\u8fc7! //testProductId(1,2,20000);//\u9a8c\u8bc1\u901a\u8fc7! /** case3: \u591a\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid, \u5168\u90e8id\u5728\u5168\u5c40\u8303\u56f4\u5185\u662f\u5426\u4f1a\u91cd\u590d? \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ try { testProductIdByMoreThread(1,2,100000);//\u5355\u673a\u6d4b\u8bd5\u6b64\u573a\u666f,\u6027\u80fd\u635f\u5931\u81f3\u5c11\u6298\u534a! } catch (InterruptedException e) { e.printStackTrace(); } 4.snowflake\u7b97\u6cd5\u63a8\u5bfc\u548c\u6f14\u7b97\u8fc7\u7a0b \u8bf4\u660e\uff1a \u6f14\u7b97\u4f7f\u7528\u7684\u5bf9\u8c61\u5b9e\u4f8b\uff1aSnowflakeIdFactory idWorker = new SnowflakeIdFactory(1, 2); \u8fd0\u884c\u65f6\u6570\u636eworkerId\uff1d1\uff0cdatacenterId\uff1d2\uff0c\u5206\u522b\u8868\u793a\u673a\u5668\u5b9e\u4f8b\u7684\u751f\u4ea7\u8005\u7f16\u53f7\uff0c\u6570\u636e\u4e2d\u5fc3\u7f16\u53f7\uff1b sequence\uff1d0\u8868\u793a\u6bcf\u6beb\u79d2\u751f\u4ea7ID\u4ece0\u5f00\u59cb\u8ba1\u6570\u9012\u589e\uff1b \u4ee5\u4e0b\u6f14\u7b97\u57fa\u4e8e\u65f6\u95f4\u6233\uff1d1482394743339\u65f6\u523b\u8fdb\u884c\u63a8\u5bfc\u3002 \u4e00\u53e5\u8bdd\u63cf\u8ff0\uff1a\u4ee5\u4e0b\u6f14\u7b97\u6a21\u62df\u4e861482394743339\u8fd9\u4e00\u6beb\u79d2\u65f6\u523b\uff0cworkerId\uff1d1\uff0cdatacenterId\uff1d2\u7684id\u751f\u6210\u5668\uff0c\u751f\u4ea7\u7b2c\u4e00\u4e2aid\u7684\u8fc7\u7a0b\u3002 \uff08\u56fe\u7247\u539f\u521b\uff0c\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\uff0c\u753b\u56fe\u4e0d\u6613\uff0c\u8c22\u8c22\uff01\uff09 end\uff01 \u53c2\u8003 https://github.com/twitter/snowflake http://www.cnblogs.com/relucent/p/4955340.html","title":"\u8be6\u89e3Twitter snowflake\u5f00\u6e90\u5206\u5e03\u5f0f\u81ea\u589eID\u7b97\u6cd5\uff0c\u9644\u6f14\u7b97\u9a8c\u8bc1\u8fc7\u7a0b"},{"location":"\u63a8\u8350/\u8be6\u89e3Twitter snowflake\u5f00\u6e90\u5206\u5e03\u5f0f\u81ea\u589eID\u7b97\u6cd5\uff0c\u9644\u6f14\u7b97\u9a8c\u8bc1\u8fc7\u7a0b/#1snowflake","text":"\u200b \u4e92\u8054\u7f51\u5feb\u901f\u53d1\u5c55\u7684\u4eca\u5929\uff0c\u5206\u5e03\u5f0f\u5e94\u7528\u7cfb\u7edf\u5df2\u7ecf\u89c1\u602a\u4e0d\u602a\uff0c\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5404\u79cd\u5404\u6837\u7684ID\uff0c\u65e2\u7136\u662fID\u90a3\u4e48\u5fc5\u7136\u662f\u8981\u4fdd\u8bc1\u5168\u5c40\u552f\u4e00\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u4e0d\u540c\u5f53\u4e1a\u52a1\u8fd8\u9700\u8981\u4e0d\u540c\u7684\u7279\u6027\uff0c\u6bd4\u5982\u50cf\u5e76\u53d1\u5de8\u5927\u7684\u4e1a\u52a1\u8981\u6c42ID\u751f\u6210\u6548\u7387\u9ad8\uff0c\u541e\u5410\u5927\uff1b\u6bd4\u5982\u67d0\u4e9b\u94f6\u884c\u7c7b\u4e1a\u52a1\uff0c\u9700\u8981\u6309\u6bcf\u65e5\u65e5\u671f\u5236\u5b9a\u4ea4\u6613\u6d41\u6c34\u53f7\uff1b\u53c8\u6bd4\u5982\u6211\u4eec\u5e0c\u671b\u7528\u6237\u7684ID\u662f\u968f\u673a\u7684\uff0c\u65e0\u5e8f\u7684\uff0c\u7eaf\u6570\u5b57\u7684\uff0c\u4e14\u4f4d\u6570\u957f\u5ea6\u662f\u5c0f\u4e8e10\u4f4d\u7684\u3002\u7b49\u7b49\uff0c\u4e0d\u540c\u7684\u4e1a\u52a1\u573a\u666f\u9700\u8981\u7684ID\u7279\u6027\u5404\u4e0d\u4e00\u6837\uff0c\u4e8e\u662f\uff0c\u884d\u751f\u4e86\u5404\u79cdID\u751f\u6210\u5668\uff0c\u4f46\u5927\u591a\u6570\u5229\u7528\u6570\u636e\u5e93\u63a7\u5236ID\u7684\u751f\u6210\uff0c\u6027\u80fd\u53d7\u6570\u636e\u5e93\u5e76\u53d1\u80fd\u529b\u9650\u5236\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u6b3e\u4e0d\u9700\u8981\u4f9d\u8d56\u4efb\u4f55\u4e2d\u95f4\u4ef6\uff08\u5982\u6570\u636e\u5e93\uff0c\u5206\u5e03\u5f0f\u7f13\u5b58\u670d\u52a1\u7b49\uff09\u7684ID\u751f\u6210\u5668\u5462\uff1f\u672c\u7740\u53d6\u4e4b\u4e8e\u5f00\u6e90\uff0c\u7528\u4e4b\u4e8e\u5f00\u6e90\u7684\u539f\u5219\uff0c\u4eca\u5929\uff0c\u7279\u6b64\u4ecb\u7ecdTwitter\u5f00\u6e90\u7684\u4e00\u6b3e\u5206\u5e03\u5f0f\u81ea\u589eID\u7b97\u6cd5snowflake\uff0c\u5e76\u9644\u4e0a\u7b97\u6cd5\u539f\u7406\u63a8\u5bfc\u548c\u6f14\u7b97\u8fc7\u7a0b\uff01 snowflake\u7b97\u6cd5\u662f\u4e00\u6b3e\u672c\u5730\u751f\u6210\u7684\uff08ID\u751f\u6210\u8fc7\u7a0b\u4e0d\u4f9d\u8d56\u4efb\u4f55\u4e2d\u95f4\u4ef6\uff0c\u65e0\u7f51\u7edc\u901a\u4fe1\uff09\uff0c\u4fdd\u8bc1ID\u5168\u5c40\u552f\u4e00\uff0c\u5e76\u4e14ID\u603b\u4f53\u6709\u5e8f\u9012\u589e\uff0c\u6027\u80fd\u6bcf\u79d2\u751f\u6210300w\uff0b\u3002","title":"1.snowflake\u7b80\u4ecb"},{"location":"\u63a8\u8350/\u8be6\u89e3Twitter snowflake\u5f00\u6e90\u5206\u5e03\u5f0f\u81ea\u589eID\u7b97\u6cd5\uff0c\u9644\u6f14\u7b97\u9a8c\u8bc1\u8fc7\u7a0b/#2snowflake","text":"snowflake\u751f\u4ea7\u7684ID\u662f\u4e00\u4e2a18\u4f4d\u7684long\u578b\u6570\u5b57\uff0c\u4e8c\u8fdb\u5236\u7ed3\u6784\u8868\u793a\u5982\u4e0b(\u6bcf\u90e8\u5206\u7528-\u5206\u5f00): 0 - 00000000 00000000 00000000 00000000 00000000 0 - 00000 - 00000 - 00000000 0000 \u7b2c\u4e00\u4f4d\u672a\u4f7f\u7528\uff0c\u63a5\u4e0b\u6765\u768441\u4f4d\u4e3a\u6beb\u79d2\u7ea7\u65f6\u95f4(41\u4f4d\u7684\u957f\u5ea6\u53ef\u4ee5\u4f7f\u752869\u5e74\uff0c\u4ece1970-01-01 08:00:00)\uff0c\u7136\u540e\u662f5\u4f4ddatacenterId\uff08\u6700\u5927\u652f\u63012^5\uff1d32\u4e2a\uff0c\u4e8c\u8fdb\u5236\u8868\u793a\u4ece00000-11111\uff0c\u4e5f\u5373\u662f\u5341\u8fdb\u52360-31\uff09\uff0c\u548c5\u4f4dworkerId\uff08\u6700\u5927\u652f\u63012^5\uff1d32\u4e2a\uff0c\u539f\u7406\u540cdatacenterId\uff09\uff0c\u6240\u4ee5datacenterId*workerId\u6700\u591a\u652f\u6301\u90e8\u7f721024\u4e2a\u8282\u70b9\uff0c\u6700\u540e12\u4f4d\u662f\u6beb\u79d2\u5185\u7684\u8ba1\u6570\uff0812\u4f4d\u7684\u8ba1\u6570\u987a\u5e8f\u53f7\u652f\u6301\u6bcf\u4e2a\u8282\u70b9\u6bcf\u6beb\u79d2\u4ea7\u751f2^12\uff1d4096\u4e2aID\u5e8f\u53f7\uff09. \u6240\u6709\u4f4d\u6570\u52a0\u8d77\u6765\u517164\u4f4d\uff0c\u6070\u597d\u662f\u4e00\u4e2aLong\u578b\uff08\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a18\uff09. \u5355\u53f0\u673a\u5668\u5b9e\u4f8b\uff0c\u901a\u8fc7\u65f6\u95f4\u6233\u4fdd\u8bc1\u524d41\u4f4d\u662f\u552f\u4e00\u7684\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u591a\u53f0\u673a\u5668\u5b9e\u4f8b\u4e0b\uff0c\u901a\u8fc7\u5bf9\u6bcf\u4e2a\u673a\u5668\u5b9e\u4f8b\u5206\u914d\u4e0d\u540c\u7684datacenterId\u548cworkerId\u907f\u514d\u4e2d\u95f4\u768410\u4f4d\u78b0\u649e\u3002\u6700\u540e12\u4f4d\u6bcf\u6beb\u79d2\u4ece0\u9012\u589e\u751f\u4ea7ID\uff0c\u518d\u63d0\u4e00\u6b21\uff1a\u6bcf\u6beb\u79d2\u6700\u591a\u751f\u62104096\u4e2aID\uff0c\u6bcf\u79d2\u53ef\u8fbe4096000\u4e2a\u3002\u7406\u8bba\u4e0a\uff0c\u53ea\u8981CPU\u8ba1\u7b97\u80fd\u529b\u8db3\u591f\uff0c\u5355\u673a\u6bcf\u79d2\u53ef\u751f\u4ea7400\u591a\u4e07\u4e2a\uff0c\u5b9e\u6d4b300w+\uff0c\u6548\u7387\u4e4b\u9ad8\u7531\u6b64\u53ef\u89c1\u3002 \uff08\u8be5\u8282\u6539\u7f16\u81ea\uff1ahttp://www.cnblogs.com/relucent/p/4955340.html\uff09","title":"2.snowflake\u7b97\u6cd5\u539f\u7406"},{"location":"\u63a8\u8350/\u8be6\u89e3Twitter snowflake\u5f00\u6e90\u5206\u5e03\u5f0f\u81ea\u589eID\u7b97\u6cd5\uff0c\u9644\u6f14\u7b97\u9a8c\u8bc1\u8fc7\u7a0b/#3snowflakejava","text":"@ToString @Slf4j public class SnowflakeIdFactory { private final long twepoch = 1288834974657L; private final long workerIdBits = 5L; private final long datacenterIdBits = 5L; private final long maxWorkerId = -1L ^ (-1L << workerIdBits); private final long maxDatacenterId = -1L ^ (-1L << datacenterIdBits); private final long sequenceBits = 12L; private final long workerIdShift = sequenceBits; private final long datacenterIdShift = sequenceBits + workerIdBits; private final long timestampLeftShift = sequenceBits + workerIdBits + datacenterIdBits; private final long sequenceMask = -1L ^ (-1L << sequenceBits); private long workerId; private long datacenterId; private long sequence = 0L; private long lastTimestamp = -1L; public SnowflakeIdFactory(long workerId, long datacenterId) { if (workerId > maxWorkerId || workerId < 0) { throw new IllegalArgumentException(String.format(\"worker Id can't be greater than %d or less than 0\", maxWorkerId)); } if (datacenterId > maxDatacenterId || datacenterId < 0) { throw new IllegalArgumentException(String.format(\"datacenter Id can't be greater than %d or less than 0\", maxDatacenterId)); } this.workerId = workerId; this.datacenterId = datacenterId; } public synchronized long nextId() { long timestamp = timeGen(); if (timestamp < lastTimestamp) { //\u670d\u52a1\u5668\u65f6\u949f\u88ab\u8c03\u6574\u4e86,ID\u751f\u6210\u5668\u505c\u6b62\u670d\u52a1. throw new RuntimeException(String.format(\"Clock moved backwards. Refusing to generate id for %d milliseconds\", lastTimestamp - timestamp)); } if (lastTimestamp == timestamp) { sequence = (sequence + 1) & sequenceMask; if (sequence == 0) { timestamp = tilNextMillis(lastTimestamp); } } else { sequence = 0L; } lastTimestamp = timestamp; return ((timestamp - twepoch) << timestampLeftShift) | (datacenterId << datacenterIdShift) | (workerId << workerIdShift) | sequence; } protected long tilNextMillis(long lastTimestamp) { long timestamp = timeGen(); while (timestamp <= lastTimestamp) { timestamp = timeGen(); } return timestamp; } protected long timeGen() { return System.currentTimeMillis(); } public static void testProductIdByMoreThread(int dataCenterId, int workerId, int n) throws InterruptedException { List<Thread> tlist = new ArrayList<>(); Set<Long> setAll = new HashSet<>(); CountDownLatch cdLatch = new CountDownLatch(10); long start = System.currentTimeMillis(); int threadNo = dataCenterId; Map<String,SnowflakeIdFactory> idFactories = new HashMap<>(); for(int i=0;i<10;i++){ //\u7528\u7ebf\u7a0b\u540d\u79f0\u505amap key. idFactories.put(\"snowflake\"+i,new SnowflakeIdFactory(workerId, threadNo++)); } for(int i=0;i<10;i++){ Thread temp =new Thread(new Runnable() { @Override public void run() { Set<Long> setId = new HashSet<>(); SnowflakeIdFactory idWorker = idFactories.get(Thread.currentThread().getName()); for(int j=0;j<n;j++){ setId.add(idWorker.nextId()); } synchronized (setAll){ setAll.addAll(setId); log.info(\"{}\u751f\u4ea7\u4e86{}\u4e2aid,\u5e76\u6210\u529f\u52a0\u5165\u5230setAll\u4e2d.\",Thread.currentThread().getName(),n); } cdLatch.countDown(); } },\"snowflake\"+i); tlist.add(temp); } for(int j=0;j<10;j++){ tlist.get(j).start(); } cdLatch.await(); long end1 = System.currentTimeMillis() - start; log.info(\"\u5171\u8017\u65f6:{}\u6beb\u79d2,\u9884\u671f\u5e94\u8be5\u751f\u4ea7{}\u4e2aid, \u5b9e\u9645\u5408\u5e76\u603b\u8ba1\u751f\u6210ID\u4e2a\u6570:{}\",end1,10*n,setAll.size()); } public static void testProductId(int dataCenterId, int workerId, int n){ SnowflakeIdFactory idWorker = new SnowflakeIdFactory(workerId, dataCenterId); SnowflakeIdFactory idWorker2 = new SnowflakeIdFactory(workerId+1, dataCenterId); Set<Long> setOne = new HashSet<>(); Set<Long> setTow = new HashSet<>(); long start = System.currentTimeMillis(); for (int i = 0; i < n; i++) { setOne.add(idWorker.nextId());//\u52a0\u5165set } long end1 = System.currentTimeMillis() - start; log.info(\"\u7b2c\u4e00\u6279ID\u9884\u8ba1\u751f\u6210{}\u4e2a,\u5b9e\u9645\u751f\u6210{}\u4e2a<<<<*>>>>\u5171\u8017\u65f6:{}\",n,setOne.size(),end1); for (int i = 0; i < n; i++) { setTow.add(idWorker2.nextId());//\u52a0\u5165set } long end2 = System.currentTimeMillis() - start; log.info(\"\u7b2c\u4e8c\u6279ID\u9884\u8ba1\u751f\u6210{}\u4e2a,\u5b9e\u9645\u751f\u6210{}\u4e2a<<<<*>>>>\u5171\u8017\u65f6:{}\",n,setTow.size(),end2); setOne.addAll(setTow); log.info(\"\u5408\u5e76\u603b\u8ba1\u751f\u6210ID\u4e2a\u6570:{}\",setOne.size()); } public static void testPerSecondProductIdNums(){ SnowflakeIdFactory idWorker = new SnowflakeIdFactory(1, 2); long start = System.currentTimeMillis(); int count = 0; for (int i = 0; System.currentTimeMillis()-start<1000; i++,count=i) { /** \u6d4b\u8bd5\u65b9\u6cd5\u4e00: \u6b64\u7528\u6cd5\u7eaf\u7cb9\u7684\u751f\u4ea7ID,\u6bcf\u79d2\u751f\u4ea7ID\u4e2a\u6570\u4e3a300w+ */ idWorker.nextId(); /** \u6d4b\u8bd5\u65b9\u6cd5\u4e8c: \u5728log\u4e2d\u6253\u5370,\u540c\u65f6\u83b7\u53d6ID,\u6b64\u7528\u6cd5\u751f\u4ea7ID\u7684\u80fd\u529b\u53d7\u9650\u4e8elog.error()\u7684\u541e\u5410\u80fd\u529b. * \u6bcf\u79d2\u5f98\u5f8a\u572810\u4e07\u5de6\u53f3. */ //log.error(\"{}\",idWorker.nextId()); } long end = System.currentTimeMillis()-start; System.out.println(end); System.out.println(count); } public static void main(String[] args) { /** case1: \u6d4b\u8bd5\u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570? * \u7ed3\u8bba: \u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570300w+ */ //testPerSecondProductIdNums(); /** case2: \u5355\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid,\u9a8c\u8bc1id\u662f\u5426\u6709\u91cd\u590d? * \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ //testProductId(1,2,10000);//\u9a8c\u8bc1\u901a\u8fc7! //testProductId(1,2,20000);//\u9a8c\u8bc1\u901a\u8fc7! /** case3: \u591a\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid, \u5168\u90e8id\u5728\u5168\u5c40\u8303\u56f4\u5185\u662f\u5426\u4f1a\u91cd\u590d? * \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ try { testProductIdByMoreThread(1,2,100000);//\u5355\u673a\u6d4b\u8bd5\u6b64\u573a\u666f,\u6027\u80fd\u635f\u5931\u81f3\u5c11\u6298\u534a! } catch (InterruptedException e) { e.printStackTrace(); } } } \u6d4b\u8bd5\u7528\u4f8b\uff1a /** case1: \u6d4b\u8bd5\u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570? \u7ed3\u8bba: \u6bcf\u79d2\u751f\u4ea7id\u4e2a\u6570300w+ */ //testPerSecondProductIdNums(); /** case2: \u5355\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid,\u9a8c\u8bc1id\u662f\u5426\u6709\u91cd\u590d? \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ //testProductId(1,2,10000);//\u9a8c\u8bc1\u901a\u8fc7! //testProductId(1,2,20000);//\u9a8c\u8bc1\u901a\u8fc7! /** case3: \u591a\u7ebf\u7a0b-\u6d4b\u8bd5\u591a\u4e2a\u751f\u4ea7\u8005\u540c\u65f6\u751f\u4ea7N\u4e2aid, \u5168\u90e8id\u5728\u5168\u5c40\u8303\u56f4\u5185\u662f\u5426\u4f1a\u91cd\u590d? \u7ed3\u8bba: \u9a8c\u8bc1\u901a\u8fc7,\u6ca1\u6709\u91cd\u590d. */ try { testProductIdByMoreThread(1,2,100000);//\u5355\u673a\u6d4b\u8bd5\u6b64\u573a\u666f,\u6027\u80fd\u635f\u5931\u81f3\u5c11\u6298\u534a! } catch (InterruptedException e) { e.printStackTrace(); }","title":"3.snowflake\u7b97\u6cd5\u6e90\u7801\uff08java\u7248\uff09"},{"location":"\u63a8\u8350/\u8be6\u89e3Twitter snowflake\u5f00\u6e90\u5206\u5e03\u5f0f\u81ea\u589eID\u7b97\u6cd5\uff0c\u9644\u6f14\u7b97\u9a8c\u8bc1\u8fc7\u7a0b/#4snowflake","text":"\u8bf4\u660e\uff1a \u6f14\u7b97\u4f7f\u7528\u7684\u5bf9\u8c61\u5b9e\u4f8b\uff1aSnowflakeIdFactory idWorker = new SnowflakeIdFactory(1, 2); \u8fd0\u884c\u65f6\u6570\u636eworkerId\uff1d1\uff0cdatacenterId\uff1d2\uff0c\u5206\u522b\u8868\u793a\u673a\u5668\u5b9e\u4f8b\u7684\u751f\u4ea7\u8005\u7f16\u53f7\uff0c\u6570\u636e\u4e2d\u5fc3\u7f16\u53f7\uff1b sequence\uff1d0\u8868\u793a\u6bcf\u6beb\u79d2\u751f\u4ea7ID\u4ece0\u5f00\u59cb\u8ba1\u6570\u9012\u589e\uff1b \u4ee5\u4e0b\u6f14\u7b97\u57fa\u4e8e\u65f6\u95f4\u6233\uff1d1482394743339\u65f6\u523b\u8fdb\u884c\u63a8\u5bfc\u3002 \u4e00\u53e5\u8bdd\u63cf\u8ff0\uff1a\u4ee5\u4e0b\u6f14\u7b97\u6a21\u62df\u4e861482394743339\u8fd9\u4e00\u6beb\u79d2\u65f6\u523b\uff0cworkerId\uff1d1\uff0cdatacenterId\uff1d2\u7684id\u751f\u6210\u5668\uff0c\u751f\u4ea7\u7b2c\u4e00\u4e2aid\u7684\u8fc7\u7a0b\u3002 \uff08\u56fe\u7247\u539f\u521b\uff0c\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\uff0c\u753b\u56fe\u4e0d\u6613\uff0c\u8c22\u8c22\uff01\uff09 end\uff01 \u53c2\u8003 https://github.com/twitter/snowflake http://www.cnblogs.com/relucent/p/4955340.html","title":"4.snowflake\u7b97\u6cd5\u63a8\u5bfc\u548c\u6f14\u7b97\u8fc7\u7a0b"}]}